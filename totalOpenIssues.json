{
  "data": {
    "total_count": 393,
    "incomplete_results": false,
    "items": [
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29434",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29434/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29434/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29434/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29434",
        "id": 2532343748,
        "node_id": "I_kwDOAAjKyc6W8H_E",
        "number": 29434,
        "title": "Version 168 accessing undefined variable in onContextRestore",
        "user": {
          "login": "andrewhodel",
          "id": 741705,
          "node_id": "MDQ6VXNlcjc0MTcwNQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/741705?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewhodel",
          "html_url": "https://github.com/andrewhodel",
          "followers_url": "https://api.github.com/users/andrewhodel/followers",
          "following_url": "https://api.github.com/users/andrewhodel/following{/other_user}",
          "gists_url": "https://api.github.com/users/andrewhodel/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/andrewhodel/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/andrewhodel/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewhodel/orgs",
          "repos_url": "https://api.github.com/users/andrewhodel/repos",
          "events_url": "https://api.github.com/users/andrewhodel/events{/privacy}",
          "received_events_url": "https://api.github.com/users/andrewhodel/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-17T23:09:02Z",
        "updated_at": "2024-09-17T23:09:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nhttps://github.com/mrdoob/three.js/blob/111670613f1c475ed6e9c2d15056f960f0ad6f1b/build/three.module.js#L29320\r\n\r\nIn `three.module.min.js` this code is minified and as shown in this screenshot:\r\n\r\n<img width=\"399\" alt=\"Screenshot 2024-09-17 at 6 03 55 PM\" src=\"https://github.com/user-attachments/assets/59430799-1df7-4bc9-bf91-b9f7fda0997f\">\r\n\r\n`info.autoReset` or `tt.autoReset` is not accessible as `info` or `tt` is undefined.\r\n\r\n\r\n### Reproduction steps\r\n\r\n1. Add a group of meshes.\r\n2. Remove group.\r\n3. Readd group with slightly modified meshes, more until the context is taken.\r\n\r\n\r\n### Code\r\n\r\nThis is only a group of meshes displayed and removed repeatedly.\r\n\r\nOnce the WebGL context is lost, this error happens.\r\n\r\n### Live example\r\n\r\n* [jsfiddle-latest-release WebGLRenderer](https://jsfiddle.net/3mrkqyea/)\r\n* [jsfiddle-dev WebGLRenderer](https://jsfiddle.net/gcqx26jv/)\r\n* [jsfiddle-latest-release WebGPURenderer](https://jsfiddle.net/8L2jkmx7/)\r\n* [jsfiddle-dev WebGPURenderer](https://jsfiddle.net/L3n1w4yh/)\r\n\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n168\r\n\r\n### Device\r\n\r\nMobile\r\n\r\n### Browser\r\n\r\nSafari\r\n\r\n### OS\r\n\r\niOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29434/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29434/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29432",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29432/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29432/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29432/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29432",
        "id": 2532070968,
        "node_id": "I_kwDOAAjKyc6W7FY4",
        "number": 29432,
        "title": "MaterialX: Add support for invert node",
        "user": {
          "login": "beersandrew",
          "id": 94316446,
          "node_id": "U_kgDOBZ8nng",
          "avatar_url": "https://avatars.githubusercontent.com/u/94316446?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/beersandrew",
          "html_url": "https://github.com/beersandrew",
          "followers_url": "https://api.github.com/users/beersandrew/followers",
          "following_url": "https://api.github.com/users/beersandrew/following{/other_user}",
          "gists_url": "https://api.github.com/users/beersandrew/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/beersandrew/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/beersandrew/subscriptions",
          "organizations_url": "https://api.github.com/users/beersandrew/orgs",
          "repos_url": "https://api.github.com/users/beersandrew/repos",
          "events_url": "https://api.github.com/users/beersandrew/events{/privacy}",
          "received_events_url": "https://api.github.com/users/beersandrew/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-17T20:19:43Z",
        "updated_at": "2024-09-17T20:25:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nInvert node is not currently supported in the MaterialXLoader\n\n### Solution\n\nAdd support for the invert node\n\n### Alternatives\n\nI have not considered alternatives\n\n### Additional context\n\nDescription: \r\n\r\n```\r\ninvert: subtract the incoming float/color/vector from \"amount\" in all channels, outputting: amount - in.\r\n- in (float or colorN or vectorN): the value or nodename for the primary input\r\n- amount (same type as in or float): the value or nodename to subtract from; default is 1.0 in all channels\r\n```\r\n\r\nfrom the [spec](https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/documents/Specification/MaterialX.Specification.md#math-nodes)",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29432/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29432/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29429",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29429/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29429/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29429/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29429",
        "id": 2529811225,
        "node_id": "I_kwDOAAjKyc6WydsZ",
        "number": 29429,
        "title": "WebGLRenderTarget: Allow opt-in for output transforms / image formation",
        "user": {
          "login": "donmccurdy",
          "id": 1848368,
          "node_id": "MDQ6VXNlcjE4NDgzNjg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1848368?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/donmccurdy",
          "html_url": "https://github.com/donmccurdy",
          "followers_url": "https://api.github.com/users/donmccurdy/followers",
          "following_url": "https://api.github.com/users/donmccurdy/following{/other_user}",
          "gists_url": "https://api.github.com/users/donmccurdy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/donmccurdy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/donmccurdy/subscriptions",
          "organizations_url": "https://api.github.com/users/donmccurdy/orgs",
          "repos_url": "https://api.github.com/users/donmccurdy/repos",
          "events_url": "https://api.github.com/users/donmccurdy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/donmccurdy/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-17T01:59:04Z",
        "updated_at": "2024-09-17T20:25:21Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nIn recent three.js versions,`renderer.outputColorSpace`, `render.toneMapping`, and `renderer.toneMappingExposure` (jointly, the image formation step) are applied only when writing to the canvas drawing buffer (or WebXR) and disabled when writing to a render target. I think that's the right default. But it does constrain users' choices, and can force an additional (expensive!) pass in a post-processing stack. Based on feedback, this is problematic for mobile applications.\r\n\r\n### Solution\r\n\r\nI'd like to suggest that we add a new property to WebGLRenderTarget, perhaps called `target.needsOutputTransform`. If enabled, WebGLRenderer would apply ...\r\n\r\n- renderer.toneMapping\r\n- renderer.toneMappingExposure\r\n- renderer.lookCDL (#28544)\r\n\r\nwhen drawing to that render target. I believe `renderer.outputColorSpace` is not relevant here, since the render target already has a `.colorSpace` property.\r\n\r\n### Alternatives\r\n\r\nAlternatively, we could make WebGLRenderer always apply these settings when drawing to a render target, and require explicit changes to the renderer's properties by the user. I expect this would be a significant breaking change, however.\r\n\r\n### Additional context\r\n\r\nI don't know what this looks like in WebGPURenderer, or whether similar changes would be required there.\r\n\r\n/cc @WestLangley ",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29429/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29429/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29426",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29426/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29426/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29426/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29426",
        "id": 2529483704,
        "node_id": "I_kwDOAAjKyc6WxNu4",
        "number": 29426,
        "title": "MaterialX: Add support for Separate2, Separate3, Separate4 nodes in MaterialXLoader",
        "user": {
          "login": "beersandrew",
          "id": 94316446,
          "node_id": "U_kgDOBZ8nng",
          "avatar_url": "https://avatars.githubusercontent.com/u/94316446?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/beersandrew",
          "html_url": "https://github.com/beersandrew",
          "followers_url": "https://api.github.com/users/beersandrew/followers",
          "following_url": "https://api.github.com/users/beersandrew/following{/other_user}",
          "gists_url": "https://api.github.com/users/beersandrew/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/beersandrew/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/beersandrew/subscriptions",
          "organizations_url": "https://api.github.com/users/beersandrew/orgs",
          "repos_url": "https://api.github.com/users/beersandrew/repos",
          "events_url": "https://api.github.com/users/beersandrew/events{/privacy}",
          "received_events_url": "https://api.github.com/users/beersandrew/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-16T20:56:22Z",
        "updated_at": "2024-09-17T21:19:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nSeparate nodes are not currently supported in the MaterialXLoader\r\n\r\n### Solution\r\n\r\nSupport for separate2, separate3, and separate4 nodes\r\n\r\n### Alternatives\r\n\r\nI have not considered alternatives\r\n\r\n### Additional context\r\n\r\nI've created a [fork](https://github.com/beersandrew/three.js/tree/materialX-separate) with a [sample file](https://github.com/AcademySoftwareFoundation/MaterialX/commit/103c9212b7b8ba39fab0f0cfc7245c9ea657961b#diff-0d3ecede40f381c634d3e6e492723fa8f4d1c1dc989bad47960b442ecc663121)\r\n\r\nIf you run the fork locally and go to `/examples/?q=materialx#webgpu_loader_materialx` you can see this material shows up as black (2nd shaderball on the top row)  currently with an error that separate2 is not implemented. Images below of this state as well as the working state in the MaterialXGraphEditor\r\n\r\nError state\r\n![Screenshot 2024-09-16 at 16 47 04](https://github.com/user-attachments/assets/ecb11f2c-4d2a-47d9-adba-e77ba2ce18ac)\r\n\r\n\r\nExpected state\r\n![Screenshot 2024-09-16 at 16 55 06](https://github.com/user-attachments/assets/b094f48f-2042-4ea2-84b5-d8cd13741d3a)\r\n\r\n\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29426/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29426/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29417",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29417/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29417/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29417/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29417",
        "id": 2527170976,
        "node_id": "I_kwDOAAjKyc6WoZGg",
        "number": 29417,
        "title": "ArcballControls error on mobile devices",
        "user": {
          "login": "krotalias",
          "id": 32539739,
          "node_id": "MDQ6VXNlcjMyNTM5NzM5",
          "avatar_url": "https://avatars.githubusercontent.com/u/32539739?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/krotalias",
          "html_url": "https://github.com/krotalias",
          "followers_url": "https://api.github.com/users/krotalias/followers",
          "following_url": "https://api.github.com/users/krotalias/following{/other_user}",
          "gists_url": "https://api.github.com/users/krotalias/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/krotalias/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/krotalias/subscriptions",
          "organizations_url": "https://api.github.com/users/krotalias/orgs",
          "repos_url": "https://api.github.com/users/krotalias/repos",
          "events_url": "https://api.github.com/users/krotalias/events{/privacy}",
          "received_events_url": "https://api.github.com/users/krotalias/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-15T20:02:27Z",
        "updated_at": "2024-09-16T11:10:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nPlease, read:\r\n\r\nhttps://discourse.threejs.org/t/arcballcontrol-problems-on-mobile/70160/3\n\n### Reproduction steps\n\n1.  Set  camera position after the creation of ArcballControls object.\r\n2. On mobile devices, the model vanishes because this._nearPos0 < 0 in ArcballControls.js\r\n3. It does not depend on the browser used.\r\n\n\n### Code\n\n```js\r\n// code goes here\r\n```\r\n\n\n### Live example\n\n* [jsfiddle-latest-release WebGLRenderer](https://jsfiddle.net/3mrkqyea/)\r\n* [jsfiddle-dev WebGLRenderer](https://jsfiddle.net/gcqx26jv/)\r\n* [jsfiddle-latest-release WebGPURenderer](https://jsfiddle.net/8L2jkmx7/)\r\n* [jsfiddle-dev WebGPURenderer](https://jsfiddle.net/L3n1w4yh/)\r\n\n\n### Screenshots\n\n_No response_\n\n### Version\n\nr168\n\n### Device\n\nMobile\n\n### Browser\n\nSafari\n\n### OS\n\niOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29417/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29417/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29401",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29401/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29401/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29401/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29401",
        "id": 2524015728,
        "node_id": "I_kwDOAAjKyc6WcWxw",
        "number": 29401,
        "title": "StorageBuffer access in wgslFn and tslFn vertex shaders",
        "user": {
          "login": "Spiri0",
          "id": 69024222,
          "node_id": "MDQ6VXNlcjY5MDI0MjIy",
          "avatar_url": "https://avatars.githubusercontent.com/u/69024222?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Spiri0",
          "html_url": "https://github.com/Spiri0",
          "followers_url": "https://api.github.com/users/Spiri0/followers",
          "following_url": "https://api.github.com/users/Spiri0/following{/other_user}",
          "gists_url": "https://api.github.com/users/Spiri0/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Spiri0/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Spiri0/subscriptions",
          "organizations_url": "https://api.github.com/users/Spiri0/orgs",
          "repos_url": "https://api.github.com/users/Spiri0/repos",
          "events_url": "https://api.github.com/users/Spiri0/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Spiri0/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-13T06:53:20Z",
        "updated_at": "2024-09-16T09:08:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nWith a dataTexture you can store all vertices so that you have access to all vertices in the shader. With WebGPU, however, it is more desirable to handle this in a more direct and modern way. The storage node can be used to store the vertex data in a buffer. This is done in the WebGPU particle examples. I'm looking in the webgpu backend/nodes/utils how I can now access it in the vertex shader. The vertexIndex node is very useful. What I haven't found yet is an equivalent to:\r\n```\r\n@group(0) @binding(0) var<storage, read> vertexData: array<f32>; // position\r\n```\r\nThis is what I use here in my native webgpu code example:\r\n\r\nhttps://codepen.io/Spiri0/pen/poXBpdy\r\n\r\nWith three.js we can store the data in vec3 type:\r\n```\r\nconst vertexBuffer = () => storage( new THREE.StorageInstancedBufferAttribute( positionAttribute.array, 3 ), 'vec3', positionAttribute.array.length );\r\n```\r\nso we will certainly be able to retrieve the vertex data in the shader more elegantly with .xyz for the respective vertex index. \r\nProvided we can currently access the storage buffer in the vertex shader with wgslFn and tslFn, and I'm not sure if that's possible. If not, this would be a desirable expansion as this topic is also important for DrawIndirect topics in the future\r\n\r\n### Solution\r\n\r\nThe solution would be a three.js analogue to what I do in my CodePen example. \r\nStore the geometry attribute arrays in a storageBuffer and make them accessible in the vertex shader\r\n\r\n### Alternatives\r\n\r\nThis is currently possible by storing the attributeArrays in dataTextures. Therefore the label “Enhancement” would be suitable here\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29401/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29401/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29393",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29393/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29393/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29393/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29393",
        "id": 2521840257,
        "node_id": "I_kwDOAAjKyc6WUDqB",
        "number": 29393,
        "title": "TSL: Using a custom vertexNode is breaking the normalLocal of a BatchedMesh",
        "user": {
          "login": "Robpayot",
          "id": 5593293,
          "node_id": "MDQ6VXNlcjU1OTMyOTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5593293?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Robpayot",
          "html_url": "https://github.com/Robpayot",
          "followers_url": "https://api.github.com/users/Robpayot/followers",
          "following_url": "https://api.github.com/users/Robpayot/following{/other_user}",
          "gists_url": "https://api.github.com/users/Robpayot/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Robpayot/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Robpayot/subscriptions",
          "organizations_url": "https://api.github.com/users/Robpayot/orgs",
          "repos_url": "https://api.github.com/users/Robpayot/repos",
          "events_url": "https://api.github.com/users/Robpayot/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Robpayot/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5252109168,
            "node_id": "LA_kwDOAAjKyc8AAAABOQzTcA",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/TSL",
            "name": "TSL",
            "color": "465B1F",
            "default": false,
            "description": "Three.js Shading Language"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T09:21:42Z",
        "updated_at": "2024-09-16T09:08:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nI'm using TSL with a MeshStandardNodeMaterial on a BatchedMesh. I have a custom vertexNode reusing the logic of BatchNode so I can apply custom bending effect on it later on.\r\n\r\nHowever when doing that the lights of my BatchedMesh are broken (not in the correct direction). When I remove the vertexNode (using the default shader) it fixes it.\r\n\r\nDoes it mean the vertexNode is overwriting the normalLocal so the fragment doesn't have the correct vNormals anymore? but weirdly I have the normalLocal assigned.\r\n\r\nDoes it also mean if I want to customise the fragment part I will have to rewrite the whole StandardNodeMaterial fragment shader in the outputNode to get the lights right?\r\n\r\nThank you\r\n\r\n### Reproduction steps\r\n\r\n1. Using a MeshStandardNodeMaterial on a BatchedMesh\r\n2. Apply a custom vertexNode\r\n3. Lights are breaking\r\n\r\n\r\n### Code\r\n\r\n```js\r\nconst material = new MeshStandardNodeMaterial()\r\nconst mesh = new BatchedMesh(50, 4000, 4000, material)\r\nconst geometry1 = new BoxGeometry(1.5, 1, .5)\r\nconst geometry2 = new ConeGeometry(1, 1, 32)\r\nmesh.addGeometry(geometry1, geometry2)\r\n\r\nmaterial.vertexNode = Fn((builder) => {\r\n\t// Reusing BatchNode logic\r\n\tlet batchingIdNode = null\r\n\r\n\t// WebGL fallback if\r\n\tif (batchingIdNode === null) {\r\n\t\t// check if https://github.com/mrdoob/three.js/blob/841ea631018e0bf40c7de1b54811101f77f1e1b3/src/renderers/webgl-fallback/nodes/GLSLNodeBuilder.js#L626\r\n\t\tif (builder.getDrawIndex() === null) {\r\n\t\t\tbatchingIdNode = instanceIndex\r\n\t\t} else {\r\n\t\t\tbatchingIdNode = drawIndex\r\n\t\t}\r\n\t}\r\n\r\n\tconst getIndirectIndex = Fn(([id]) => {\r\n\t\tconst size = textureSize(textureLoad(mesh._indirectTexture), 0)\r\n\t\tconst x = int(id).modInt(int(size))\r\n\t\tconst y = int(id).div(int(size))\r\n\t\treturn textureLoad(mesh._indirectTexture, ivec2(x, y)).x\r\n\r\n\t}).setLayout({\r\n\t\tname: 'getIndirectIndex',\r\n\t\ttype: 'uint',\r\n\t\tinputs: [{ name: 'id', type: 'int' }]\r\n\t})\r\n\r\n\tconst matriceTexture = mesh._matricesTexture\r\n\r\n\tconst size = textureSize(textureLoad(matriceTexture), 0)\r\n\tconst j = float(getIndirectIndex(int(batchingIdNode))).mul(4).toVar()\r\n\r\n\tconst x = int(j.mod(size))\r\n\tconst y = int(j).div(int(size))\r\n\tconst batchingMatrix = mat4(\r\n\t\ttextureLoad(matriceTexture, ivec2(x, y)),\r\n\t\ttextureLoad(matriceTexture, ivec2(x.add(1), y)),\r\n\t\ttextureLoad(matriceTexture, ivec2(x.add(2), y)),\r\n\t\ttextureLoad(matriceTexture, ivec2(x.add(3), y))\r\n\t)\r\n\r\n\tconst bm = mat3(batchingMatrix)\r\n\tconst batchPos = batchingMatrix.mul(positionLocal).xyz\r\n\r\n\t// Now I can apply custom code here\r\n\tconst transformed = modelViewMatrix.mul(batchPos)\r\n\tconst mvPosition = vec4(transformed.xyz, transformed.w)\r\n\r\n\t// Normals\r\n\tconst transformedNormal = normalLocal.div(vec3(bm[ 0 ].dot(bm[ 0 ]), bm[ 1 ].dot(bm[ 1 ]), bm[ 2 ].dot(bm[ 2 ])))\r\n\tconst batchingNormal = bm.mul(transformedNormal).xyz\r\n\tnormalLocal.assign(batchingNormal)\r\n\r\n\tif (builder.hasGeometryAttribute('tangent')) {\r\n\t\ttangentLocal.mulAssign(bm)\r\n\t}\r\n\r\n\treturn cameraProjectionMatrix.mul(mvPosition)\r\n})()\r\n\r\n// Positions are good but lights are now broken\r\n```\r\n\r\n\r\n### Version\r\n\r\n0.168.0\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29393/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29393/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29379",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29379/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29379/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29379/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29379",
        "id": 2515745722,
        "node_id": "I_kwDOAAjKyc6V8zu6",
        "number": 29379,
        "title": "BatchedMesh silent errors on : `setMatrixAt`, `setColorAt`, `setVisibleAt`, etc.. ",
        "user": {
          "login": "Makio64",
          "id": 213351,
          "node_id": "MDQ6VXNlcjIxMzM1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/213351?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Makio64",
          "html_url": "https://github.com/Makio64",
          "followers_url": "https://api.github.com/users/Makio64/followers",
          "following_url": "https://api.github.com/users/Makio64/following{/other_user}",
          "gists_url": "https://api.github.com/users/Makio64/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Makio64/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Makio64/subscriptions",
          "organizations_url": "https://api.github.com/users/Makio64/orgs",
          "repos_url": "https://api.github.com/users/Makio64/repos",
          "events_url": "https://api.github.com/users/Makio64/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Makio64/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-10T08:19:43Z",
        "updated_at": "2024-09-13T14:27:50Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nBatchedMesh have many silent errors on : `setMatrixAt`, `setColorAt`, `setVisibleAt`, etc.. \r\n\r\n```\r\n\t\t// if the geometry is out of range, not active, or visibility state\r\n\t\t// does not change then return early\r\n\t\tconst drawInfo = this._drawInfo;\r\n\t\tif (\r\n\t\t\tinstanceId >= drawInfo.length ||\r\n\t\t\tdrawInfo[ instanceId ].active === false ||\r\n\t\t\tdrawInfo[ instanceId ].visible === value\r\n\t\t) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n```\r\n\r\nSo if I do `setMatrixAt(outOfRangeIndex, matrix)` it will do nothing and return this, I feel we should inform the developer via a warn there is an error.\r\n\r\nAlso sometimes it return `null`, `this`, `false`\r\n\r\nI dont know whats the current policy of threejs for this kind of error and how its manage across three, but good error message help for debugging and avoid issue/stackoverflow thread.\r\n\r\n### Solution\r\n\r\nI suggest to add a little warning like : `BatchedMesh instanceId[${instanceId}] wasnt update, this can be cause if the instance is not visible/active or wrong index`\r\n\r\nAlso be consistant in the return\r\n\r\n### Alternatives\r\n\r\n- Factorize for more precise error message.\r\n- Remove the test and let it crash ( so the devs see there is an error and can fix the code )\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29379/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29379/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29351",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29351/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29351/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29351/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29351",
        "id": 2512044825,
        "node_id": "I_kwDOAAjKyc6VusMZ",
        "number": 29351,
        "title": "AfterImage Example running at different FPS (delta Time)",
        "user": {
          "login": "lucasdomanico",
          "id": 41302767,
          "node_id": "MDQ6VXNlcjQxMzAyNzY3",
          "avatar_url": "https://avatars.githubusercontent.com/u/41302767?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/lucasdomanico",
          "html_url": "https://github.com/lucasdomanico",
          "followers_url": "https://api.github.com/users/lucasdomanico/followers",
          "following_url": "https://api.github.com/users/lucasdomanico/following{/other_user}",
          "gists_url": "https://api.github.com/users/lucasdomanico/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/lucasdomanico/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/lucasdomanico/subscriptions",
          "organizations_url": "https://api.github.com/users/lucasdomanico/orgs",
          "repos_url": "https://api.github.com/users/lucasdomanico/repos",
          "events_url": "https://api.github.com/users/lucasdomanico/events{/privacy}",
          "received_events_url": "https://api.github.com/users/lucasdomanico/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 4893271717,
            "node_id": "LA_kwDOAAjKyc8AAAABI6lmpQ",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Post-processing",
            "name": "Post-processing",
            "color": "DA9E32",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-09-07T19:49:54Z",
        "updated_at": "2024-09-08T15:40:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nHello, I think the AfterImage example should work for different fps.\r\nI started a discussion here: https://discourse.threejs.org/t/afterimage-example-damp-fps/70404\r\nBut at the end of the day I think it's something Three js should handle.\n\n### Solution\n\nUse the delta time for the 'damp' value of the AfterImage shader pass.\n\n### Alternatives\n\nLeaving it as it is, but the visual results would be different at differents fps : \\\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29351/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29351/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29337",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29337/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29337/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29337/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29337",
        "id": 2509512917,
        "node_id": "I_kwDOAAjKyc6VlCDV",
        "number": 29337,
        "title": "WebGPURenderer with WebGPU Backend: Clear color is not set correctly",
        "user": {
          "login": "WestLangley",
          "id": 1000017,
          "node_id": "MDQ6VXNlcjEwMDAwMTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1000017?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/WestLangley",
          "html_url": "https://github.com/WestLangley",
          "followers_url": "https://api.github.com/users/WestLangley/followers",
          "following_url": "https://api.github.com/users/WestLangley/following{/other_user}",
          "gists_url": "https://api.github.com/users/WestLangley/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/WestLangley/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/WestLangley/subscriptions",
          "organizations_url": "https://api.github.com/users/WestLangley/orgs",
          "repos_url": "https://api.github.com/users/WestLangley/repos",
          "events_url": "https://api.github.com/users/WestLangley/events{/privacy}",
          "received_events_url": "https://api.github.com/users/WestLangley/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/82",
          "html_url": "https://github.com/mrdoob/three.js/milestone/82",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/82/labels",
          "id": 11357506,
          "node_id": "MI_kwDOAAjKyc4ArU1C",
          "number": 82,
          "title": "r169",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 61,
          "closed_issues": 150,
          "state": "open",
          "created_at": "2024-07-25T08:18:33Z",
          "updated_at": "2024-09-17T16:29:12Z",
          "due_on": "2024-09-25T07:00:00Z",
          "closed_at": null
        },
        "comments": 0,
        "created_at": "2024-09-06T04:53:44Z",
        "updated_at": "2024-09-06T19:29:23Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\n\nClear Color is not set correctly when clear alpha < 1.\r\n\r\nCompare `WebGPURenderer` with both `WebGLRenderer` and `WebGPURenderer/WebGLBackend`. The latter two appear to render the same, and I think they are correct.\r\n\r\n\n\n### Reproduction steps\n\nSet clear alpha to less than 1.\n\n### Code\n\nSee fiddles.\r\n\n\n### Live example\n\nWebGLRenderer (dev): https://jsfiddle.net/ofyu03vc/\r\n\r\nWebGPURenderer (dev): https://jsfiddle.net/fbk0d8s9/\r\n\n\n### Screenshots\n\n_No response_\n\n### Version\n\nr169dev\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29337/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29337/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29325",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29325/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29325/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29325/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29325",
        "id": 2506019992,
        "node_id": "I_kwDOAAjKyc6VXtSY",
        "number": 29325,
        "title": "WebGPURenderer: Setting `receiveShadow` to `true` produces shader error with flat shaded objects.",
        "user": {
          "login": "Mugen87",
          "id": 12612165,
          "node_id": "MDQ6VXNlcjEyNjEyMTY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/12612165?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Mugen87",
          "html_url": "https://github.com/Mugen87",
          "followers_url": "https://api.github.com/users/Mugen87/followers",
          "following_url": "https://api.github.com/users/Mugen87/following{/other_user}",
          "gists_url": "https://api.github.com/users/Mugen87/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Mugen87/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Mugen87/subscriptions",
          "organizations_url": "https://api.github.com/users/Mugen87/orgs",
          "repos_url": "https://api.github.com/users/Mugen87/repos",
          "events_url": "https://api.github.com/users/Mugen87/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Mugen87/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-04T18:26:10Z",
        "updated_at": "2024-09-06T09:49:22Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nWhile working on `ShadowMapViewer` I have noticed that flat shaded objects that receive shadow produce a WGSL error which is logged in the browser console as a warning. \r\n\r\n> Error while parsing WGSL: :87:33 error: built-in cannot be used by vertex pipeline stage\r\n  normalFlat = normalize( cross( dpdx( varyings.v_positionView ), - dpdy( varyings.v_positionView ) ) );\r\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nThe screen also gets white so nothing is rendered.\r\n\r\nCommenting out `mesh.receiveShadow = true;` _or_ disable flat shading fixes the issue.\r\n\r\n### Reproduction steps\r\n\r\n1. Open https://jsfiddle.net/fcxk984g/\r\n2. Check browser console.\r\n\r\n\r\n### Live example\r\n\r\n* r168: https://jsfiddle.net/fcxk984g/\r\n* dev: https://jsfiddle.net/qntd2ev0/\r\n\r\n### Version\r\n\r\nr168\r\n\r\n### Device\r\n\r\nDesktop, Mobile, Headset\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29325/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29325/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29295",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29295/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29295/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29295/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29295",
        "id": 2500543072,
        "node_id": "I_kwDOAAjKyc6VC0Jg",
        "number": 29295,
        "title": "Addons: Support overview in `WebGLRenderer` and `WebGPURenderer`.",
        "user": {
          "login": "Mugen87",
          "id": 12612165,
          "node_id": "MDQ6VXNlcjEyNjEyMTY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/12612165?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Mugen87",
          "html_url": "https://github.com/Mugen87",
          "followers_url": "https://api.github.com/users/Mugen87/followers",
          "following_url": "https://api.github.com/users/Mugen87/following{/other_user}",
          "gists_url": "https://api.github.com/users/Mugen87/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Mugen87/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Mugen87/subscriptions",
          "organizations_url": "https://api.github.com/users/Mugen87/orgs",
          "repos_url": "https://api.github.com/users/Mugen87/repos",
          "events_url": "https://api.github.com/users/Mugen87/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Mugen87/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-02T10:04:19Z",
        "updated_at": "2024-09-17T07:55:32Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThis issue is intended for tracking which addons are already supported in `WebGPURenderer`.\r\n\r\nNot all open tasks must be implemented. Certain addons might not be ported to `WebGPURenderer` because they are outdated (like the old `BloomPass`) or  replaced with different APIs (like `MaskPass`). Such addons are marked with a ✖️ sign.\r\n\r\nIf someone wants to migrate a component, it's best to leave a comment so we can add the name to the \"Assignee\" column. In this way, we avoid the situation where more than one developer works at the same task.\r\n\r\n| Addon   |      WebGLRenderer      |  WebGPURenderer | Assignee\r\n|----------|:-------------:|:------:|:------:|\r\n| animation/AnimationClipCreator.js | ✅ | ✅ | -\r\n| animation/CCDIKSolver.js | ✅ | ✅ | -\r\n| animation/MMDAnimationHelper.js | ✅ | ✅ | -\r\n| animation/MMDPhysics.js | ✅ | ✅ | -\r\n| cameras/CinematicCamera.js | ✅ | ❌ (dependency to GLSL) | -\r\n| capabilities/WebGL.js | ✅ | ✅ | -\r\n| capabilities/WebGPU.js | ✅ | ✅ | -\r\n| controls/ArcballControls.js | ✅ | ✅ | -\r\n| controls/DragControls.js | ✅ | ✅ | -\r\n| controls/FirstPersonControls.js | ✅ | ✅ | -\r\n| controls/FlyControls.js | ✅ | ✅ | -\r\n| controls/MapControls.js | ✅ | ✅ | -\r\n| controls/OrbitControls.js | ✅ | ✅ | -\r\n| controls/PointerLockControls.js | ✅ | ✅ | -\r\n| controls/TrackballControls.js | ✅ | ✅ | -\r\n| controls/TransformControls.js | ✅ | ✅ | -\r\n| csm/CSM.js | ✅ | ❌ (dependency to GLSL)| -\r\n| csm/CSMFrustum.js | ✅ | ✅ | -\r\n| csm/CSMHelper.js | ✅ | ✅ | -\r\n| csm/CSMShader.js | ✅ | ❌(dependency to GLSL) | -\r\n| curves/CurveExtras.js | ✅ | ✅ | -\r\n| curves/NURBSCurve.js | ✅ | ✅ | -\r\n| curves/NURBSSurface.js | ✅ | ✅ | -\r\n| curves/NURBSUtils.js | ✅ | ✅ | -\r\n| curves/NURBSVolume.js | ✅ | ✅ | -\r\n| effects/AnaglyphEffect.js | ✅ | ✅ (as AnaglyphPassNode )| -\r\n| effects/AsciiEffect.js | ✅ | ✅ | -\r\n| effects/OutlineEffect.js | ✅ | ❌ (dependency to GLSL)| @Mugen87 \r\n| effects/ParallaxBarrierEffect.js | ✅ | ✅ (as ParallaxBarrierPassNode )| -\r\n| effects/PeppersGhostEffect.js | ✅ | ✅ | -\r\n| effects/StereoEffect.js | ✅ | ✅ (as StereoPassNode) | -\r\n| environments/DebugEnvironment.js | ✅ | ✅ | -\r\n| environments/RoomEnvironment.js | ✅ | ✅ | -\r\n| exporters/DRACOExporter.js | ✅ | ✅ | -\r\n| exporters/EXRExporter.js | ✅ | ✅| -\r\n| exporters/GLTFExporter.js | ✅ | ❌ (dependency to TextureUtils.decompress()) | -\r\n| exporters/KTX2Exporter.js | ✅ | ✅ | -\r\n| exporters/MMDExporter.js | ✅ | ✅ | -\r\n| exporters/OBJExporter.js | ✅ | ✅ | -\r\n| exporters/PLYExporter.js | ✅ | ✅ | -\r\n| exporters/STLExporter.js | ✅ | ✅ | -\r\n| exporters/USDZExporter.js | ✅ | ❌ (dependency to TextureUtils.decompress()) | -\r\n| geometries/BoxLineGeometry.js | ✅ | ✅ | -\r\n| geometries/ConvexGeometry.js | ✅ | ✅ | -\r\n| geometries/DecalGeometry.js | ✅ | ✅ | -\r\n| geometries/InstancedPointsGeometry.js | ✅ | ✅ | -\r\n| geometries/ParametricGeometries.js | ✅ | ✅ | -\r\n| geometries/ParametricGeometry.js | ✅ | ✅ | -\r\n| geometries/RoundedBoxGeometry.js | ✅ | ✅ | -\r\n| geometries/TeapotGeometry.js | ✅ | ✅ | -\r\n| geometries/TextGeometry.js | ✅ | ✅ | -\r\n| helpers/LightProbeHelper.js | ✅ | ✅ (as LightProbeHelperGPU)  | -\r\n| helpers/OctreeHelper.js | ✅ | ✅ | -\r\n| helpers/PositionalAudioHelper.js | ✅ | ✅ | -\r\n| helpers/RectAreaLightHelper.js | ✅ | ✅ | -\r\n| helpers/TextureHelper.js | ✅ | ❌ (dependency to GLSL) | -\r\n| helpers/VertexNormalsHelper.js | ✅ | ✅ | -\r\n| helpers/VertexTangentsHelper.js | ✅ | ✅ | -\r\n| helpers/ViewHelper.js | ✅ | ✅ | -\r\n| interactive/HTMLMesh.js | ✅ | ✅ | -\r\n| interactive/InteractiveGroup.js | ✅ | ✅ | -\r\n| interactive/SelectionBox.js | ✅ | ✅ | -\r\n| interactive/SelectionHelper.js | ✅ | ✅ | -\r\n| lights/LightProbeGenerator.js | ✅ | ✅ | -\r\n| lights/RectAreaLightTexturesLib.js | ✅ | ✅  | -\r\n| lights/RectAreaLightUniformsLib.js | ✅ | ✅  | -\r\n| lines/Lines.js | ✅ | ✅  (as webgpu/Lines2.js) | -\r\n| lines/LineGeometry.js | ✅ | ✅  | -\r\n| lines/LineMaterial.js | ✅ | ✅ (as Line2NodeMaterial) | -\r\n| lines/LineSegments2.js | ✅ | ✅ (as webgpu/LineSegments2.js) | -\r\n| lines/LineSegmentsGeometry.js | ✅ | ✅  | -\r\n| lines/Wireframe.js | ✅ | ❌ (dependency to LineMaterial)  | -\r\n| lines/WireframeGeometry2.js | ✅ | ✅  | -\r\n| loaders/3DMLoader.js | ✅ |  ✅  | -\r\n| loaders/3MFLoader.js | ✅ |  ✅  | -\r\n| loaders/AMFLoader.js | ✅ |  ✅  | -\r\n| loaders/BVHLoader.js | ✅ |  ✅  | -\r\n| loaders/ColladaLoader.js | ✅ |  ✅  | -\r\n| loaders/DDSLoader.js | ✅ |  ✅  | -\r\n| loaders/DRACOLoader.js | ✅ |  ✅  | -\r\n| loaders/EXRLoader.js | ✅ |  ✅  | -\r\n| loaders/FBXLoader.js | ✅ |  ✅  | -\r\n| loaders/FontLoader.js | ✅ |  ✅  | -\r\n| loaders/GCodeLoader.js | ✅ |  ✅  | -\r\n| loaders/GLTFLoader.js | ✅ |  ✅  | -\r\n| loaders/HDRCubeTextureLoader.js | ✅ |  ✅  | -\r\n| loaders/IESLoader.js | ✅ |  ✅  | -\r\n| loaders/KMZLoader.js | ✅ |  ✅  | -\r\n| loaders/KTX2Loader.js | ✅ |  ✅  | -\r\n| loaders/KTXLoader.js | ✅ |  ✅  | -\r\n| loaders/LDrawLoader.js | ✅ | ❌ (dependency to GLSL)  | -\r\n| loaders/LottieLoader.js | ✅ |  ✅  | -\r\n| loaders/LUT3dlLoader.js | ✅ |  ✅  | -\r\n| loaders/LUTCubeLoader.js | ✅ |  ✅  | -\r\n| loaders/LUTImageLoader.js | ✅ |  ✅  | -\r\n| loaders/LWOLoader.js | ✅ |  ✅  | -\r\n| loaders/MaterialXLoader.js | ✅ |  ✅  | -\r\n| loaders/MD2Loader.js | ✅ |  ✅  | -\r\n| loaders/MDDLoader.js | ✅ |  ✅  | -\r\n| loaders/MMDLoader.js | ✅ | ❌ (dependency to GLSL)  | -\r\n| loaders/MTLLoader.js | ✅ |  ✅  | -\r\n| loaders/NRRDLoader.js | ✅ |  ✅  | -\r\n| loaders/OBJLoader.js | ✅ |  ✅  | -\r\n| loaders/PCDLoader.js | ✅ |  ✅  | -\r\n| loaders/PDBLoader.js | ✅ |  ✅  | -\r\n| loaders/PLYLoader.js | ✅ |  ✅  | -\r\n| loaders/PVRLoader.js | ✅ |  ✅  | -\r\n| loaders/RGBELoader.js | ✅ |  ✅  | -\r\n| loaders/RGBMLoader.js | ✅ |  ✅  | -\r\n| loaders/STLLoader.js | ✅ |  ✅  | -\r\n| loaders/SVGLoader.js | ✅ |  ✅  | -\r\n| loaders/TDSLoader.js | ✅ |  ✅  | -\r\n| loaders/TGALoader.js | ✅ |  ✅  | -\r\n| loaders/TIFFLoader.js | ✅ |  ✅  | -\r\n| loaders/TiltLoader.js | ✅ | ❌ (dependency to GLSL)  | -\r\n| loaders/TTFLoader.js | ✅ |  ✅  | -\r\n| loaders/UltraHDRLoader.js | ✅ |  ✅  | -\r\n| loaders/USDZLoader.js | ✅ |  ✅  | -\r\n| loaders/VOXLoader.js | ✅ |  ✅  | -\r\n| loaders/VRMLLoader.js | ✅ |  ✅  | -\r\n| loaders/VTKLoader.js | ✅ |  ✅  | -\r\n| loaders/XYZLoader.js | ✅ |  ✅  | -\r\n| materials/MeshGouraudMaterial.js | ✅ | ❌ (dependency to GLSL)  | -\r\n| materials/MeshPostProcessingMaterial.js | ✅ | ✖️ (won't be ported)  | -\r\n| math/Capsule.js | ✅ |  ✅  | -\r\n| math/ColorConverter.js | ✅ |  ✅  | -\r\n| math/ConvexHull.js | ✅ |  ✅  | -\r\n| math/ImprovedNoise.js | ✅ |  ✅  | -\r\n| math/Lut.js | ✅ |  ✅  | -\r\n| math/MeshSurfaceSampler.js | ✅ |  ✅  | -\r\n| math/OBB.js | ✅ |  ✅  | -\r\n| math/Octree.js | ✅ |  ✅  | -\r\n| math/SimplexNoise.js | ✅ |  ✅  | -\r\n| misc/ConvexObjectBreaker.js | ✅ |  ✅  | -\r\n| misc/GPUComputationRenderer.js | ✅ |  ✖️ (replaced with compute shaders)  | -\r\n| misc/Gyroscope.js | ✅ |  ✅  | -\r\n| misc/MD2Character.js | ✅ |  ✅  | -\r\n| misc/MD2CharacterComplex.js | ✅ |  ✅  | -\r\n| misc/MorphAnimMesh.js | ✅ |  ✅  | -\r\n| misc/MorphBlendMesh.js | ✅ |  ✅  | -\r\n| misc/ProgressiveLightMap.js | ✅ |  ❌ (dependency to GLSL)  | -\r\n| misc/RollerCoaster.js | ✅ |  ✅  | -\r\n| misc/Timer.js | ✅ |  ✅  | -\r\n| misc/TubePainter.js | ✅ |  ✅  | -\r\n| misc/Volume.js | ✅ |  ✅  | -\r\n| misc/VolumeSlice.js | ✅ |  ✅  | -\r\n| modifiers/CurveModifier.js | ✅ |  ❌ (dependency to GLSL)  | @aardgoose\r\n| modifiers/EdgeSplitModifier.js | ✅ |  ✅  | -\r\n| modifiers/SimplifyModifier.js | ✅ |  ✅  | -\r\n| modifiers/TessellateModifier.js | ✅ |  ✅  | -\r\n| objects/GroundedSkybox.js | ✅ |  ✅  | -\r\n| objects/InstancedPoints.js | ❌ |  ✅  | -\r\n| objects/Lensflare.js | ✅ |  ❌ (dependency to GLSL)  | @aardgoose \r\n| objects/MarchingCubes.js | ✅ |  ✅  | -\r\n| objects/Reflector.js | ✅ |  ✅ (as ReflectorNode)  | -\r\n| objects/ReflectorForSSRPass.js | ✅ |  ❌ (dependency to GLSL)  | -\r\n| objects/Refractor.js | ✅ |  ✅ (as viewportSharedTexture())  | -\r\n| objects/ShadowMesh.js | ✅ |  ✅  | -\r\n| objects/Sky.js | ✅ |  ✅ (as objects/SkyMesh)  | -\r\n| objects/Water.js | ✅ |  ✅ (as objects/WaterMesh)  | -\r\n| objects/Water2.js | ✅ |  ✅ (as objects/Water2Mesh)  | -\r\n| physics/AmmoPhysics.js | ✅ |  ✅  | -\r\n| physics/JoltPhysics.js | ✅ |  ✅  | -\r\n| physics/RapierPhysics.js | ✅ |  ✅  | -\r\n| postprocessing/AfterimagePass.js | ✅ |  ✅  (as AfterImageNode) | -\r\n| postprocessing/BloomPass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/BokehPass.js | ✅ |  ✅  (as DepthOfFieldNode) | -\r\n| postprocessing/ClearPass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/CubeTexturePass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/DotScreenPass.js | ✅ |  ✅  (as DotScreenNode) | -\r\n| postprocessing/EffectComposer.js | ✅ |  ✅  (as PostProcessing) | -\r\n| postprocessing/FilmPass.js | ✅ |  ✅  (as FilmNode) | -\r\n| postprocessing/GlitchPass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/GTAOPass.js | ✅ |  ✅  (as GTAONode) | -\r\n| postprocessing/HalftonePass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/LUTPass.js | ✅ |  ✅  (as Lut3DNode) | -\r\n| postprocessing/MaskPass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/OutlinePass.js | ✅ |  ❌ (dependency to GLSL) | @cmhhelgeson\r\n| postprocessing/OutputPass.js | ✅ |  ✅  (as RenderOutputNode) | -\r\n| postprocessing/Pass.js | ✅ |  ✅ (as TempNode or TextureNode) | -\r\n| postprocessing/RenderPass.js | ✅ |  ✅  (as PassNode) | -\r\n| postprocessing/RenderPixelatedPass.js | ✅ |  ✅  (as PixelationNode) | -\r\n| postprocessing/SAOPass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/SavePass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/ShaderPass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/SMAAPass.js | ✅ |  ❌ (dependency to GLSL)  | -\r\n| postprocessing/SSAARenderPass.js | ✅ |  ✅ (as SSAAPassNode)  | -\r\n| postprocessing/SSAOPass.js | ✅ |  ✖️ (won't be ported) | -\r\n| postprocessing/SSRPass.js | ✅ |  ❌ (dependency to GLSL)  | -\r\n| postprocessing/TAARenderPass.js | ✅ |  ❌ (dependency to GLSL)  | -\r\n| postprocessing/TexturePass.js | ✅ |  ✅ (as TextureNode)  | -\r\n| postprocessing/UnrealBloomPass.js | ✅ |  ✅ (as BloomNode) | -\r\n| renderers/CSS2DRenderer.js | ✅ |  ✅  | -\r\n| renderers/CSS3DRenderer.js | ✅ |  ✅  | -\r\n| renderers/Projector.js | ✅ |  ✅  | -\r\n| renderers/SVGRenderer.js | ✅ |  ✅  | -\r\n| shaders/* | ✅ |  ❌ (dependency to GLSL)  | -\r\n| textures/FlakesTexture.js | ✅ |  ✅  | -\r\n| utils/BufferGeometryUtils.js | ✅ |  ✅  | -\r\n| utils/GeometryCompressionUtils.js | ✅ |  ✅  | -\r\n| utils/GeometryUtils.js | ✅ |  ✅  | -\r\n| utils/LDrawUtils.js | ✅ |  ✅  | -\r\n| utils/SceneUtils.js | ✅ |  ✅  | -\r\n| utils/ShadowMapViewer.js | ✅ |  ✅ (as ShadowMapViewerGPU)   | -\r\n| utils/SkeletonUtils.js | ✅ |  ✅  | -\r\n| utils/SortUtils.js | ✅ |  ✅  | -\r\n| utils/TextureUtils.js | ✅ |  ✅ (as TextureUtilsGPU)   | -\r\n| utils/UVsDebug.js | ✅ |  ✅  | -\r\n| utils/WorkerPool.js | ✅ |  ✅  | -\r\n| webxr/ARButton.js | ✅ |  ❌ (dependency to WebGLRenderer)  | -\r\n| webxr/OculusHandModel.js | ✅ |  ✅  | -\r\n| webxr/OculusHandPointerModel.js | ✅ |  ✅  | -\r\n| webxr/Text2D.js | ✅ |  ✅  | -\r\n| webxr/VRButton.js | ✅ |  ❌ (dependency to WebGLRenderer)  | -\r\n| webxr/XRButton.js | ✅ |  ❌ (dependency to WebGLRenderer)  | -\r\n| webxr/XRControllerModelFactory.js | ✅ |  ✅  | -\r\n| webxr/XREstimatedLight.js | ✅ |  ❌ (dependency to WebGLRenderer)  | -\r\n| webxr/XRHandMeshModel.js | ✅ |  ✅  | -\r\n| webxr/XRHandModelFactory.js | ✅ |  ✅  | -\r\n| webxr/XRHandPrimitiveModel.js | ✅ |  ✅  | -\r\n| webxr/XRPlanes.js | ✅ |  ❌ (dependency to WebGLRenderer)  | -\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29295/reactions",
          "total_count": 11,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 8,
          "rocket": 3,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29295/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29269",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29269/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29269/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29269/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29269",
        "id": 2496823725,
        "node_id": "I_kwDOAAjKyc6U0oGt",
        "number": 29269,
        "title": "Add sizeAttenuation to SpriteNodeMaterial",
        "user": {
          "login": "segments-tobias",
          "id": 89590365,
          "node_id": "MDQ6VXNlcjg5NTkwMzY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/89590365?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/segments-tobias",
          "html_url": "https://github.com/segments-tobias",
          "followers_url": "https://api.github.com/users/segments-tobias/followers",
          "following_url": "https://api.github.com/users/segments-tobias/following{/other_user}",
          "gists_url": "https://api.github.com/users/segments-tobias/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/segments-tobias/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/segments-tobias/subscriptions",
          "organizations_url": "https://api.github.com/users/segments-tobias/orgs",
          "repos_url": "https://api.github.com/users/segments-tobias/repos",
          "events_url": "https://api.github.com/users/segments-tobias/events{/privacy}",
          "received_events_url": "https://api.github.com/users/segments-tobias/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "RenaudRohlinger",
          "id": 15867665,
          "node_id": "MDQ6VXNlcjE1ODY3NjY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/15867665?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RenaudRohlinger",
          "html_url": "https://github.com/RenaudRohlinger",
          "followers_url": "https://api.github.com/users/RenaudRohlinger/followers",
          "following_url": "https://api.github.com/users/RenaudRohlinger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RenaudRohlinger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RenaudRohlinger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RenaudRohlinger/subscriptions",
          "organizations_url": "https://api.github.com/users/RenaudRohlinger/orgs",
          "repos_url": "https://api.github.com/users/RenaudRohlinger/repos",
          "events_url": "https://api.github.com/users/RenaudRohlinger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RenaudRohlinger/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "RenaudRohlinger",
            "id": 15867665,
            "node_id": "MDQ6VXNlcjE1ODY3NjY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/15867665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RenaudRohlinger",
            "html_url": "https://github.com/RenaudRohlinger",
            "followers_url": "https://api.github.com/users/RenaudRohlinger/followers",
            "following_url": "https://api.github.com/users/RenaudRohlinger/following{/other_user}",
            "gists_url": "https://api.github.com/users/RenaudRohlinger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RenaudRohlinger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RenaudRohlinger/subscriptions",
            "organizations_url": "https://api.github.com/users/RenaudRohlinger/orgs",
            "repos_url": "https://api.github.com/users/RenaudRohlinger/repos",
            "events_url": "https://api.github.com/users/RenaudRohlinger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RenaudRohlinger/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-30T10:17:24Z",
        "updated_at": "2024-08-30T17:42:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\n`SpriteMaterial` (and others such as `PointsMaterial`) has a `sizeAttenuation` flag which can be set to false to make sure the sprite maintains the same size on screen no matter where the camera is placed. This is very convenient to display cursors etc. in Three.js.\r\nWhen switching to node materials, this option is unfortunately missing from `SpriteNodeMaterial`.\r\nI wonder whether this could be added?\r\n\r\n### Solution\r\n\r\nAdd a `sizeAttenuation` variable on `SpriteNodeMaterial` that works like `sizeAttenuation` on `SpriteMaterial`. Here's an example of how it could be used: [jsfiddle-latest-release WebGPURenderer](https://jsfiddle.net/vdyn2b39/6/)\r\n\r\n### Alternatives\r\n\r\n```\r\nconst baseSize = uniform(0.02);\r\nconst distanceToCamera = length(sub(cameraPosition, positionWorld));\r\nconst scale = mul(baseSize, distanceToCamera);\r\nmaterial.scaleNode = vec2(scale);\r\n```\r\n\r\nThe problem with this approach is that there's a difference between the displayed sprite size in a `PerspectiveCamera` vs an `OrthographicCamera`, which wasn't a problem with `sizeAttenuation: false` in `SpriteMaterial`.\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29269/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29269/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29246",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29246/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29246/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29246/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29246",
        "id": 2491720958,
        "node_id": "I_kwDOAAjKyc6UhKT-",
        "number": 29246,
        "title": "Parse mesh url to load in threejs editor via search query/urlparam",
        "user": {
          "login": "jo-chemla",
          "id": 16822841,
          "node_id": "MDQ6VXNlcjE2ODIyODQx",
          "avatar_url": "https://avatars.githubusercontent.com/u/16822841?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jo-chemla",
          "html_url": "https://github.com/jo-chemla",
          "followers_url": "https://api.github.com/users/jo-chemla/followers",
          "following_url": "https://api.github.com/users/jo-chemla/following{/other_user}",
          "gists_url": "https://api.github.com/users/jo-chemla/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jo-chemla/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jo-chemla/subscriptions",
          "organizations_url": "https://api.github.com/users/jo-chemla/orgs",
          "repos_url": "https://api.github.com/users/jo-chemla/repos",
          "events_url": "https://api.github.com/users/jo-chemla/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jo-chemla/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1062391712,
            "node_id": "MDU6TGFiZWwxMDYyMzkxNzEy",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Editor",
            "name": "Editor",
            "color": "184de0",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-28T10:41:09Z",
        "updated_at": "2024-09-12T10:51:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nIt would be useful for the threejs editor to support importing mesh files on load, by parsing a search-query or urlparam. The simplest solution would simply to load a single mesh file, but this could be extended to loading an arbitrary threejs project, or collection of meshes files via their urls. \r\n\n\n### Solution\n\nThe mesh urls could be parsed via a `meshes` array search query like https://threejs.org/editor?meshes=[{mesh_url}]. The threejs project could be parsed via a `threejs_project` urlparam. This would probably happen inside the [dev/editor/index.html](https://github.com/mrdoob/three.js/blob/dev/editor/index.html)\n\n### Alternatives\n\nEquivalent feature requested on [f3d web viewer](https://github.com/f3d-app/f3d/issues/1595). \r\n3dviewer.net does it this way https://3dviewer.net/#model=${mesh_url}, but this does not work with every mesh url.\n\n### Additional context\n\nThis would make it easier to inspect mesh files lying accessible on the web via a server endpoint using the threejs editor. My interest is integrating a mesh viewer within STAC-browser (Spartio-Temporal Asset Catalogs) which is made to explore and standardize geospatial assets, among which meshes are an important part - see PR https://github.com/radiantearth/stac-browser/pull/465 for context",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29246/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29246/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29210",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29210/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29210/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29210/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29210",
        "id": 2481412346,
        "node_id": "I_kwDOAAjKyc6T51j6",
        "number": 29210,
        "title": "Support advanced (property mangling) minify tools",
        "user": {
          "login": "AshleyScirra",
          "id": 768723,
          "node_id": "MDQ6VXNlcjc2ODcyMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/768723?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AshleyScirra",
          "html_url": "https://github.com/AshleyScirra",
          "followers_url": "https://api.github.com/users/AshleyScirra/followers",
          "following_url": "https://api.github.com/users/AshleyScirra/following{/other_user}",
          "gists_url": "https://api.github.com/users/AshleyScirra/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AshleyScirra/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AshleyScirra/subscriptions",
          "organizations_url": "https://api.github.com/users/AshleyScirra/orgs",
          "repos_url": "https://api.github.com/users/AshleyScirra/repos",
          "events_url": "https://api.github.com/users/AshleyScirra/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AshleyScirra/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-08-22T18:01:53Z",
        "updated_at": "2024-09-11T14:30:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nSome JavaScript minification tools support reducing the size of code even further by renaming properties. This is called property mangling in UglifyJS, or ADVANCED optimization mode in Closure Compiler. In summary it works like this: suppose you have the following code.\r\n\r\n```js\r\nconst obj = {\r\n    apples: 1,\r\n    oranges: 2\r\n};\r\nconsole.log(obj.apples, obj.oranges);\r\n```\r\nProperty mangling will rename the object properties consistently, so `apples` is renamed to `a`, `oranges` is renamed to `b`, and so on, producing output that looks like this:\r\n\r\n```js\r\nconst obj = {\r\n    a: 1,\r\n    b: 2\r\n};\r\nconsole.log(obj.a, obj.b);\r\n```\r\n\r\nThis can however break code that is not written to expect this. The main problem is mixing string and dot property syntax. For example if you access a property in `obj` using a runtime string like `obj[someStr]`, then the names are different and the code is broken. To better support this case, both Closure Compiler and UglifyJS support preserving the names of properties that use string syntax. For example code written this way would not have its properties renamed:\r\n\r\n```js\r\nconst obj = {\r\n    \"apples\": 1,\r\n    \"oranges\": 2\r\n};\r\nconsole.log(obj[\"apples\"], obj[\"oranges\"]);\r\n```\r\n\r\nThat allows for using property mangling as well as string lookups, providing property accesses consistently use either string syntax or dot syntax, but not a mix, as that means only dot syntax is renamed and then no longer matches the string syntax.\r\n\r\nUsing data from [Construct](https://www.construct.net/) - a large JavaScript-based game engine - property mangling can further reduce the code size over \"simple\" (non-property-mangling) minification by ~35-45% uncompressed and ~15-25% compressed. (The range depends on the tool used - Closure Compiler tends to do better than UglifyJS.)\n\n### Solution\n\nCurrently three.js mixes dot and string property syntax and so is broken after property mangling minification. After debugging this, one area I identified was the use of `ShaderLib`: in [ShaderLib.js](https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib.js) the `ShaderLib` defines properties with unquoted syntax (e.g. `basic`); however in [WebGLPrograms.js](https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLPrograms.js#L93) it does a runtime string lookup with `ShaderLib[ shaderID ]`. It looks like this pattern is used in a few places.\r\n\r\nThe fix is to ensure all uses of property accesses are consistently string syntax or dot (unquoted) syntax. For example in this case, the fix would be to ensure `ShaderLib` properties use string syntax, e.g. `\"basic\"`. Other such cases will need to be reviewed across the codebase. I would also suggest to use `Map` for dictionary-style storage like this, as it's a natural fit, avoids some pitfalls with object properties (like `prototype`), and you can only use string syntax, so it actually prevents using dot syntax and so avoids any syntax mix-ups.\r\n\r\nBoth Closure Compiler and UglifyJS provide a \"debug\" mode for property mangling to help identify problems. This renames properties but keeps the original name - for example UglifyJS renames `obj.apples` to `obj._$apples$_`, so the property is renamed, but you can still see what it was meant to be when debugging problems.\r\n\r\nOnce set up it's pretty straightforward to keep things working - it just needs consistency across the codebase with property syntax. It may be a relatively easy change to make, but it should probably be done by someone familiar with the codebase. I don't think it's an onerous requirement to maintain in future, and it helps further reduce the download size and parse/load time as three.js is a pretty large library.\n\n### Alternatives\n\nI think the only alternative is to keep using \"simple\" (non-property-mangling) minification. This doesn't require any code changes and tends to just work with whatever code you write, so is a bit easier to maintain. However it may turn out to be straightforward to support and maintain support for property mangling, which would make it a relatively easy win.\n\n### Additional context\n\nWith Construct we've supported property mangling in our engine for years, and I wouldn't say it's a significant burden.",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29210/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29210/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29200",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29200/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29200/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29200/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29200",
        "id": 2478426903,
        "node_id": "I_kwDOAAjKyc6TucsX",
        "number": 29200,
        "title": "WebGPU - Duplicate shadow when logarithmicDepthBuffer is true - Shadow appears below and above object (WebGPU build 167)",
        "user": {
          "login": "PoseidonEnergy",
          "id": 109360495,
          "node_id": "U_kgDOBoS1bw",
          "avatar_url": "https://avatars.githubusercontent.com/u/109360495?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/PoseidonEnergy",
          "html_url": "https://github.com/PoseidonEnergy",
          "followers_url": "https://api.github.com/users/PoseidonEnergy/followers",
          "following_url": "https://api.github.com/users/PoseidonEnergy/following{/other_user}",
          "gists_url": "https://api.github.com/users/PoseidonEnergy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/PoseidonEnergy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/PoseidonEnergy/subscriptions",
          "organizations_url": "https://api.github.com/users/PoseidonEnergy/orgs",
          "repos_url": "https://api.github.com/users/PoseidonEnergy/repos",
          "events_url": "https://api.github.com/users/PoseidonEnergy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/PoseidonEnergy/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          },
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-21T16:06:23Z",
        "updated_at": "2024-09-15T01:59:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nNote: I'm using the WebGPU build 167 of three.js for this report.\r\n\r\nSee screenshot, JSFiddle, and provided code. I have a simple sphere between two \"floors\", with a `DirectionalLight` pointing straight down from above. Notice how the sphere casts a shadow on the top \"floor\". This top shadow appears when `logarithmicDepthBuffer` is `true`. How can I remove the shadow from the top floor? I don't want to disable `logarithmicDepthBuffer`, because I need it elsewhere in my scene. I also don't want to disable the top floor's ability to receive shadows from other objects, so I can't set `receiveShadow = false` on the top floor mesh.\r\n\r\n**JSFiddle:** https://jsfiddle.net/0fwkyvu6\r\n\r\n**discourse thread:** https://discourse.threejs.org/t/duplicate-shadow-shadow-appears-below-and-above-object-webgpu-build-167/69481\r\n\r\n**StackOverflow question:** https://stackoverflow.com/questions/78893677/three-js-duplicate-shadow-issue-bug-shadow-appears-below-and-above-object\r\n\r\n**Update 1:** setting `logarithmicDepthBuffer: false` appears to fix the issue somewhat, however the logarithmic depth buffer is a requirement for my scene, so I'd like to get the shadow working with it.\r\n\r\n**Update 2:** the top shadow is not visible in the standard WebGLRenderer build of three.js, so there must be some issue specifically with the WebGPU build.\r\n\r\n![image](https://github.com/user-attachments/assets/2584a424-0ff9-497a-adb6-82805b6db4b4)\r\n\r\n### Reproduction steps\r\n\r\nPlease use the provided code to reproduce the issue.\r\n\r\n### Code\r\n\r\n```\r\n<!doctype html>\r\n<html>\r\n<head>\r\n<title>WebGPU 167 Shadow Bug<title>\r\n<style>\r\n* {\r\n  margin: 0;\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml {\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\nbody {\r\n  height: 100%;\r\n  overflow: hidden;\r\n  font-family: sans-serif;\r\n  background-color:#808080;\r\n}\r\n</style>\r\n</head>\r\n<body>\r\n<script>\r\n(async function() {\r\n  const THREE = await (async function() {\r\n    const url = \"https://unpkg.com/three@0.167.1/build/three.webgpu.min.js\";\r\n    const code = await (await fetch(url)).text();\r\n    return import(\"data:text/javascript;base64,\" + btoa(code));\r\n  })();\r\n  const renderer = new THREE.WebGPURenderer({\r\n    antialias: false,\r\n    logarithmicDepthBuffer: true,\r\n    powerPreference: \"high-performance\"\r\n  });\r\n  if (renderer.backend.isWebGPUBackend !== true) {\r\n    const div = document.createElement(\"div\");\r\n    div.style.cssText = \"position:absolute;inset:0;z-index:10;background-color:#ffffff;padding:20px;text-align:center;\";\r\n    div.innerHTML = \"Alert: This demo must be run with WebGPU. Please use a browser that supports WebGPU.\";\r\n    document.body.appendChild(div);\r\n    return;\r\n  }\r\n  renderer.shadowMap.enabled = true;\r\n  renderer.shadowMap.type = THREE.BasicShadowMap;\r\n  renderer.outputColorSpace = THREE.SRGBColorSpace;\r\n  document.body.appendChild(renderer.domElement);\r\n  const scene = new THREE.Scene();\r\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n  camera.position.set(0, 8, 40);\r\n  camera.rotation.set(-0.37, 0, 0);\r\n  const light = new THREE.DirectionalLight(0xffffff, Math.PI);\r\n  light.position.set(0, 15, 0);\r\n  light.target.position.set(0, 0, 0);\r\n  const shadowCam = light.shadow.camera;\r\n  light.castShadow = true;\r\n  light.shadow.mapSize.width = 8192;\r\n  light.shadow.mapSize.height = 8192;\r\n  shadowCam.near = 5;\r\n  shadowCam.far = 40;\r\n  const d = 16;\r\n  shadowCam.left = -d;\r\n  shadowCam.right = d;\r\n  shadowCam.top = d;\r\n  shadowCam.bottom = -d;\r\n  shadowCam.updateProjectionMatrix();\r\n  const box1Geometry = new THREE.BoxGeometry(40, 1, 20, 1, 1, 1);\r\n  const box2Geometry = new THREE.BoxGeometry(40, 1, 20, 1, 1, 1);\r\n  const sphereGeometry = new THREE.SphereGeometry(6, 32, 32);\r\n  const box1Mesh = new THREE.Mesh(box1Geometry, new THREE.MeshLambertMaterial({\r\n    color: new THREE.Color(0xffffff)\r\n  }));\r\n  const box2Mesh = new THREE.Mesh(box1Geometry, new THREE.MeshLambertMaterial({\r\n    color: new THREE.Color(0x3ff57b)\r\n  }));\r\n  const sphereMesh = new THREE.Mesh(sphereGeometry, new THREE.MeshLambertMaterial({\r\n    color: new THREE.Color(0x3e9df4)\r\n  }));\r\n  sphereMesh.position.set(0, -10, 0);\r\n  sphereMesh.castShadow = true;\r\n  box2Mesh.position.set(0, -20, 0);\r\n  box1Mesh.receiveShadow = true;\r\n  box2Mesh.receiveShadow = true;\r\n  scene.add(light);\r\n  scene.add(light.target);\r\n  scene.add(box1Mesh);\r\n  scene.add(box2Mesh);\r\n  scene.add(sphereMesh);\r\n  scene.add(new THREE.CameraHelper(shadowCam));\r\n  await renderer.renderAsync(scene, camera);\r\n  setInterval(function() {\r\n    camera.aspect = document.body.offsetWidth / document.body.offsetHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(document.body.offsetWidth, document.body.offsetHeight);\r\n    renderer.render(scene, camera);\r\n  }, 100);\r\n})();\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n\r\n### Version\r\n\r\n167\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome, Edge\r\n\r\n### OS\r\n\r\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29200/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29200/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29180",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29180/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29180/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29180/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29180",
        "id": 2474674617,
        "node_id": "I_kwDOAAjKyc6TgIm5",
        "number": 29180,
        "title": "OrbitControls: The position being undefined causes an error with position.x.",
        "user": {
          "login": "ljgeneral",
          "id": 131594,
          "node_id": "MDQ6VXNlcjEzMTU5NA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/131594?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ljgeneral",
          "html_url": "https://github.com/ljgeneral",
          "followers_url": "https://api.github.com/users/ljgeneral/followers",
          "following_url": "https://api.github.com/users/ljgeneral/following{/other_user}",
          "gists_url": "https://api.github.com/users/ljgeneral/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ljgeneral/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ljgeneral/subscriptions",
          "organizations_url": "https://api.github.com/users/ljgeneral/orgs",
          "repos_url": "https://api.github.com/users/ljgeneral/repos",
          "events_url": "https://api.github.com/users/ljgeneral/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ljgeneral/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          },
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-20T04:08:43Z",
        "updated_at": "2024-08-20T09:04:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\n<img width=\"985\" alt=\"image\" src=\"https://github.com/user-attachments/assets/db842be3-d0ca-4af8-b702-83db7488a9b8\">\r\nDuring dragging, there is an occasional issue where the position is undefined. This has occurred with both the mouse and the touchpad.\n\n### Reproduction steps\n\nNo consistent reproduction path has been found, but it has occurred many times.\n\n### Code\n\n```js\r\nif(position){\r\nonTouchStart({ pointerId, pageX: position.x, pageY: position.y });\r\n}\r\n```\r\n\n\n### Live example\n\n* [jsfiddle-latest-release WebGLRenderer](https://jsfiddle.net/3mrkqyea/)\r\n* [jsfiddle-dev WebGLRenderer](https://jsfiddle.net/gcqx26jv/)\r\n* [jsfiddle-latest-release WebGPURenderer](https://jsfiddle.net/8L2jkmx7/)\r\n* [jsfiddle-dev WebGPURenderer](https://jsfiddle.net/L3n1w4yh/)\r\n\n\n### Screenshots\n\n_No response_\n\n### Version\n\n^0.161.0\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nWindows, MacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29180/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29180/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29169",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29169/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29169/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29169/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29169",
        "id": 2472139649,
        "node_id": "I_kwDOAAjKyc6TWduB",
        "number": 29169,
        "title": "[Feature] USDZ and USD loader using TinyUSDZ",
        "user": {
          "login": "syoyo",
          "id": 18676,
          "node_id": "MDQ6VXNlcjE4Njc2",
          "avatar_url": "https://avatars.githubusercontent.com/u/18676?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/syoyo",
          "html_url": "https://github.com/syoyo",
          "followers_url": "https://api.github.com/users/syoyo/followers",
          "following_url": "https://api.github.com/users/syoyo/following{/other_user}",
          "gists_url": "https://api.github.com/users/syoyo/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/syoyo/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/syoyo/subscriptions",
          "organizations_url": "https://api.github.com/users/syoyo/orgs",
          "repos_url": "https://api.github.com/users/syoyo/repos",
          "events_url": "https://api.github.com/users/syoyo/events{/privacy}",
          "received_events_url": "https://api.github.com/users/syoyo/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-18T20:54:50Z",
        "updated_at": "2024-08-18T21:34:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nI'd like to share the status of TinyUSDZLoader for three.js, Its a USD loader module in wasm.\r\n\r\n![image](https://github.com/user-attachments/assets/4e488520-5e8f-489f-b7aa-f926150c913f)\r\n\r\nhttps://x.com/syoyo/status/1825270359211548719\r\n\r\nhttps://github.com/lighttransport/tinyusdz/tree/dev/sandbox/threejs\r\n\r\n## Current status\r\n\r\nA mesh with a texture possible.\r\n\r\n## Advantage\r\n\r\n* (Mostly) Full-featured USDZ support(both supports USDA Ascii and USDC binary) possible. On the contrary, current USDZLoader.js in three.js https://github.com/mrdoob/three.js/blob/dev/examples/jsm/loaders/USDZLoader.js is limited to USDA only.\r\n* Better material/texture support(e.g. loading broader EXR image format possible thanks to TinyEXR(embedded in TinyUSDZ module)\r\n* Portable. No need of SharedArrayBuffers and Atomics(whose are requirement of wasm build of OpenUSD)\r\n\r\n## Disadvantage\r\n\r\n* Larger WASM size. Roughly 2MB uncompressed, 600kb when compressed.\r\n\r\nWe still need to implement more stuffs(scene graphs, better reconstruction of material/texture suited for three.js), skinning/animations, etc. But I hope USDZLoader based on TinyUSDZ is the promising way to load USD/USDZ in  three.js. \r\n\r\n### Solution\r\n\r\nN/A\r\n\r\n### Alternatives\r\n\r\nN/A\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29169/reactions",
          "total_count": 5,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 3,
          "rocket": 2,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29169/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29163",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29163/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29163/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29163/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29163",
        "id": 2471785161,
        "node_id": "I_kwDOAAjKyc6TVHLJ",
        "number": 29163,
        "title": "Nodes: RenderOutputNode name change",
        "user": {
          "login": "WestLangley",
          "id": 1000017,
          "node_id": "MDQ6VXNlcjEwMDAwMTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1000017?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/WestLangley",
          "html_url": "https://github.com/WestLangley",
          "followers_url": "https://api.github.com/users/WestLangley/followers",
          "following_url": "https://api.github.com/users/WestLangley/following{/other_user}",
          "gists_url": "https://api.github.com/users/WestLangley/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/WestLangley/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/WestLangley/subscriptions",
          "organizations_url": "https://api.github.com/users/WestLangley/orgs",
          "repos_url": "https://api.github.com/users/WestLangley/repos",
          "events_url": "https://api.github.com/users/WestLangley/events{/privacy}",
          "received_events_url": "https://api.github.com/users/WestLangley/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/82",
          "html_url": "https://github.com/mrdoob/three.js/milestone/82",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/82/labels",
          "id": 11357506,
          "node_id": "MI_kwDOAAjKyc4ArU1C",
          "number": 82,
          "title": "r169",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 61,
          "closed_issues": 150,
          "state": "open",
          "created_at": "2024-07-25T08:18:33Z",
          "updated_at": "2024-09-17T16:29:12Z",
          "due_on": "2024-09-25T07:00:00Z",
          "closed_at": null
        },
        "comments": 2,
        "created_at": "2024-08-18T04:41:00Z",
        "updated_at": "2024-09-15T16:42:00Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\n`RenderOutputNode` converts scene-referred linear light values to display-referred code values, and then converts the code value to a color space appropriate for the display.\r\n\r\nThe current name is derived from `OutputPass`, but I think we can do better.\r\n\r\n\r\n### Solution\r\n\r\nI suggest the following nomenclature changes:\r\n\r\n1. `RenderOutputNode` => `DisplayNode`, `DisplayViewNode`, or `ViewNode`\r\n2. export const `renderOutput` => `display`, `displayView`, or `view`\r\n\r\nGiven that the transforms in this node are specific to a display, it seems reasonable to include `Display` in the name.\r\n\r\nA \"view\", I believe, can include additional post-processing. That may be appropriate if the node were to include other optional transforms at some point.\r\n\r\n//\r\n\r\nFor clarity, this is the current nomenclature:\r\n```js\r\nscenePass.setMRT( mrt( {\r\n\toutput: output,\r\n\t...\r\n} ) );\r\n\r\nconst outputPass = scenePass.getTextureNode( 'output' );\r\n\r\npostProcessing.outputNode = outputPass.renderOutput();\r\n```\r\n\r\n\r\n\r\nI recommend this nomenclature:\r\n```js\r\nscenePass.setMRT( mrt( {\r\n\toutput: output,\r\n\t...\r\n} ) );\r\n\r\nconst outputPass = scenePass.getTextureNode( 'output' );\r\n\r\nconst viewPass = outputPass.displayView();\r\n\r\npostProcessing.outputNode = viewPass;\r\n```\r\n\r\n\r\n### Alternatives\r\n\r\nNone.\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29163/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29163/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29161",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29161/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29161/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29161/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29161",
        "id": 2471704689,
        "node_id": "I_kwDOAAjKyc6TUzhx",
        "number": 29161,
        "title": "Support for texture array / compressed texture array in MeshBasicMaterial and MeshStandardMaterial by index",
        "user": {
          "login": "A2H2",
          "id": 126272684,
          "node_id": "U_kgDOB4bErA",
          "avatar_url": "https://avatars.githubusercontent.com/u/126272684?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/A2H2",
          "html_url": "https://github.com/A2H2",
          "followers_url": "https://api.github.com/users/A2H2/followers",
          "following_url": "https://api.github.com/users/A2H2/following{/other_user}",
          "gists_url": "https://api.github.com/users/A2H2/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/A2H2/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/A2H2/subscriptions",
          "organizations_url": "https://api.github.com/users/A2H2/orgs",
          "repos_url": "https://api.github.com/users/A2H2/repos",
          "events_url": "https://api.github.com/users/A2H2/events{/privacy}",
          "received_events_url": "https://api.github.com/users/A2H2/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-17T23:15:42Z",
        "updated_at": "2024-08-18T09:14:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nCurrently its not possible to create material using single texture from regular or compressed texture array. \n\n### Solution\n\nWhen creating material, I would like to specify concrete texture from texture array by index / layer / depth so given texture is used. Also I would be able to change index to change texture easily in code.\n\n### Alternatives\n\nCurrently to my understanding only custom shader can work with texture arrays.\n\n### Additional context\n\nCurrently I am loading lot of texture from ktx2 container which contains lot of compressed textures. I would like to use existing MeshBasicMaterial so I can benefit from its features like lights.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29161/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29161/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29160",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29160/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29160/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29160/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29160",
        "id": 2471676549,
        "node_id": "I_kwDOAAjKyc6TUsqF",
        "number": 29160,
        "title": "DataTexture issue introduced in r145 ",
        "user": {
          "login": "Usnul",
          "id": 5939063,
          "node_id": "MDQ6VXNlcjU5MzkwNjM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5939063?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Usnul",
          "html_url": "https://github.com/Usnul",
          "followers_url": "https://api.github.com/users/Usnul/followers",
          "following_url": "https://api.github.com/users/Usnul/following{/other_user}",
          "gists_url": "https://api.github.com/users/Usnul/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Usnul/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Usnul/subscriptions",
          "organizations_url": "https://api.github.com/users/Usnul/orgs",
          "repos_url": "https://api.github.com/users/Usnul/repos",
          "events_url": "https://api.github.com/users/Usnul/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Usnul/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-17T21:25:46Z",
        "updated_at": "2024-08-19T10:16:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nI was upgrading my [virtual texture system](https://discourse.threejs.org/t/virtual-textures/53353) to the latest revision up from r136, going directly to current version (r167.1) yielded a curious error:\r\n```sh\r\nWebGL: INVALID_OPERATION: texSubImage2D: no texture bound to target\r\nGL_INVALID_OPERATION: Invalid combination of format, type and internalFormat.\r\n``` \r\n\r\nI looked deeper and found that the problem was coming from `copyTextureToTexture`:\r\n\r\n![image](https://github.com/user-attachments/assets/f545985a-80f1-4e6e-a33d-0fbdffa8f606)\r\n\r\nSo I started looking for the point where the breakage occurs, r144 is fine, r145 breaks.\r\n\r\nLooking through the [patch notes](https://github.com/mrdoob/three.js/releases/tag/r145) yield little of interest except for:\r\n* https://github.com/mrdoob/three.js/pull/24492\r\n* https://github.com/mrdoob/three.js/pull/24599\r\n\r\nand possibly\r\nhttps://github.com/mrdoob/three.js/pull/24637\r\n\r\nHere's the actual code that sets up the offending texture:\r\n```js\r\n#page_texture = new DataTexture(\r\n        new Uint8Array(4096 * 4096  * 4),\r\n        4096 ,\r\n        4096 ,\r\n        RGBAFormat,\r\n        UnsignedByteType,\r\n    );\r\n\r\n/* ... */\r\n\r\nconst texture = this.#page_texture;\r\n\r\ntexture.unpackAlignment = 4;\r\n\r\ntexture.type = UnsignedByteType;\r\ntexture.format = RGBAFormat;\r\ntexture.internalFormat = \"RGBA8\";\r\n\r\ntexture.generateMipmaps = false;\r\n\r\ntexture.minFilter = NearestFilter;\r\ntexture.magFilter = LinearFilter;\r\n\r\ntexture.wrapS = ClampToEdgeWrapping;\r\ntexture.wrapT = ClampToEdgeWrapping;\r\n\r\ntexture.anisotropy = 8;\r\n```\r\n\r\nAll of the above is done in the constructor of the containing class, so all parts are done before first usage.\r\n\r\nThe texture is bound to two custom shaders:\r\n![image](https://github.com/user-attachments/assets/325f49c6-30d4-46cc-9254-1eafae2ca8c3)\r\n\r\nhere's what that looks like in r144:\r\n![image](https://github.com/user-attachments/assets/e9717718-17b2-4deb-8b3f-39a0014a3c3d)\r\n\r\n\r\nNothing special there really, but perhaps important is the fact that these two use different `ShaderMaterial`s, because if I comment out uniform assignment for one of the shaders (the one used for central element), the error goes away:\r\n\r\n![image](https://github.com/user-attachments/assets/4c2319ab-c185-4eca-b06a-bdc2ccc487fc)\r\n\r\nThe console is clean too.\r\n\r\nMy best guess is that when `textures.setTexture2D( dstTexture, 0 );` is being called inside `copyTextureToTexture`, it binds / activates the wrong texture. Why? - no idea.\r\n\r\n### Version\r\n\r\nr167.1\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29160/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29160/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29156",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29156/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29156/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29156/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29156",
        "id": 2471374826,
        "node_id": "I_kwDOAAjKyc6TTi_q",
        "number": 29156,
        "title": "Provide a WebGPU build that re-exports from three",
        "user": {
          "login": "isaac-mason",
          "id": 67411435,
          "node_id": "MDQ6VXNlcjY3NDExNDM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/67411435?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/isaac-mason",
          "html_url": "https://github.com/isaac-mason",
          "followers_url": "https://api.github.com/users/isaac-mason/followers",
          "following_url": "https://api.github.com/users/isaac-mason/following{/other_user}",
          "gists_url": "https://api.github.com/users/isaac-mason/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/isaac-mason/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/isaac-mason/subscriptions",
          "organizations_url": "https://api.github.com/users/isaac-mason/orgs",
          "repos_url": "https://api.github.com/users/isaac-mason/repos",
          "events_url": "https://api.github.com/users/isaac-mason/events{/privacy}",
          "received_events_url": "https://api.github.com/users/isaac-mason/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2024-08-17T06:23:33Z",
        "updated_at": "2024-09-15T15:54:27Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nWhen using the WebGPU build introduced in r167 with [vite, using recommended aliases configuration](https://github.com/mrdoob/three.js/pull/28650#issuecomment-2198568721), I am unable to use renderer agnostic exports from libraries that also have webgl imports. Bundlers will have errors attempting to import webgl specific imports that are not exported by the webgpu build.\r\n\r\n### Solution\r\n\r\nIf the three/webgpu build re-exported from three, aliases would not be required to use the webgpu build with bundlers, and libraries could export both webgl and webgpu utilities that import from both three and three/webgpu.\r\n\r\n\r\n\r\n### Alternatives\r\n\r\nA build that has both webgl and webgpu exports could solve some issues, but this is not as desirable as the proposed solution as bundler aliases would still be required to prevent duplication issues.\r\n\r\n### Additional context\r\n\r\nhttps://twitter.com/onirenaud/status/1824688713542341119",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29156/reactions",
          "total_count": 10,
          "+1": 10,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29156/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29096",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29096/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29096/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29096/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29096",
        "id": 2457636387,
        "node_id": "I_kwDOAAjKyc6SfI4j",
        "number": 29096,
        "title": "WebGLRenderTarget and scene.background has tonemapping issues",
        "user": {
          "login": "drcmda",
          "id": 2223602,
          "node_id": "MDQ6VXNlcjIyMjM2MDI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2223602?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/drcmda",
          "html_url": "https://github.com/drcmda",
          "followers_url": "https://api.github.com/users/drcmda/followers",
          "following_url": "https://api.github.com/users/drcmda/following{/other_user}",
          "gists_url": "https://api.github.com/users/drcmda/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/drcmda/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/drcmda/subscriptions",
          "organizations_url": "https://api.github.com/users/drcmda/orgs",
          "repos_url": "https://api.github.com/users/drcmda/repos",
          "events_url": "https://api.github.com/users/drcmda/events{/privacy}",
          "received_events_url": "https://api.github.com/users/drcmda/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-09T10:41:01Z",
        "updated_at": "2024-08-18T09:44:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\n```jsx\r\nscene.background = new THREE.Color(\"white\")\r\n...\r\ngl.render(scene, camera)\r\n```\r\nproduces a white background, i don't think three applies tm here\r\n\r\nbut the same thing on a fbo (mapped to a mesh-material) produces a gray background, presumably because threejs then tonemapps the result\r\n```jsx\r\nstate.gl.setRenderTarget(fbo)\r\nstate.gl.render(scene, camera)\r\nstate.gl.setRenderTarget(null)\r\n...\r\nconst plane = new THREE.PlaneGeometry/(\r\nconst material = new THREE.MeshBasicMaterial({ map: fbo.texture })\r\nconst mesh = new THREE.Mesh(plane, material)\r\n```\r\n\r\nin this image you have the rendertarget in the middle, with a white scene.background just like the rest of the scene, but it appears gray, not white.\r\n<img width=\"1430\" alt=\"Screenshot 2024-08-09 at 12 05 01\" src=\"https://github.com/user-attachments/assets/19f667e2-b53f-4d9a-97d4-1ab300f38e85\">\r\n\r\n## tonemapping with envmap background is fine\r\n\r\n<img width=\"564\" alt=\"Screenshot 2024-08-09 at 12 33 13\" src=\"https://github.com/user-attachments/assets/99acec43-4ae8-4590-9665-828ac18ed4ad\">\r\n\r\n## tonemapping with a background white plane instead of scene.background is fine\r\n\r\n<img width=\"1288\" alt=\"Screenshot 2024-08-09 at 12 35 38\" src=\"https://github.com/user-attachments/assets/9535e372-6f61-4df8-8e04-4b00885253c2\">\r\n\r\n\r\n\r\n### Live example\r\n\r\n* https://codesandbox.io/p/sandbox/shadermaterials-forked-7r5knf\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nr0.167.0\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29096/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29096/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29071",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29071/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29071/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29071/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29071",
        "id": 2450151393,
        "node_id": "I_kwDOAAjKyc6SClfh",
        "number": 29071,
        "title": "Doc : Access to instance positions in NodeMaterial",
        "user": {
          "login": "Makio64",
          "id": 213351,
          "node_id": "MDQ6VXNlcjIxMzM1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/213351?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Makio64",
          "html_url": "https://github.com/Makio64",
          "followers_url": "https://api.github.com/users/Makio64/followers",
          "following_url": "https://api.github.com/users/Makio64/following{/other_user}",
          "gists_url": "https://api.github.com/users/Makio64/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Makio64/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Makio64/subscriptions",
          "organizations_url": "https://api.github.com/users/Makio64/orgs",
          "repos_url": "https://api.github.com/users/Makio64/repos",
          "events_url": "https://api.github.com/users/Makio64/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Makio64/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 911721310,
            "node_id": "MDU6TGFiZWw5MTE3MjEzMTA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Documentation",
            "name": "Documentation",
            "color": "137d89",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-06T07:26:30Z",
        "updated_at": "2024-08-13T20:50:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nI coudnt find the right way to access or use instance properties in TSL from the doc (  [Three.js-Shading-Language](https://github.com/mrdoob/three.js/wiki/Three.js-Shading-Language) ) or examples.\r\n\r\nWould be nice to get the explanation on how to access to the `ID` and `instanceMatrix` / `instanceColorMatrix` and i would be happy to create simple examples and update the documentation.\n\n### Solution\n\n- Update the doc for TSL including accessors for instance / batch\r\n- Add minimal examples : The color of the material change depending of the x y z axis of the instance\n\n### Alternatives\n\nAnother minimal example : the scale of the instance change depending of the luminosity of the instanceColorMatrix \n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29071/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29071/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29065",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29065/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29065/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29065/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29065",
        "id": 2447543332,
        "node_id": "I_kwDOAAjKyc6R4owk",
        "number": 29065,
        "title": "GLTFLoader can't load webp images in webworker",
        "user": {
          "login": "Noobulater",
          "id": 4164318,
          "node_id": "MDQ6VXNlcjQxNjQzMTg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4164318?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Noobulater",
          "html_url": "https://github.com/Noobulater",
          "followers_url": "https://api.github.com/users/Noobulater/followers",
          "following_url": "https://api.github.com/users/Noobulater/following{/other_user}",
          "gists_url": "https://api.github.com/users/Noobulater/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Noobulater/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Noobulater/subscriptions",
          "organizations_url": "https://api.github.com/users/Noobulater/orgs",
          "repos_url": "https://api.github.com/users/Noobulater/repos",
          "events_url": "https://api.github.com/users/Noobulater/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Noobulater/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-05T03:59:39Z",
        "updated_at": "2024-09-08T02:19:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nA GLTFLoader created in a webworker can't load webp files. The issue stems from attempting to use `Image` in a webworker, which doesn't exist. \r\n\r\n### Reproduction steps\r\n\r\n1. Run a gtlfloader in a webworker\r\n2. Load a gltf that includes a web file\r\n3. Error message\r\n![image](https://github.com/user-attachments/assets/5e756972-b1e5-41fe-81a5-0bdf5687455d)\r\n\r\n\r\n### Version\r\nr167",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29065/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29065/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29045",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29045/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29045/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29045/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29045",
        "id": 2442005523,
        "node_id": "I_kwDOAAjKyc6RjgwT",
        "number": 29045,
        "title": "BatchedMesh doesn't render wireframe mode correctly",
        "user": {
          "login": "RodrigoHamuy",
          "id": 2405611,
          "node_id": "MDQ6VXNlcjI0MDU2MTE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2405611?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RodrigoHamuy",
          "html_url": "https://github.com/RodrigoHamuy",
          "followers_url": "https://api.github.com/users/RodrigoHamuy/followers",
          "following_url": "https://api.github.com/users/RodrigoHamuy/following{/other_user}",
          "gists_url": "https://api.github.com/users/RodrigoHamuy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RodrigoHamuy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RodrigoHamuy/subscriptions",
          "organizations_url": "https://api.github.com/users/RodrigoHamuy/orgs",
          "repos_url": "https://api.github.com/users/RodrigoHamuy/repos",
          "events_url": "https://api.github.com/users/RodrigoHamuy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RodrigoHamuy/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-01T09:48:07Z",
        "updated_at": "2024-08-03T14:55:55Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\n`BatchedMesh` doesn't render `wireframe` mode correctly.\n\n### Reproduction steps\n\n1. Create a `BatchedMesh` with any `Material` with `wireframe` set to true.\r\n2. Look at the results.\r\n\n\n### Code\n\n```js\r\n  const box = new THREE.BoxGeometry();\r\n  const sphere = new THREE.SphereGeometry();\r\n  const material = new THREE.MeshBasicMaterial( { wireframe: true } );\r\n\r\n  const batchedMesh = new THREE.BatchedMesh( 10, 5000, 10000, material );\r\n  const boxGeometryId = batchedMesh.addGeometry( box );\r\n  const boxInstancedId1 = batchedMesh.addInstance( boxGeometryId );\r\n  batchedMesh.setMatrixAt( boxInstancedId1, new THREE.Matrix4());\r\n  scene.add( batchedMesh );\r\n```\r\n\n\n### Live example\n\nhttps://jsfiddle.net/hamuyrodrigo/w9vhs7rp/62/\n\n### Screenshots\n\nExample:\r\n2 spheres and 2 boxes.\r\n\r\nWith wireframe turned on.\r\n![image](https://github.com/user-attachments/assets/3eb65e9b-e8e6-41aa-b476-17efd3c21677)\r\n\r\nWith wireframe turned off.\r\n![image](https://github.com/user-attachments/assets/3335c478-a7fb-4847-9a34-a1748ddd4af1)\n\n### Version\n\nr167\n\n### Device\n\nDesktop, Mobile\n\n### Browser\n\nChrome\n\n### OS\n\nMacOS, Android",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29045/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29045/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29041",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29041/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29041/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29041/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29041",
        "id": 2441318615,
        "node_id": "I_kwDOAAjKyc6Rg5DX",
        "number": 29041,
        "title": "MeshBatched .sortObjects flicker on iOS(safari) WebGPU",
        "user": {
          "login": "Makio64",
          "id": 213351,
          "node_id": "MDQ6VXNlcjIxMzM1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/213351?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Makio64",
          "html_url": "https://github.com/Makio64",
          "followers_url": "https://api.github.com/users/Makio64/followers",
          "following_url": "https://api.github.com/users/Makio64/following{/other_user}",
          "gists_url": "https://api.github.com/users/Makio64/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Makio64/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Makio64/subscriptions",
          "organizations_url": "https://api.github.com/users/Makio64/orgs",
          "repos_url": "https://api.github.com/users/Makio64/repos",
          "events_url": "https://api.github.com/users/Makio64/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Makio64/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 609335156,
            "node_id": "MDU6TGFiZWw2MDkzMzUxNTY=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Browser%20Issue",
            "name": "Browser Issue",
            "color": "d93f0b",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-01T02:46:50Z",
        "updated_at": "2024-09-14T08:17:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nEnable .sortObjects on MeshBatched introduce flickering ( WebGPU - Safari - iOS18 ) \r\nvideo recording : https://github.com/user-attachments/assets/5f43ab39-c780-4ca3-a260-e5c2a3bf402f \r\n\r\nI also open a bug ticket on Webkit : https://bugs.webkit.org/show_bug.cgi?id=277465\r\n\r\n### Reproduction steps\r\n\r\n1. create a BatchedMesh \r\n2. batchedMesh.sortObjects = true\r\n3. turn camera, on some angle element which should be visible will disapear\r\n\r\n### Code\r\n\r\nSimple batchedMesh example\r\n```js\r\n\t\t\tconst batchedMesh = new BatchedMesh(10000, maxVertices, maxIndices, scene.children[0].material )\r\n\t\t\tbatchedMesh.perObjectFrustumCulled = true\r\n\t\t\tbatchedMesh.sortObjects = true\r\n\t\t\tfor(let i = 0; i < geometries.length; i++){\r\n\t\t\t\tlet geometry = geometries[i]\r\n\t\t\t\tbatchedMesh.addGeometry(geometry)\r\n\t\t\t}\r\n\t\t\tlet dummy = new Object3D()\r\n\t\t\tfor(let i = 0; i < 5000; i++){\r\n\t\t\t\tbatchedMesh.addInstance( i % 200 )\r\n\t\t\t\tlet angle = Math.random() * Math.PI * 2\r\n\t\t\t\tlet dist = 15 + Math.random() * 200\r\n\t\t\t\tdummy.position.set(Math.cos(angle) * dist, ( Math.random() - .5) * 0.1, Math.sin(angle) * dist )\r\n\t\t\t\tdummy.rotation.set( 0, Math.random() * Math.PI, 0 )\r\n\t\t\t\tdummy.scale.set( 1, 1, 1 )\r\n\t\t\t\tdummy.updateMatrix()\r\n\t\t\t\tbatchedMesh.setMatrixAt( i, dummy.matrix )\r\n\t\t\t}\r\n\t\t\tscene.add(batchedMesh)\r\n```\r\n\r\n\r\n### Live example\r\n\r\n- \r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nr167\r\n\r\n### Device\r\n\r\nMobile\r\n\r\n### Browser\r\n\r\nSafari\r\n\r\n### OS\r\n\r\niOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29041/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29041/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29036",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29036/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29036/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29036/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29036",
        "id": 2440114327,
        "node_id": "I_kwDOAAjKyc6RcTCX",
        "number": 29036,
        "title": "BatchedMesh without a transform array",
        "user": {
          "login": "nkallen",
          "id": 699,
          "node_id": "MDQ6VXNlcjY5OQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/699?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nkallen",
          "html_url": "https://github.com/nkallen",
          "followers_url": "https://api.github.com/users/nkallen/followers",
          "following_url": "https://api.github.com/users/nkallen/following{/other_user}",
          "gists_url": "https://api.github.com/users/nkallen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nkallen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nkallen/subscriptions",
          "organizations_url": "https://api.github.com/users/nkallen/orgs",
          "repos_url": "https://api.github.com/users/nkallen/repos",
          "events_url": "https://api.github.com/users/nkallen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nkallen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-07-31T13:49:49Z",
        "updated_at": "2024-08-09T11:24:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nAs mentioned previously, we are using BatchedMesh extensively. However, we don't actually use the transform arrays. I would like to make that optional. For our use cases, it keeps the code simpler, it uses less VRAM, and it has a (small) effect on rasterization performance.\n\n### Solution\n\nSomething like:\r\n\r\n```\r\n\t\t\tbatchingMatrix: IS_BATCHEDMESH && object._matricesTexture !== null,\r\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\r\n```\r\n\r\nand\r\n\r\n```\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\r\n\t\t\t\tif ( objects._matricesTexture !== null ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\r\n\t\t\t\tif ( object._indirectTexture !== null ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\r\n\r\n\t\t\t\t}\r\n```\n\n### Alternatives\n\nI'm not sure\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29036/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29036/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/29018",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/29018/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/29018/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/29018/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/29018",
        "id": 2437503415,
        "node_id": "I_kwDOAAjKyc6RSVm3",
        "number": 29018,
        "title": "BatchedMesh and gl.LINES, gl.POINTS",
        "user": {
          "login": "nkallen",
          "id": 699,
          "node_id": "MDQ6VXNlcjY5OQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/699?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nkallen",
          "html_url": "https://github.com/nkallen",
          "followers_url": "https://api.github.com/users/nkallen/followers",
          "following_url": "https://api.github.com/users/nkallen/following{/other_user}",
          "gists_url": "https://api.github.com/users/nkallen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nkallen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nkallen/subscriptions",
          "organizations_url": "https://api.github.com/users/nkallen/orgs",
          "repos_url": "https://api.github.com/users/nkallen/repos",
          "events_url": "https://api.github.com/users/nkallen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nkallen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-07-30T10:37:47Z",
        "updated_at": "2024-08-08T06:18:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nI am currently using BatchedMesh extensively -- not just with meshes but also with `gl.LINES` and `gl.POINTS`\r\n\r\nNote that multidraw does accept a mode: `extension.multiDrawElementsWEBGL( mode, ... )`\r\n\r\nIt may be unintended, but the `isBatchedMesh` check in `WebGLRenderer` does not set the mode; rather it is set a few lines before with checks on `isPoint` and `isLine`. This is very convenient and everything almost works out of the box. Only the points shader isn't fully compatible.\r\n\r\n### Solution\r\n\r\nThe only snag is that `points.glsl.js` needs to add `\t#include <batching_vertex>`\r\n\r\n### Alternatives\r\n\r\nWell, the shader could be manipulated with a string replace but I think that is a gnarly hack\r\n\r\n### Additional context\r\n\r\nI do want to note that while I don't actually use the THREE.BatchedMesh class very much, I have my own class with `isBatchedMesh = true` to benefit from access to multidraw",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/29018/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/29018/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28994",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28994/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28994/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28994/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28994",
        "id": 2433138084,
        "node_id": "I_kwDOAAjKyc6RBr2k",
        "number": 28994,
        "title": "Using the games_fps example, there is an exception in my model",
        "user": {
          "login": "Jinxishihenian",
          "id": 44466363,
          "node_id": "MDQ6VXNlcjQ0NDY2MzYz",
          "avatar_url": "https://avatars.githubusercontent.com/u/44466363?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jinxishihenian",
          "html_url": "https://github.com/Jinxishihenian",
          "followers_url": "https://api.github.com/users/Jinxishihenian/followers",
          "following_url": "https://api.github.com/users/Jinxishihenian/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jinxishihenian/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jinxishihenian/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jinxishihenian/subscriptions",
          "organizations_url": "https://api.github.com/users/Jinxishihenian/orgs",
          "repos_url": "https://api.github.com/users/Jinxishihenian/repos",
          "events_url": "https://api.github.com/users/Jinxishihenian/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jinxishihenian/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-07-27T00:48:08Z",
        "updated_at": "2024-07-31T12:05:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nMy model, the wall can be snapped as the character jumps and moves forward, the capsule model.\r\n\r\n\r\nWhat I know:\r\nIn the process of my testing, I think it is not the code reason, it may be the problem caused by the model, because I tried to create a face, and in the model software, flip this face to different angles, such as 90 degrees, -90 degrees, -90 degrees is normal, the model can't get stuck to the capsule, but it can't with 90, the capsule will be stuck. I can't confirm exactly what caused it. And in the model that I had a problem with, that wall looked like it was in the model software as well, flat.\n\n### Reproduction steps\n\n1. Open games_fps example.\r\n2. Replace the model in it with mine.\r\n3. Control the character to jump and move forward, which has a wall that can lead to the capsule model stuck in the wall.\r\n\n\n### Code\n\n```js\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<title>three.js - misc - octree collisions</title>\r\n\t<meta charset=utf-8 />\r\n\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\r\n\t<link type=\"text/css\" rel=\"stylesheet\" href=\"main.css\">\r\n</head>\r\n<body>\r\n<div id=\"info\">\r\n\tOctree threejs demo - basic collisions with static triangle mesh<br />\r\n\tMOUSE to look around and to throw balls<br/>\r\n\tWASD to move and SPACE to jump\r\n</div>\r\n<div id=\"container\"></div>\r\n\r\n<script type=\"importmap\">\r\n\t{\r\n\t\t\"imports\": {\r\n\t\t\t\"three\": \"../build/three.module.js\",\r\n\t\t\t\"three/addons/\": \"./jsm/\"\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<script type=\"module\">\r\n\r\n\timport * as THREE from 'three';\r\n\r\n\timport Stats from 'three/addons/libs/stats.module.js';\r\n\r\n\timport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\r\n\r\n\timport { Octree } from 'three/addons/math/Octree.js';\r\n\timport { OctreeHelper } from 'three/addons/helpers/OctreeHelper.js';\r\n\r\n\timport { Capsule } from 'three/addons/math/Capsule.js';\r\n\r\n\timport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\r\n\r\n\tconst clock = new THREE.Clock();\r\n\r\n\tconst scene = new THREE.Scene();\r\n\tscene.background = new THREE.Color( 0x88ccee );\r\n\tscene.fog = new THREE.Fog( 0x88ccee, 0, 50 );\r\n\r\n\tconst camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\tcamera.rotation.order = 'YXZ';\r\n\r\n\tconst fillLight1 = new THREE.HemisphereLight( 0x8dc1de, 0x00668d, 1.5 );\r\n\tfillLight1.position.set( 2, 1, 1 );\r\n\tscene.add( fillLight1 );\r\n\r\n\tconst directionalLight = new THREE.DirectionalLight( 0xffffff, 2.5 );\r\n\tdirectionalLight.position.set( - 5, 25, - 1 );\r\n\tdirectionalLight.castShadow = true;\r\n\tdirectionalLight.shadow.camera.near = 0.01;\r\n\tdirectionalLight.shadow.camera.far = 500;\r\n\tdirectionalLight.shadow.camera.right = 30;\r\n\tdirectionalLight.shadow.camera.left = - 30;\r\n\tdirectionalLight.shadow.camera.top\t= 30;\r\n\tdirectionalLight.shadow.camera.bottom = - 30;\r\n\tdirectionalLight.shadow.mapSize.width = 1024;\r\n\tdirectionalLight.shadow.mapSize.height = 1024;\r\n\tdirectionalLight.shadow.radius = 4;\r\n\tdirectionalLight.shadow.bias = - 0.00006;\r\n\tscene.add( directionalLight );\r\n\r\n\tconst container = document.getElementById( 'container' );\r\n\r\n\tconst renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n\trenderer.setPixelRatio( window.devicePixelRatio );\r\n\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\trenderer.setAnimationLoop( animate );\r\n\trenderer.shadowMap.enabled = true;\r\n\trenderer.shadowMap.type = THREE.VSMShadowMap;\r\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n\tcontainer.appendChild( renderer.domElement );\r\n\r\n\tconst stats = new Stats();\r\n\tstats.domElement.style.position = 'absolute';\r\n\tstats.domElement.style.top = '0px';\r\n\tcontainer.appendChild( stats.domElement );\r\n\r\n\tconst GRAVITY = 30;\r\n\r\n\tconst NUM_SPHERES = 100;\r\n\tconst SPHERE_RADIUS = 0.2;\r\n\r\n\tconst STEPS_PER_FRAME = 5;\r\n\r\n\tconst sphereGeometry = new THREE.IcosahedronGeometry( SPHERE_RADIUS, 5 );\r\n\tconst sphereMaterial = new THREE.MeshLambertMaterial( { color: 0xdede8d } );\r\n\r\n\tconst spheres = [];\r\n\tlet sphereIdx = 0;\r\n\r\n\tfor ( let i = 0; i < NUM_SPHERES; i ++ ) {\r\n\r\n\t\tconst sphere = new THREE.Mesh( sphereGeometry, sphereMaterial );\r\n\t\tsphere.castShadow = true;\r\n\t\tsphere.receiveShadow = true;\r\n\r\n\t\tscene.add( sphere );\r\n\r\n\t\tspheres.push( {\r\n\t\t\tmesh: sphere,\r\n\t\t\tcollider: new THREE.Sphere( new THREE.Vector3( 0, - 100, 0 ), SPHERE_RADIUS ),\r\n\t\t\tvelocity: new THREE.Vector3()\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tconst worldOctree = new Octree();\r\n\r\n\tconst playerCollider = new Capsule( new THREE.Vector3( 0, 0.35, 0 ), new THREE.Vector3( 0, 1, 0 ), 0.35 );\r\n\r\n\tconst playerVelocity = new THREE.Vector3();\r\n\tconst playerDirection = new THREE.Vector3();\r\n\r\n\tlet playerOnFloor = false;\r\n\tlet mouseTime = 0;\r\n\r\n\tconst keyStates = {};\r\n\r\n\tconst vector1 = new THREE.Vector3();\r\n\tconst vector2 = new THREE.Vector3();\r\n\tconst vector3 = new THREE.Vector3();\r\n\r\n\tdocument.addEventListener( 'keydown', ( event ) => {\r\n\r\n\t\tkeyStates[ event.code ] = true;\r\n\r\n\t} );\r\n\r\n\tdocument.addEventListener( 'keyup', ( event ) => {\r\n\r\n\t\tkeyStates[ event.code ] = false;\r\n\r\n\t} );\r\n\r\n\tcontainer.addEventListener( 'mousedown', () => {\r\n\r\n\t\tdocument.body.requestPointerLock();\r\n\r\n\t\tmouseTime = performance.now();\r\n\r\n\t} );\r\n\r\n\tdocument.addEventListener( 'mouseup', () => {\r\n\r\n\t\tif ( document.pointerLockElement !== null ) throwBall();\r\n\r\n\t} );\r\n\r\n\tdocument.body.addEventListener( 'mousemove', ( event ) => {\r\n\r\n\t\tif ( document.pointerLockElement === document.body ) {\r\n\r\n\t\t\tcamera.rotation.y -= event.movementX / 500;\r\n\t\t\tcamera.rotation.x -= event.movementY / 500;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\twindow.addEventListener( 'resize', onWindowResize );\r\n\r\n\tfunction onWindowResize() {\r\n\r\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t}\r\n\r\n\tfunction throwBall() {\r\n\r\n\t\tconst sphere = spheres[ sphereIdx ];\r\n\r\n\t\tcamera.getWorldDirection( playerDirection );\r\n\r\n\t\tsphere.collider.center.copy( playerCollider.end ).addScaledVector( playerDirection, playerCollider.radius * 1.5 );\r\n\r\n\t\t// throw the ball with more force if we hold the button longer, and if we move forward\r\n\r\n\t\tconst impulse = 15 + 30 * ( 1 - Math.exp( ( mouseTime - performance.now() ) * 0.001 ) );\r\n\r\n\t\tsphere.velocity.copy( playerDirection ).multiplyScalar( impulse );\r\n\t\tsphere.velocity.addScaledVector( playerVelocity, 2 );\r\n\r\n\t\tsphereIdx = ( sphereIdx + 1 ) % spheres.length;\r\n\r\n\t}\r\n\r\n\tfunction playerCollisions() {\r\n\r\n\t\tconst result = worldOctree.capsuleIntersect( playerCollider );\r\n\r\n\t\tplayerOnFloor = false;\r\n\r\n\t\tif ( result ) {\r\n\r\n\t\t\tplayerOnFloor = result.normal.y > 0;\r\n\r\n\t\t\tif ( ! playerOnFloor ) {\r\n\r\n\t\t\t\tplayerVelocity.addScaledVector( result.normal, - result.normal.dot( playerVelocity ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( result.depth >= 1e-10 ) {\r\n\r\n\t\t\t\tplayerCollider.translate( result.normal.multiplyScalar( result.depth ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updatePlayer( deltaTime ) {\r\n\r\n\t\tlet damping = Math.exp( - 4 * deltaTime ) - 1;\r\n\r\n\t\tif ( ! playerOnFloor ) {\r\n\r\n\t\t\tplayerVelocity.y -= GRAVITY * deltaTime;\r\n\r\n\t\t\t// small air resistance\r\n\t\t\tdamping *= 0.1;\r\n\r\n\t\t}\r\n\r\n\t\tplayerVelocity.addScaledVector( playerVelocity, damping );\r\n\r\n\t\tconst deltaPosition = playerVelocity.clone().multiplyScalar( deltaTime );\r\n\t\tplayerCollider.translate( deltaPosition );\r\n\r\n\t\tplayerCollisions();\r\n\r\n\t\tcamera.position.copy( playerCollider.end );\r\n\r\n\t}\r\n\r\n\tfunction playerSphereCollision( sphere ) {\r\n\r\n\t\tconst center = vector1.addVectors( playerCollider.start, playerCollider.end ).multiplyScalar( 0.5 );\r\n\r\n\t\tconst sphere_center = sphere.collider.center;\r\n\r\n\t\tconst r = playerCollider.radius + sphere.collider.radius;\r\n\t\tconst r2 = r * r;\r\n\r\n\t\t// approximation: player = 3 spheres\r\n\r\n\t\tfor ( const point of [ playerCollider.start, playerCollider.end, center ] ) {\r\n\r\n\t\t\tconst d2 = point.distanceToSquared( sphere_center );\r\n\r\n\t\t\tif ( d2 < r2 ) {\r\n\r\n\t\t\t\tconst normal = vector1.subVectors( point, sphere_center ).normalize();\r\n\t\t\t\tconst v1 = vector2.copy( normal ).multiplyScalar( normal.dot( playerVelocity ) );\r\n\t\t\t\tconst v2 = vector3.copy( normal ).multiplyScalar( normal.dot( sphere.velocity ) );\r\n\r\n\t\t\t\tplayerVelocity.add( v2 ).sub( v1 );\r\n\t\t\t\tsphere.velocity.add( v1 ).sub( v2 );\r\n\r\n\t\t\t\tconst d = ( r - Math.sqrt( d2 ) ) / 2;\r\n\t\t\t\tsphere_center.addScaledVector( normal, - d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction spheresCollisions() {\r\n\r\n\t\tfor ( let i = 0, length = spheres.length; i < length; i ++ ) {\r\n\r\n\t\t\tconst s1 = spheres[ i ];\r\n\r\n\t\t\tfor ( let j = i + 1; j < length; j ++ ) {\r\n\r\n\t\t\t\tconst s2 = spheres[ j ];\r\n\r\n\t\t\t\tconst d2 = s1.collider.center.distanceToSquared( s2.collider.center );\r\n\t\t\t\tconst r = s1.collider.radius + s2.collider.radius;\r\n\t\t\t\tconst r2 = r * r;\r\n\r\n\t\t\t\tif ( d2 < r2 ) {\r\n\r\n\t\t\t\t\tconst normal = vector1.subVectors( s1.collider.center, s2.collider.center ).normalize();\r\n\t\t\t\t\tconst v1 = vector2.copy( normal ).multiplyScalar( normal.dot( s1.velocity ) );\r\n\t\t\t\t\tconst v2 = vector3.copy( normal ).multiplyScalar( normal.dot( s2.velocity ) );\r\n\r\n\t\t\t\t\ts1.velocity.add( v2 ).sub( v1 );\r\n\t\t\t\t\ts2.velocity.add( v1 ).sub( v2 );\r\n\r\n\t\t\t\t\tconst d = ( r - Math.sqrt( d2 ) ) / 2;\r\n\r\n\t\t\t\t\ts1.collider.center.addScaledVector( normal, d );\r\n\t\t\t\t\ts2.collider.center.addScaledVector( normal, - d );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateSpheres( deltaTime ) {\r\n\r\n\t\tspheres.forEach( sphere => {\r\n\r\n\t\t\tsphere.collider.center.addScaledVector( sphere.velocity, deltaTime );\r\n\r\n\t\t\tconst result = worldOctree.sphereIntersect( sphere.collider );\r\n\r\n\t\t\tif ( result ) {\r\n\r\n\t\t\t\tsphere.velocity.addScaledVector( result.normal, - result.normal.dot( sphere.velocity ) * 1.5 );\r\n\t\t\t\tsphere.collider.center.add( result.normal.multiplyScalar( result.depth ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsphere.velocity.y -= GRAVITY * deltaTime;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst damping = Math.exp( - 1.5 * deltaTime ) - 1;\r\n\t\t\tsphere.velocity.addScaledVector( sphere.velocity, damping );\r\n\r\n\t\t\tplayerSphereCollision( sphere );\r\n\r\n\t\t} );\r\n\r\n\t\tspheresCollisions();\r\n\r\n\t\tfor ( const sphere of spheres ) {\r\n\r\n\t\t\tsphere.mesh.position.copy( sphere.collider.center );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getForwardVector() {\r\n\r\n\t\tcamera.getWorldDirection( playerDirection );\r\n\t\tplayerDirection.y = 0;\r\n\t\tplayerDirection.normalize();\r\n\r\n\t\treturn playerDirection;\r\n\r\n\t}\r\n\r\n\tfunction getSideVector() {\r\n\r\n\t\tcamera.getWorldDirection( playerDirection );\r\n\t\tplayerDirection.y = 0;\r\n\t\tplayerDirection.normalize();\r\n\t\tplayerDirection.cross( camera.up );\r\n\r\n\t\treturn playerDirection;\r\n\r\n\t}\r\n\r\n\tfunction controls( deltaTime ) {\r\n\r\n\t\t// gives a bit of air control\r\n\t\tconst speedDelta = deltaTime * ( playerOnFloor ? 25 : 8 );\r\n\r\n\t\tif ( keyStates[ 'KeyW' ] ) {\r\n\r\n\t\t\tplayerVelocity.add( getForwardVector().multiplyScalar( speedDelta ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( keyStates[ 'KeyS' ] ) {\r\n\r\n\t\t\tplayerVelocity.add( getForwardVector().multiplyScalar( - speedDelta ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( keyStates[ 'KeyA' ] ) {\r\n\r\n\t\t\tplayerVelocity.add( getSideVector().multiplyScalar( - speedDelta ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( keyStates[ 'KeyD' ] ) {\r\n\r\n\t\t\tplayerVelocity.add( getSideVector().multiplyScalar( speedDelta ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( playerOnFloor ) {\r\n\r\n\t\t\tif ( keyStates[ 'Space' ] ) {\r\n\r\n\t\t\t\tplayerVelocity.y = 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst loader = new GLTFLoader().setPath( './models/gltf/' );\r\n\r\n\tloader.load( 'bug.glb', ( gltf ) => {\r\n\r\n\t\tscene.add( gltf.scene );\r\n\r\n\t\tworldOctree.fromGraphNode( gltf.scene );\r\n\r\n\t\tgltf.scene.traverse( child => {\r\n\r\n\t\t\tif ( child.isMesh ) {\r\n\r\n\t\t\t\tchild.castShadow = true;\r\n\t\t\t\tchild.receiveShadow = true;\r\n\r\n\t\t\t\tif ( child.material.map ) {\r\n\r\n\t\t\t\t\tchild.material.map.anisotropy = 4;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tconst helper = new OctreeHelper( worldOctree );\r\n\t\thelper.visible = false;\r\n\t\tscene.add( helper );\r\n\r\n\t\tconst gui = new GUI( { width: 200 } );\r\n\t\tgui.add( { debug: false }, 'debug' )\r\n\t\t\t.onChange( function ( value ) {\r\n\r\n\t\t\t\thelper.visible = value;\r\n\r\n\t\t\t} );\r\n\r\n\t} );\r\n\r\n\tfunction teleportPlayerIfOob() {\r\n\r\n\t\tif ( camera.position.y <= - 25 ) {\r\n\r\n\t\t\tplayerCollider.start.set( 0, 0.35, 0 );\r\n\t\t\tplayerCollider.end.set( 0, 1, 0 );\r\n\t\t\tplayerCollider.radius = 0.35;\r\n\t\t\tcamera.position.copy( playerCollider.end );\r\n\t\t\tcamera.rotation.set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction animate() {\r\n\r\n\t\tconst deltaTime = Math.min( 0.05, clock.getDelta() ) / STEPS_PER_FRAME;\r\n\r\n\t\t// we look for collisions in substeps to mitigate the risk of\r\n\t\t// an object traversing another too quickly for detection.\r\n\r\n\t\tfor ( let i = 0; i < STEPS_PER_FRAME; i ++ ) {\r\n\r\n\t\t\tcontrols( deltaTime );\r\n\r\n\t\t\tupdatePlayer( deltaTime );\r\n\r\n\t\t\tupdateSpheres( deltaTime );\r\n\r\n\t\t\tteleportPlayerIfOob();\r\n\r\n\t\t}\r\n\r\n\t\trenderer.render( scene, camera );\r\n\r\n\t\tstats.update();\r\n\r\n\t}\r\n\r\n</script>\r\n</body>\r\n</html>\r\n\r\n```\r\n[bug.zip](https://github.com/user-attachments/files/16397590/bug.zip)\r\n\n\n### Live example\n\nNot yet\n\n### Screenshots\n\nUnusual walls\r\n![企业微信截图_17220407132428](https://github.com/user-attachments/assets/6cfd43e5-5286-4efa-98e7-7ff99c688f7a)\r\n\n\n### Version\n\n0.166.1\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28994/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28994/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28980",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28980/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28980/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28980/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28980",
        "id": 2431841417,
        "node_id": "I_kwDOAAjKyc6Q8vSJ",
        "number": 28980,
        "title": "Better performance support for passing `VideoFrame`'s to a `CanvasTexture` or `VideoTexture`",
        "user": {
          "login": "snosenzo",
          "id": 10187776,
          "node_id": "MDQ6VXNlcjEwMTg3Nzc2",
          "avatar_url": "https://avatars.githubusercontent.com/u/10187776?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/snosenzo",
          "html_url": "https://github.com/snosenzo",
          "followers_url": "https://api.github.com/users/snosenzo/followers",
          "following_url": "https://api.github.com/users/snosenzo/following{/other_user}",
          "gists_url": "https://api.github.com/users/snosenzo/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/snosenzo/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/snosenzo/subscriptions",
          "organizations_url": "https://api.github.com/users/snosenzo/orgs",
          "repos_url": "https://api.github.com/users/snosenzo/repos",
          "events_url": "https://api.github.com/users/snosenzo/events{/privacy}",
          "received_events_url": "https://api.github.com/users/snosenzo/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-26T09:39:25Z",
        "updated_at": "2024-07-26T21:14:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nMore generally I'd like to see support for a texture that takes a `VideoFrame` as input and allows for skipping texture storage. This results in a massive (~5x) performance improvement for textures that use `VideoFrames` using the OpenGL ANGLE graphics backend. \r\n\r\nSee context below for more details on the issue I was encountering.\n\n### Solution\n\nMaybe the easiest way to do this is to allow the `VideoTexture` to accept a `VideoFrame` as input. \n\n### Alternatives\n\nAllow for `CanvasTexture` to bypass texture storage and use `texImage2D` call. Open to more alternatives as well. \n\n### Additional context\n\nWorking on an app that needs to render decoded `VideoFrames` without a `video` element source. Our initial approach was to pass these to a `CanvasTexture` to render like so:\r\n```\r\nconst texture = new THREE.CanvasTexture(\r\n    image,\r\n    THREE.UVMapping,\r\n    THREE.ClampToEdgeWrapping,\r\n    THREE.ClampToEdgeWrapping,\r\n    THREE.NearestFilter,\r\n    THREE.LinearFilter,\r\n    THREE.RGBAFormat,\r\n    THREE.UnsignedByteType,\r\n  );\r\n\r\n  texture.flipY = false;\r\n  texture.generateMipmaps = false;\r\n  texture.colorSpace = THREE.SRGBColorSpace;\r\n  ```\r\nThis worked fine for the most part testing on mac using Metal, but what we noticed was that the performance of this is _markedly_ (~5x) worse using the OpenGL ANGLE graphics backend.\r\n\r\nLooking into it a bit more I found that this [webcodecs example](https://webcodecs-samples.netlify.app/video-decode-display/), which appears to be unaffected by the graphics backend. This example sends the frames to the GPU using `texImage2D`. I found that using the `CanvasTexture` threejs stores the image to texture storage and then runs `texSubImage2D` on it to send it to the GPU, which I thought might be the culprit. I also saw that the `VideoTexture` has some logic that allows it to avoid texture storage and `texSubImage2D`, however it only takes a `video` element as input.\r\n\r\nTo confirm my suspicions I added the following to our texture creation from above.\r\n```\r\n texture.isVideoTexture = true;\r\n texture.update = () => {\r\n    texture.needsUpdate = true;\r\n };\r\n```\r\nThis did  indeed give me the parity I was looking for with the webcodecs example. However it is a hacky solution caused by a lack of better support for `VideoFrame` textures in threejs. ",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28980/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28980/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28968",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28968/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28968/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28968/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28968",
        "id": 2429889555,
        "node_id": "I_kwDOAAjKyc6Q1SwT",
        "number": 28968,
        "title": "WebXR not supported on WebGPURenderer",
        "user": {
          "login": "hybridherbst",
          "id": 2693840,
          "node_id": "MDQ6VXNlcjI2OTM4NDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2693840?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hybridherbst",
          "html_url": "https://github.com/hybridherbst",
          "followers_url": "https://api.github.com/users/hybridherbst/followers",
          "following_url": "https://api.github.com/users/hybridherbst/following{/other_user}",
          "gists_url": "https://api.github.com/users/hybridherbst/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hybridherbst/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hybridherbst/subscriptions",
          "organizations_url": "https://api.github.com/users/hybridherbst/orgs",
          "repos_url": "https://api.github.com/users/hybridherbst/repos",
          "events_url": "https://api.github.com/users/hybridherbst/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hybridherbst/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          },
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-07-25T12:52:09Z",
        "updated_at": "2024-08-05T16:31:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nAs it seems that work on `WebGLRenderer` will go into maintenance mode to make more space for `WebGPURenderer`, it would be great to see an initial implementation of WebXR so we can start testing WebGPU as well. \r\n\r\nWe'd like to test and help, but I'm not sure how WebXR fits into the current architecture of the new system with two backends. I'd already be happy if `WebGPURenderer ({forceWebGL: true})` had WebXR support (so, not actually WebGPU).\r\n\r\n### Reproduction steps\r\n\r\n1. Use WebGPURenderer\r\n2. Try to use XR\r\n3. Note that APIs don't exist anymore (`getSession()`, `getCamera()`, `isPresenting`, ...)\r\n\r\n### Version\r\n\r\nr167\r\n\r\n### Device\r\n\r\nHeadset, Phones\r\n\r\n### OS\r\n\r\nWindows, Android",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28968/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28968/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28959",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28959/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28959/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28959/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28959",
        "id": 2428039352,
        "node_id": "I_kwDOAAjKyc6QuPC4",
        "number": 28959,
        "title": "VRMLLexer: Improve support for `Script`, `PROTO` and sensor nodes.",
        "user": {
          "login": "ANUBIS9000",
          "id": 10805372,
          "node_id": "MDQ6VXNlcjEwODA1Mzcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/10805372?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ANUBIS9000",
          "html_url": "https://github.com/ANUBIS9000",
          "followers_url": "https://api.github.com/users/ANUBIS9000/followers",
          "following_url": "https://api.github.com/users/ANUBIS9000/following{/other_user}",
          "gists_url": "https://api.github.com/users/ANUBIS9000/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ANUBIS9000/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ANUBIS9000/subscriptions",
          "organizations_url": "https://api.github.com/users/ANUBIS9000/orgs",
          "repos_url": "https://api.github.com/users/ANUBIS9000/repos",
          "events_url": "https://api.github.com/users/ANUBIS9000/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ANUBIS9000/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-07-24T16:42:42Z",
        "updated_at": "2024-07-25T02:44:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nI am sure my wrl file is correct and it can be open with other viewer, but when i use vrmlloader , it reports\r\n------------------------------------------------\r\n VRMLLoader.js:71 Error: THREE.VRMLLexer: Lexing errors detected.\r\n    at VRMLLexer.lex (VRMLLoader.js:3272:1)\r\n    at generateVRMLTree (VRMLLoader.js:99:1)\r\n    at VRMLLoader.parse (VRMLLoader.js:3244:1)\r\n    at Object.eval [as onLoad] (VRMLLoader.js:61:1)\r\n    at eval (three.module.js:44206:1)\r\n------------------------------------------------\r\nif i load a compressed wrl file ， it cant be resolved , will become some error encode string, threejs event cant read the version info correctly . if load a wrl file without compress , that will lead to that error above.\r\nwhat should i do to load wrl file correctly, i know wrl file is not very common in nowadays but i really need it , thank you \n\n### Reproduction steps\n\n1.build a vue3 project and install newest three.js \r\n2.make a demo to load a wrl file simply , i used different files to test, each of that files can be open in other software good such as vrmlpad and rapidauthor .\r\n3.the file cant be resolved , it leads to an error of lexing\r\n\n\n### Code\n\n```js\r\nconst loadVRML = () => {\r\n  const loader = new VRMLLoader()\r\n  loader.load(`/life.wrl`, model => {\r\n    model.scale.set(30, 30, 30)\r\n    scene.value.add(model)\r\n  })\r\n}\r\n```\r\n\n\n### Live example\n\n* [jsfiddle-latest-release](https://jsfiddle.net/g3atw6k5/)\r\n* [jsfiddle-dev](https://jsfiddle.net/hjqw94c5/)\r\n\n\n### Screenshots\n\n_No response_\n\n### Version\n\nlatest\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28959/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28959/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28957",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28957/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28957/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28957/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28957",
        "id": 2427814977,
        "node_id": "I_kwDOAAjKyc6QtYRB",
        "number": 28957,
        "title": "Documentation: State of `WebGPURenderer` and Nodes",
        "user": {
          "login": "hybridherbst",
          "id": 2693840,
          "node_id": "MDQ6VXNlcjI2OTM4NDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2693840?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hybridherbst",
          "html_url": "https://github.com/hybridherbst",
          "followers_url": "https://api.github.com/users/hybridherbst/followers",
          "following_url": "https://api.github.com/users/hybridherbst/following{/other_user}",
          "gists_url": "https://api.github.com/users/hybridherbst/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hybridherbst/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hybridherbst/subscriptions",
          "organizations_url": "https://api.github.com/users/hybridherbst/orgs",
          "repos_url": "https://api.github.com/users/hybridherbst/repos",
          "events_url": "https://api.github.com/users/hybridherbst/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hybridherbst/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 911721310,
            "node_id": "MDU6TGFiZWw5MTE3MjEzMTA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Documentation",
            "name": "Documentation",
            "color": "137d89",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-07-24T14:58:19Z",
        "updated_at": "2024-09-10T11:00:23Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nI'm trying to understand what the current state is, where examples went, and how things in regards to nodes are done now. This is a documentation issue :) \r\n\r\nFrom what I can see:\r\n\r\n- All WebGL examples regarding node materials have been removed in https://github.com/mrdoob/three.js/pull/28167.\r\n\r\n- New features and bug fixes to the nodes system are _only_ added to the WebGPURenderer. No nodes-related features are officially available for WebGLRenderer anymore.\r\n- ~~WebGPURenderer is currently in `examples`. It's not part of core three.js.~~ WebGPURenderer is now in a separate bundle.\r\n- There is no documentation (that I could find) on how to switch from `WebGLRenderer` to `WebGPURenderer`. I was wondering if switching with `{ forceWebGL: true }` is a safe step, for example.\r\n\r\n### Documentation Questions\r\n\r\n1. Is `WebGPURenderer` mature enough to start switching to it?\r\n\r\n3. Is `WebGPURenderer` with `{ forceWebGL: true }` currently 100% matching `WebGLRenderer`?\r\n4. Are there specific things to keep in mind when using `GLTFLoader` with `WebGPURenderer`? Is there anything extra that a developer needs to do? Does it use nodes when doing that, or the previous materials?\r\n5. Will WebGPURenderer move to core at some point, or will it stay an example?\r\n6. Is there documentation for switching? For example, it's not clear to me if all classes `WebGL*` need to be swapped, or if it's fine to use `WebGLRenderTarget` with `WebGPURenderer`.\r\n\r\n### Solution\r\n\r\nDocumentation for how to start using `WebGPURenderer`.\r\n\r\n### Alternatives\r\n\r\nWaiting until a further point and not starting to use/test `WebGPURenderer`.\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28957/reactions",
          "total_count": 3,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 2,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28957/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28954",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28954/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28954/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28954/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28954",
        "id": 2427019538,
        "node_id": "I_kwDOAAjKyc6QqWES",
        "number": 28954,
        "title": "Reflector: Add support for `OrthographicCamera`.",
        "user": {
          "login": "menghuaa",
          "id": 48876313,
          "node_id": "MDQ6VXNlcjQ4ODc2MzEz",
          "avatar_url": "https://avatars.githubusercontent.com/u/48876313?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/menghuaa",
          "html_url": "https://github.com/menghuaa",
          "followers_url": "https://api.github.com/users/menghuaa/followers",
          "following_url": "https://api.github.com/users/menghuaa/following{/other_user}",
          "gists_url": "https://api.github.com/users/menghuaa/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/menghuaa/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/menghuaa/subscriptions",
          "organizations_url": "https://api.github.com/users/menghuaa/orgs",
          "repos_url": "https://api.github.com/users/menghuaa/repos",
          "events_url": "https://api.github.com/users/menghuaa/events{/privacy}",
          "received_events_url": "https://api.github.com/users/menghuaa/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2024-07-24T09:15:10Z",
        "updated_at": "2024-09-14T08:15:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nWhen I changed the PerspectiveCamera to an OrthographicCamera, the reflector disappeared\r\n\r\n### Reproduction steps\r\n\r\n1.use threejs r153\r\n2.open docs/examples/webgl_mirror.html\r\n2.replace line68 <camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );> with <camera=new THREE.OrthographicCamera(-window.innerWidth/2, window.innerWidth/2, window.innerHeight/2, -window.innerHeight/2, 0.1, 1000);>\r\n\r\n\r\n\r\n### Code\r\n\r\n```js\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\t<head>\r\n\t\t<title>three.js webgl - mirror</title>\r\n\t\t<meta charset=\"utf-8\">\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\r\n\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"main.css\">\r\n\t\t<style>\r\n\t\t\tbody {\r\n\t\t\t\tcolor: #444;\r\n\t\t\t}\r\n\t\t\ta {\r\n\t\t\t\tcolor: #08f;\r\n\t\t\t}\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\r\n\t\t<div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - mirror\r\n\t\t</div>\r\n\r\n\t\t<!-- Import maps polyfill -->\r\n\t\t<!-- Remove this when import maps will be widely supported -->\r\n\t\t<script async src=\"https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js\"></script>\r\n\r\n\t\t<script type=\"importmap\">\r\n\t\t\t{\r\n\t\t\t\t\"imports\": {\r\n\t\t\t\t\t\"three\": \"../build/three.module.js\",\r\n\t\t\t\t\t\"three/addons/\": \"./jsm/\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t</script>\r\n\r\n\t\t<script type=\"module\">\r\n\r\n\t\t\timport * as THREE from 'three';\r\n\r\n\t\t\timport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\r\n\t\t\timport { Reflector } from 'three/addons/objects/Reflector.js';\r\n\r\n\t\t\tlet camera, scene, renderer;\r\n\r\n\t\t\tlet cameraControls;\r\n\r\n\t\t\tlet sphereGroup, smallSphere;\r\n\r\n\t\t\tlet groundMirror, verticalMirror;\r\n\r\n\t\t\tinit();\r\n\t\t\tanimate();\r\n\r\n\t\t\tfunction init() {\r\n\r\n\t\t\t\tconst container = document.getElementById( 'container' );\r\n\r\n\t\t\t\t// renderer\r\n\t\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\r\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\t\t\tcontainer.appendChild( renderer.domElement );\r\n\r\n\t\t\t\t// scene\r\n\t\t\t\tscene = new THREE.Scene();\r\n\r\n\t\t\t\t// camera\r\n\t\t\t\t//camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\r\n\t\t\t\tcamera=new THREE.OrthographicCamera(-window.innerWidth/2, window.innerWidth/2, window.innerHeight/2, -window.innerHeight/2, 0.1, 1000);\r\n\t\t\t\tcamera.position.set( 0, 75, 160 );\r\n\r\n\t\t\t\tcameraControls = new OrbitControls( camera, renderer.domElement );\r\n\t\t\t\tcameraControls.target.set( 0, 40, 0 );\r\n\t\t\t\tcameraControls.maxDistance = 400;\r\n\t\t\t\tcameraControls.minDistance = 10;\r\n\t\t\t\tcameraControls.update();\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tconst planeGeo = new THREE.PlaneGeometry( 100.1, 100.1 );\r\n\r\n\t\t\t\t// reflectors/mirrors\r\n\r\n\t\t\t\tlet geometry, material;\r\n\r\n\t\t\t\tgeometry = new THREE.CircleGeometry( 40, 64 );\r\n\t\t\t\tgroundMirror = new Reflector( geometry, {\r\n\t\t\t\t\tclipBias: 0.003,\r\n\t\t\t\t\ttextureWidth: window.innerWidth * window.devicePixelRatio,\r\n\t\t\t\t\ttextureHeight: window.innerHeight * window.devicePixelRatio,\r\n\t\t\t\t\tcolor: 0xb5b5b5\r\n\t\t\t\t} );\r\n\t\t\t\tgroundMirror.position.y = 0.5;\r\n\t\t\t\tgroundMirror.rotateX( - Math.PI / 2 );\r\n\t\t\t\tscene.add( groundMirror );\r\n\r\n\t\t\t\tgeometry = new THREE.PlaneGeometry( 100, 100 );\r\n\t\t\t\tverticalMirror = new Reflector( geometry, {\r\n\t\t\t\t\tclipBias: 0.003,\r\n\t\t\t\t\ttextureWidth: window.innerWidth * window.devicePixelRatio,\r\n\t\t\t\t\ttextureHeight: window.innerHeight * window.devicePixelRatio,\r\n\t\t\t\t\tcolor: 0xc1cbcb\r\n\t\t\t\t} );\r\n\t\t\t\tverticalMirror.position.y = 50;\r\n\t\t\t\tverticalMirror.position.z = - 50;\r\n\t\t\t\tscene.add( verticalMirror );\r\n\r\n\r\n\t\t\t\tsphereGroup = new THREE.Object3D();\r\n\t\t\t\tscene.add( sphereGroup );\r\n\r\n\t\t\t\tgeometry = new THREE.CylinderGeometry( 0.1, 15 * Math.cos( Math.PI / 180 * 30 ), 0.1, 24, 1 );\r\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial( { color: 0xffffff, emissive: 0x8d8d8d } );\r\n\t\t\t\tconst sphereCap = new THREE.Mesh( geometry, material );\r\n\t\t\t\tsphereCap.position.y = - 15 * Math.sin( Math.PI / 180 * 30 ) - 0.05;\r\n\t\t\t\tsphereCap.rotateX( - Math.PI );\r\n\r\n\t\t\t\tgeometry = new THREE.SphereGeometry( 15, 24, 24, Math.PI / 2, Math.PI * 2, 0, Math.PI / 180 * 120 );\r\n\t\t\t\tconst halfSphere = new THREE.Mesh( geometry, material );\r\n\t\t\t\thalfSphere.add( sphereCap );\r\n\t\t\t\thalfSphere.rotateX( - Math.PI / 180 * 135 );\r\n\t\t\t\thalfSphere.rotateZ( - Math.PI / 180 * 20 );\r\n\t\t\t\thalfSphere.position.y = 7.5 + 15 * Math.sin( Math.PI / 180 * 30 );\r\n\r\n\t\t\t\tsphereGroup.add( halfSphere );\r\n\r\n\t\t\t\tgeometry = new THREE.IcosahedronGeometry( 5, 0 );\r\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial( { color: 0xffffff, emissive: 0x7b7b7b, flatShading: true } );\r\n\t\t\t\tsmallSphere = new THREE.Mesh( geometry, material );\r\n\t\t\t\tscene.add( smallSphere );\r\n\r\n\t\t\t\t// walls\r\n\t\t\t\tconst planeTop = new THREE.Mesh( planeGeo, new THREE.MeshPhongMaterial( { color: 0xffffff } ) );\r\n\t\t\t\tplaneTop.position.y = 100;\r\n\t\t\t\tplaneTop.rotateX( Math.PI / 2 );\r\n\t\t\t\tscene.add( planeTop );\r\n\r\n\t\t\t\tconst planeBottom = new THREE.Mesh( planeGeo, new THREE.MeshPhongMaterial( { color: 0xffffff } ) );\r\n\t\t\t\tplaneBottom.rotateX( - Math.PI / 2 );\r\n\t\t\t\tscene.add( planeBottom );\r\n\r\n\t\t\t\tconst planeFront = new THREE.Mesh( planeGeo, new THREE.MeshPhongMaterial( { color: 0x7f7fff } ) );\r\n\t\t\t\tplaneFront.position.z = 50;\r\n\t\t\t\tplaneFront.position.y = 50;\r\n\t\t\t\tplaneFront.rotateY( Math.PI );\r\n\t\t\t\tscene.add( planeFront );\r\n\r\n\t\t\t\tconst planeRight = new THREE.Mesh( planeGeo, new THREE.MeshPhongMaterial( { color: 0x00ff00 } ) );\r\n\t\t\t\tplaneRight.position.x = 50;\r\n\t\t\t\tplaneRight.position.y = 50;\r\n\t\t\t\tplaneRight.rotateY( - Math.PI / 2 );\r\n\t\t\t\tscene.add( planeRight );\r\n\r\n\t\t\t\tconst planeLeft = new THREE.Mesh( planeGeo, new THREE.MeshPhongMaterial( { color: 0xff0000 } ) );\r\n\t\t\t\tplaneLeft.position.x = - 50;\r\n\t\t\t\tplaneLeft.position.y = 50;\r\n\t\t\t\tplaneLeft.rotateY( Math.PI / 2 );\r\n\t\t\t\tscene.add( planeLeft );\r\n\r\n\t\t\t\t// lights\r\n\t\t\t\tconst mainLight = new THREE.PointLight( 0xe7e7e7, 1.5, 250 );\r\n\t\t\t\tmainLight.position.y = 60;\r\n\t\t\t\tscene.add( mainLight );\r\n\r\n\t\t\t\tconst greenLight = new THREE.PointLight( 0x00ff00, 0.25, 1000 );\r\n\t\t\t\tgreenLight.position.set( 550, 50, 0 );\r\n\t\t\t\tscene.add( greenLight );\r\n\r\n\t\t\t\tconst redLight = new THREE.PointLight( 0xff0000, 0.25, 1000 );\r\n\t\t\t\tredLight.position.set( - 550, 50, 0 );\r\n\t\t\t\tscene.add( redLight );\r\n\r\n\t\t\t\tconst blueLight = new THREE.PointLight( 0xbbbbfe, 0.25, 1000 );\r\n\t\t\t\tblueLight.position.set( 0, 50, 550 );\r\n\t\t\t\tscene.add( blueLight );\r\n\r\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onWindowResize() {\r\n\r\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t\t\tgroundMirror.getRenderTarget().setSize(\r\n\t\t\t\t\twindow.innerWidth * window.devicePixelRatio,\r\n\t\t\t\t\twindow.innerHeight * window.devicePixelRatio\r\n\t\t\t\t);\r\n\t\t\t\tverticalMirror.getRenderTarget().setSize(\r\n\t\t\t\t\twindow.innerWidth * window.devicePixelRatio,\r\n\t\t\t\t\twindow.innerHeight * window.devicePixelRatio\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction animate() {\r\n\r\n\t\t\t\trequestAnimationFrame( animate );\r\n\r\n\t\t\t\tconst timer = Date.now() * 0.01;\r\n\r\n\t\t\t\tsphereGroup.rotation.y -= 0.002;\r\n\r\n\t\t\t\tsmallSphere.position.set(\r\n\t\t\t\t\tMath.cos( timer * 0.1 ) * 30,\r\n\t\t\t\t\tMath.abs( Math.cos( timer * 0.2 ) ) * 20 + 5,\r\n\t\t\t\t\tMath.sin( timer * 0.1 ) * 30\r\n\t\t\t\t);\r\n\t\t\t\tsmallSphere.rotation.y = ( Math.PI / 2 ) - timer * 0.1;\r\n\t\t\t\tsmallSphere.rotation.z = timer * 0.8;\r\n\r\n\t\t\t\trenderer.render( scene, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t</script>\r\n\t</body>\r\n</html>\r\n\r\n```\r\n\r\n\r\n### Live example\r\n\r\n![image](https://github.com/user-attachments/assets/4e3893b8-81d7-4a69-96e0-6a65de7079b4)\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n153\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nGoogle Chrome\r\n\r\n### OS\r\n\r\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28954/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28954/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28937",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28937/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28937/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28937/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28937",
        "id": 2422630759,
        "node_id": "I_kwDOAAjKyc6QZmln",
        "number": 28937,
        "title": "CanvasTexture problem with VideoFrames",
        "user": {
          "login": "stevexbritton",
          "id": 39438058,
          "node_id": "MDQ6VXNlcjM5NDM4MDU4",
          "avatar_url": "https://avatars.githubusercontent.com/u/39438058?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stevexbritton",
          "html_url": "https://github.com/stevexbritton",
          "followers_url": "https://api.github.com/users/stevexbritton/followers",
          "following_url": "https://api.github.com/users/stevexbritton/following{/other_user}",
          "gists_url": "https://api.github.com/users/stevexbritton/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/stevexbritton/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/stevexbritton/subscriptions",
          "organizations_url": "https://api.github.com/users/stevexbritton/orgs",
          "repos_url": "https://api.github.com/users/stevexbritton/repos",
          "events_url": "https://api.github.com/users/stevexbritton/events{/privacy}",
          "received_events_url": "https://api.github.com/users/stevexbritton/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2024-07-22T11:26:12Z",
        "updated_at": "2024-07-26T21:14:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nWhen using a CanvasTexture for a Scene background it works when the CanvasTexture is created from an ImageBitmap, but not when it's created from a VideoFrame. The error \"GL_INVALID_VALUE: Offset overflows texture dimensions.\" is reported when \"renderer.render()\" is called.\n\n### Reproduction steps\n\n1. This needs to be run using Chrome\r\n2. Run the accompanying codepen with the \"...imageCapture.grabFrame...\" code fragment NOT commented out and the camera images from the \"video\" element ARE rendered to the canvas and the \"dst-video\" element.\r\n3. Comment out the \"...imageCapture.grabFrame...\" code fragment and comment in the \"const newFrame = transform(frame, frame.displayWidth, frame.displayHeight)\" code fragment and the camera images from the \"video\" element ARE NOT rendered to the canvas nor the \"dst-video\" element.\r\n4. \"GL_INVALID_VALUE: Offset overflows texture dimensions.\" errors occur, but unfortunately these are not displayed in Codepen's condole\r\n\n\n### Code\n\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Vyking Video</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\">\r\n\r\n    <script type=\"importmap\">\r\n        {\r\n          \"imports\": {\r\n            \"three\": \"https://cdn.jsdelivr.net/npm/three@0.166.1/build/three.module.js\"\r\n          }\r\n        }\r\n    </script>\r\n</head>\r\n\r\n<body>\r\n    <video id=\"video\" controls></video>\r\n    <canvas id=\"canvas\"></canvas>\r\n    <video id=\"dst-video\" controls></video>\r\n\r\n    <script type=\"module\">\r\n        import * as THREE from 'three'\r\n\r\n        document.addEventListener('DOMContentLoaded', async () => {\r\n            const video = document.querySelector('#video')\r\n            const canvas = document.querySelector('#canvas')\r\n            const dstVideo = document.querySelector('#dst-video')\r\n\r\n            if (video instanceof HTMLVideoElement && canvas instanceof HTMLCanvasElement) {\r\n                const scene = new THREE.Scene()\r\n                const cameraRig = new THREE.Group()\r\n                const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 10)\r\n                cameraRig.name = 'cameraRig'\r\n                cameraRig.rotateX(-Math.PI / 2) // Point camera down at your feet\r\n                cameraRig.add(camera)\r\n                scene.add(cameraRig)\r\n                const renderer = new THREE.WebGLRenderer({\r\n                    canvas: canvas,\r\n                    alpha: false,\r\n                    powerPreference: 'default',\r\n                    preserveDrawingBuffer: true\r\n                })\r\n                renderer.setPixelRatio(window.devicePixelRatio)\r\n                renderer.autoClear = false\r\n                renderer.debug = {\r\n                    checkShaderErrors: false,\r\n                    onShaderError: null\r\n                }\r\n                renderer.outputColorSpace = THREE.SRGBColorSpace\r\n\r\n                const srcMediaStream = await navigator.mediaDevices.getUserMedia({\r\n                    audio: false,\r\n                    video: {\r\n                        width: { ideal: 960 },\r\n                        height: { ideal: 540 },\r\n                        frameRate: { max: 30 }\r\n                    },\r\n                })\r\n                const srcVideoTrack = srcMediaStream.getVideoTracks()[0]\r\n\r\n                const transform = (frame, width, height) => {\r\n                    // console.log(`transform frame: %o srcVideoTrack.enabled: ${srcVideoTrack.enabled}, ${width} ${height}`)\r\n\r\n                    srcVideoTrack.enabled = sinkVideoTrack.enabled\r\n                    if (!sinkVideoTrack.enabled) {\r\n                        return new VideoFrame(frame)\r\n                    }\r\n\r\n                    if (!(scene.background instanceof THREE.CanvasTexture)) {\r\n                        scene.background = new THREE.CanvasTexture(frame)\r\n                        scene.background.colorSpace = THREE.SRGBColorSpace\r\n                        scene.background.generateMipmaps = false\r\n                        scene.background.minFilter = THREE.LinearFilter\r\n                        scene.background.matrixAutoUpdate = false\r\n                    } else {\r\n                        if (scene.background.image.width != width || scene.background.image.height != height) {\r\n                            scene.background.image.close()\r\n                            scene.background.dispose()\r\n                            scene.background = new THREE.CanvasTexture(frame)\r\n                            scene.background.colorSpace = THREE.SRGBColorSpace\r\n                            scene.background.generateMipmaps = false\r\n                            scene.background.minFilter = THREE.LinearFilter\r\n\r\n                            scene.background.matrixAutoUpdate = false\r\n                        } else {\r\n                            scene.background.image.close()\r\n                            scene.background.image = frame\r\n                            scene.background.needsUpdate = true\r\n                        }\r\n                    }\r\n                    renderer.setSize(width, height)\r\n                    renderer.render(scene, camera)\r\n\r\n                    return new VideoFrame(canvas, {\r\n                        timestamp: 0\r\n                    })\r\n                }\r\n                const trackProcessor = new MediaStreamTrackProcessor({ track: srcVideoTrack })\r\n                const trackGenerator = new MediaStreamTrackGenerator({ kind: 'video' })\r\n                const imageCapture = new ImageCapture(srcVideoTrack)\r\n                const transformer = new TransformStream({\r\n                    async transform(frame, controller) {\r\n                        /*vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/\r\n\r\n                        const newFrame = await imageCapture.grabFrame().then(image => {\r\n                            frame.close()\r\n\r\n                            return transform(image, image.width, image.height)\r\n                        })\r\n\r\n                        // const newFrame = transform(frame, frame.displayWidth, frame.displayHeight)\r\n\r\n                        /*^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/\r\n\r\n                        controller.enqueue(newFrame)\r\n                    },\r\n                })\r\n\r\n                const sinkMediaStream = new MediaStream([trackGenerator])\r\n                const sinkVideoTrack = sinkMediaStream.getVideoTracks()[0]\r\n\r\n                trackProcessor\r\n                    .readable\r\n                    .pipeThrough(transformer)\r\n                    .pipeTo(trackGenerator.writable)\r\n                    .catch(cause => {\r\n                        console.error(`VykingMediaDevices.getUserMedia error: %o`, cause)\r\n                    })\r\n\r\n                dstVideo.srcObject = sinkMediaStream\r\n                video.srcObject = srcMediaStream\r\n\r\n                video.play()\r\n                dstVideo.play()\r\n            }\r\n        })\r\n    </script>\r\n</body>\r\n\r\n</html>\r\n```\n\n### Live example\n\n* [jsfiddle-latest-release](https://codepen.io/stevexbritton/pen/QWXEyNq?editors=1111)\n\n### Screenshots\n\n_No response_\n\n### Version\n\n1.66.1\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28937/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28937/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28884",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28884/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28884/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28884/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28884",
        "id": 2410734388,
        "node_id": "I_kwDOAAjKyc6PsOM0",
        "number": 28884,
        "title": "Nodes: Line2NodeMaterial dash mode broken",
        "user": {
          "login": "aardgoose",
          "id": 17364910,
          "node_id": "MDQ6VXNlcjE3MzY0OTEw",
          "avatar_url": "https://avatars.githubusercontent.com/u/17364910?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/aardgoose",
          "html_url": "https://github.com/aardgoose",
          "followers_url": "https://api.github.com/users/aardgoose/followers",
          "following_url": "https://api.github.com/users/aardgoose/following{/other_user}",
          "gists_url": "https://api.github.com/users/aardgoose/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/aardgoose/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/aardgoose/subscriptions",
          "organizations_url": "https://api.github.com/users/aardgoose/orgs",
          "repos_url": "https://api.github.com/users/aardgoose/repos",
          "events_url": "https://api.github.com/users/aardgoose/events{/privacy}",
          "received_events_url": "https://api.github.com/users/aardgoose/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 620412970,
            "node_id": "MDU6TGFiZWw2MjA0MTI5NzA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Regression",
            "name": "Regression",
            "color": "000000",
            "default": false,
            "description": null
          },
          {
            "id": 5252109168,
            "node_id": "LA_kwDOAAjKyc8AAAABOQzTcA",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/TSL",
            "name": "TSL",
            "color": "465B1F",
            "default": false,
            "description": "Three.js Shading Language"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-16T10:00:40Z",
        "updated_at": "2024-07-22T10:04:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\n\r\nThe PR #28585 appears to have broken Line2NodeMaterial. Reverting the PR fixes the error.\r\n\r\nIn dashed mode, the fragment shader fails to compile with the error in \r\n\r\nhttps://github.com/mrdoob/three.js/blob/0679c557066907c19659697deaa3d2d0b0c7e724/src/nodes/materials/Line2NodeMaterial.js#L269\r\n\r\nIf the multiplications within the cond() expression are removed, the shader compiles as expected.\r\n\n\n### Reproduction steps\n\n1. run the example webgpu_lines_fat\r\n2. select 'dashed' to enable dashed line mode.\r\n\r\n\n\n### Code\n\nn/a\r\n\n\n### Live example\n\n\r\n[Line2NodeMaterials example](https://threejs.org/examples/?q=fat#webgpu_lines_fat)\n\n### Screenshots\n\n_No response_\n\n### Version\n\n166\n\n### Device\n\n_No response_\n\n### Browser\n\n_No response_\n\n### OS\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28884/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28884/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28877",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28877/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28877/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28877/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28877",
        "id": 2409139187,
        "node_id": "I_kwDOAAjKyc6PmIvz",
        "number": 28877,
        "title": "WebXR Depth Sensing: re-architect how occlusion is done",
        "user": {
          "login": "cabanier",
          "id": 1513308,
          "node_id": "MDQ6VXNlcjE1MTMzMDg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1513308?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cabanier",
          "html_url": "https://github.com/cabanier",
          "followers_url": "https://api.github.com/users/cabanier/followers",
          "following_url": "https://api.github.com/users/cabanier/following{/other_user}",
          "gists_url": "https://api.github.com/users/cabanier/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cabanier/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cabanier/subscriptions",
          "organizations_url": "https://api.github.com/users/cabanier/orgs",
          "repos_url": "https://api.github.com/users/cabanier/repos",
          "events_url": "https://api.github.com/users/cabanier/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cabanier/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 7123836875,
            "node_id": "LA_kwDOAAjKyc8AAAABqJ0fyw",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebXR",
            "name": "WebXR",
            "color": "5319E7",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-07-15T16:22:22Z",
        "updated_at": "2024-07-16T17:05:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nSupport for WebXR Depth Sensing was added to three after it was implemented by the Quest browser.\r\nHowever, the implementation (and spec) didn't account for offsets between the fov of the cameras and the display. It also didn't do feathering of the depth buffer and the current approach of wholesale copying the depth buffer results in flickering of the scene.\n\n### Solution\n\nThe correct way to do depth sensing is to sample from the depth buffer (while also accounting for the fov differences) in the material.\r\nFor unity, the Quest browser created a bunch of custom material changes. I know that this is a hard ask for three but I was wondering if there was a way to get the same behavior without having to change the shader logic in three. \n\n### Alternatives\n\nWe'd be happy to learn if there are other approaches that might not be as invasive.\r\nOur team calls their approach \"shadow map\". Could we repurpose three's shadowmap logic?\n\n### Additional context\n\nOne of our engineers that works on depth sensing is going to provide more information.",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28877/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28877/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28868",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28868/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28868/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28868/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28868",
        "id": 2407506406,
        "node_id": "I_kwDOAAjKyc6Pf6Hm",
        "number": 28868,
        "title": "VideoTexture: Slow performance on Quest Browser in non-XR mode.",
        "user": {
          "login": "cabanier",
          "id": 1513308,
          "node_id": "MDQ6VXNlcjE1MTMzMDg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1513308?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cabanier",
          "html_url": "https://github.com/cabanier",
          "followers_url": "https://api.github.com/users/cabanier/followers",
          "following_url": "https://api.github.com/users/cabanier/following{/other_user}",
          "gists_url": "https://api.github.com/users/cabanier/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cabanier/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cabanier/subscriptions",
          "organizations_url": "https://api.github.com/users/cabanier/orgs",
          "repos_url": "https://api.github.com/users/cabanier/repos",
          "events_url": "https://api.github.com/users/cabanier/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cabanier/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 609335156,
            "node_id": "MDU6TGFiZWw2MDkzMzUxNTY=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Browser%20Issue",
            "name": "Browser Issue",
            "color": "d93f0b",
            "default": false,
            "description": null
          },
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2024-07-14T16:32:46Z",
        "updated_at": "2024-07-18T16:38:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe WebGPURenderer is a lot slower on Quest. People are reporting that their experiences are running poorly.\r\n\r\nIn the console I see: \r\n```\r\nWebGPU canvas configured with a different format than is preferred by this device (\"rgba8unorm\"). This requires an extra copy, which may impact performance.\r\nwebgpu_video_panorama.html:1 entries[2] is not an ExternalTexture when the layout contains an ExternalTexture entry.\r\n - While validating [BindGroupDescriptor \"bindGroup_object\"] against [BindGroupLayout (unlabeled)]\r\n - While calling [Device].CreateBindGroup([BindGroupDescriptor \"bindGroup_object\"]).\r\n\r\nwebgpu_video_panorama.html:1 entries[2] is not an ExternalTexture when the layout contains an ExternalTexture entry.\r\n - While validating [BindGroupDescriptor \"bindGroup_object\"] against [BindGroupLayout (unlabeled)]\r\n - While calling [Device].CreateBindGroup([BindGroupDescriptor \"bindGroup_object\"]).\r\n\r\nwebgpu_video_panorama.html:1 [Invalid BindGroup \"bindGroup_object\"] is invalid.\r\n - While encoding [RenderPassEncoder (unlabeled)].SetBindGroup(0, [BindGroup], 0, ...).\r\n\r\nwebgpu_video_panorama.html:1 [Invalid CommandBuffer from CommandEncoder \"renderContext_0\"] is invalid.\r\n - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder \"renderContext_0\"]])\r\n```\r\n\r\n### Reproduction steps\r\n\r\n1. open browser on Quest 2 or higher\r\n2. browser to https://threejs.org/examples/?q=pan#webgpu_video_panorama\r\n3. observe that the movie plays at 3-5fps\r\n\r\n### Version\r\n\r\ndev\r\n\r\n### Device\r\n\r\nQuest 2 and higher\r\n\r\n### Browser\r\n\r\nQuest Browser\r\n\r\n### OS\r\n\r\nQuest v67",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28868/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28868/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28856",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28856/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28856/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28856/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28856",
        "id": 2405134259,
        "node_id": "I_kwDOAAjKyc6PW2-z",
        "number": 28856,
        "title": " Consider providing an interface with a custom calculated mouse relative information in the transformControls",
        "user": {
          "login": "MrYang614",
          "id": 107246452,
          "node_id": "U_kgDOBmRzdA",
          "avatar_url": "https://avatars.githubusercontent.com/u/107246452?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MrYang614",
          "html_url": "https://github.com/MrYang614",
          "followers_url": "https://api.github.com/users/MrYang614/followers",
          "following_url": "https://api.github.com/users/MrYang614/following{/other_user}",
          "gists_url": "https://api.github.com/users/MrYang614/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MrYang614/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MrYang614/subscriptions",
          "organizations_url": "https://api.github.com/users/MrYang614/orgs",
          "repos_url": "https://api.github.com/users/MrYang614/repos",
          "events_url": "https://api.github.com/users/MrYang614/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MrYang614/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-07-12T09:21:33Z",
        "updated_at": "2024-07-15T01:53:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nWhen I am cropping the render viewport, the transformController cannot correctly raycast .\r\nThe fact is that the method of raycaster detection does not take this situation into account\n\n### Solution\n\nIn my code I did the following to fit to the cut of the view，but in transformControls ，will consider providing a suitable interface \r\n to resolve this ？\r\n```Raycaster\r\n    /**\r\n     * @param {THREE.Vector4} scissor \r\n     */\r\n    setScissor(scissor) {\r\n        this.scissor = scissor\r\n    }\r\n```\r\n```\r\n        const { left, top, width, height } = this.element.getBoundingClientRect()\r\n\r\n        const scissor = this.scissor\r\n\r\n        if (scissor) {\r\n            mouse.x = ((event.clientX - left - scissor.x) / (width - scissor.x)) * 2 - 1\r\n            mouse.y = -((event.clientY - top - (height - scissor.height - scissor.y)) / (scissor.height)) * 2 + 1\r\n        } else {\r\n            mouse.x = ((event.clientX - left) / width) * 2 - 1\r\n            mouse.y = -((event.clientY - top) / height) * 2 + 1\r\n        }\r\n\r\n```\r\n\r\n\n\n### Alternatives\n\n\r\nI think should provide a custom method of calculating the mouse relative information that replaces the default method `getPointer` when it is set up\r\n```\r\n// mouse / touch event handlers\r\n\r\nfunction getPointer( event ) {\r\n\r\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\r\n\r\n\t\treturn {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tbutton: event.button\r\n\t\t};\r\n\r\n\t} else {\r\n\r\n\t\tconst rect = this.domElement.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\r\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\r\n\t\t\tbutton: event.button\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n```\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28856/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28856/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28838",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28838/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28838/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28838/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28838",
        "id": 2398141677,
        "node_id": "I_kwDOAAjKyc6O8Lzt",
        "number": 28838,
        "title": "WebGPURenderer: global clipping planes applied to color space and tone mapping pass.",
        "user": {
          "login": "aardgoose",
          "id": 17364910,
          "node_id": "MDQ6VXNlcjE3MzY0OTEw",
          "avatar_url": "https://avatars.githubusercontent.com/u/17364910?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/aardgoose",
          "html_url": "https://github.com/aardgoose",
          "followers_url": "https://api.github.com/users/aardgoose/followers",
          "following_url": "https://api.github.com/users/aardgoose/following{/other_user}",
          "gists_url": "https://api.github.com/users/aardgoose/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/aardgoose/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/aardgoose/subscriptions",
          "organizations_url": "https://api.github.com/users/aardgoose/orgs",
          "repos_url": "https://api.github.com/users/aardgoose/repos",
          "events_url": "https://api.github.com/users/aardgoose/events{/privacy}",
          "received_events_url": "https://api.github.com/users/aardgoose/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-07-09T12:55:16Z",
        "updated_at": "2024-07-09T21:18:50Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nNow tone mapping and color space conversion are applied as a separate pass, the global clipping planes are applied to the rendered Quad. \r\n\r\nI don't see a simple solution to this, and the problem will also apply to other post processing passes etc.\r\n\r\nQ: Is attaching global clipping plains to the renderer the correct API. Should they be properties of the Scene, or be replaced with something like clipping groups.\r\n\r\n@sunag  @mrdoob @Mugen87 @RenaudRohlinger \n\n### Reproduction steps\n\n1. View the webgpu_clipping example.\r\n2. Enable global clipping\r\n\r\nThe canvas is vertically clipped with no connection to scene rotation.\n\n### Code\n\nsee example\r\n\n\n### Live example\n\n* [examples](https://threejs.org/examples/?q=clip#webgpu_clipping)\r\n\n\n### Screenshots\n\n_No response_\n\n### Version\n\n166\n\n### Device\n\n_No response_\n\n### Browser\n\n_No response_\n\n### OS\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28838/reactions",
          "total_count": 2,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28838/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28794",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28794/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28794/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28794/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28794",
        "id": 2388397641,
        "node_id": "I_kwDOAAjKyc6OXA5J",
        "number": 28794,
        "title": "TSL: `If` statement produces WGSL error.",
        "user": {
          "login": "Mugen87",
          "id": 12612165,
          "node_id": "MDQ6VXNlcjEyNjEyMTY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/12612165?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Mugen87",
          "html_url": "https://github.com/Mugen87",
          "followers_url": "https://api.github.com/users/Mugen87/followers",
          "following_url": "https://api.github.com/users/Mugen87/following{/other_user}",
          "gists_url": "https://api.github.com/users/Mugen87/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Mugen87/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Mugen87/subscriptions",
          "organizations_url": "https://api.github.com/users/Mugen87/orgs",
          "repos_url": "https://api.github.com/users/Mugen87/repos",
          "events_url": "https://api.github.com/users/Mugen87/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Mugen87/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5252109168,
            "node_id": "LA_kwDOAAjKyc8AAAABOQzTcA",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/TSL",
            "name": "TSL",
            "color": "465B1F",
            "default": false,
            "description": "Three.js Shading Language"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-07-03T11:33:40Z",
        "updated_at": "2024-07-05T09:33:18Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\n\nI'm currently trying to port the FXAA shader to TSL. The code uses more than one `return` statement to return a color value computed in its `FxaaPixelShader()` function.\r\n\r\nUsing an `If()` statement in TSL to determine if a return is required produces a WGSL error though.\r\n\r\n> Error while parsing WGSL: :40:3 error: return statement type must match its function return type, returned 'vec4<f32>', expected 'OutputStruct'\r\n    return vec4<f32>( 1.0, 0.0, 0.0, 1.0 );\r\n    ^^^^^^\r\n\r\nI have reproduce the issue with a live example by writing a simple effect that output just two colors depending on how an if statement evaluates.\r\n\r\n\n\n### Reproduction steps\n\n1. Go to https://jsfiddle.net/pq2dtag3/\r\n2. Check browser console.\r\n\n\n### Code\n\n```js\r\nclass CustomEffectNode extends TempNode {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst effect = tslFn( () => {\r\n\r\n\t\t\tIf( uv().x.lessThan( 0.5 ), () => {\r\n\r\n     \t\t\t\treturn vec4( 1, 0, 0, 1 );\r\n\r\n    \t\t\t} );\r\n\r\n\t\t\treturn vec4( 0, 0, 1, 1 );\r\n\r\n\r\n\t\t} );\r\n\r\n\t\tconst outputNode = effect();\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n```\r\n\n\n### Live example\n\nhttps://jsfiddle.net/pq2dtag3/\n\n### Screenshots\n\n_No response_\n\n### Version\n\nr167dev\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28794/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28794/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28776",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28776/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28776/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28776/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28776",
        "id": 2383173340,
        "node_id": "I_kwDOAAjKyc6ODFbc",
        "number": 28776,
        "title": "Significant Performance Drop and High CPU Usage with BatchedMesh",
        "user": {
          "login": "lanvada",
          "id": 32893646,
          "node_id": "MDQ6VXNlcjMyODkzNjQ2",
          "avatar_url": "https://avatars.githubusercontent.com/u/32893646?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/lanvada",
          "html_url": "https://github.com/lanvada",
          "followers_url": "https://api.github.com/users/lanvada/followers",
          "following_url": "https://api.github.com/users/lanvada/following{/other_user}",
          "gists_url": "https://api.github.com/users/lanvada/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/lanvada/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/lanvada/subscriptions",
          "organizations_url": "https://api.github.com/users/lanvada/orgs",
          "repos_url": "https://api.github.com/users/lanvada/repos",
          "events_url": "https://api.github.com/users/lanvada/events{/privacy}",
          "received_events_url": "https://api.github.com/users/lanvada/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 50,
        "created_at": "2024-07-01T08:19:17Z",
        "updated_at": "2024-08-15T09:44:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nHello,\r\n\r\nI exported a building model from Revit in glTF format and merged meshes with the same materials to manage their visibility in Three.js using the BatchedMesh class. However, I've encountered a significant performance issue when rendering these merged meshes with BatchedMesh compared to using Mesh.\r\n\r\n**Performance Comparison:**\r\n\r\n* **BatchedMesh Rendering:**\r\n  * CPU Usage: ~40%\r\n  * GPU Usage: ~30%\r\n  * Frame Rate: ~20 FPS\r\n* **Mesh Rendering:**\r\n  * CPU Usage: ~15%\r\n  * GPU Usage: ~90%\r\n  * Frame Rate: ~60 FPS\r\n\r\nThis drastic difference in performance is concerning, especially the high CPU load and low frame rate when using BatchedMesh. I've already set `.perObjectFrustumCulled` and `.sortObjects` to `false` in BatchedMesh, which, if set to `true`, leads to an even more severe frame rate drop.\r\n\r\nAdditionally, I'm using `three-csm` and `postprocessing` frameworks alongside Three.js.\r\n\r\n**System Configuration:**\r\n\r\n* CPU: Intel i7-10700\r\n* GPU: NVIDIA RTX 2080 Super\r\n\r\nCould someone help me understand why BatchedMesh increases the CPU overhead so significantly and suggest any possible optimizations or solutions to improve the frame rate?\r\n\r\n\r\n\r\nThank you!\n\n### Reproduction steps\n\nUsing BatchedMesh to render more than 10 million triangles and vertices, there are about 100,000 different geometries.\n\n### Code\n\nCode in the project\r\n[batched-mesh-performance-test](https://github.com/lanvada/batched-mesh-performance-test)\n\n### Live example\n\nCode in the project\r\n[batched-mesh-performance-test](https://github.com/lanvada/batched-mesh-performance-test)\n\n### Screenshots\n\n_No response_\n\n### Version\n\nr165\n\n### Device\n\n_No response_\n\n### Browser\n\n_No response_\n\n### OS\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28776/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28776/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28752",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28752/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28752/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28752/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28752",
        "id": 2377442230,
        "node_id": "I_kwDOAAjKyc6NtOO2",
        "number": 28752,
        "title": "Allow to Use Roughness for SSR in Three.js",
        "user": {
          "login": "Stanislav-Sobolev",
          "id": 90769547,
          "node_id": "MDQ6VXNlcjkwNzY5NTQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/90769547?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Stanislav-Sobolev",
          "html_url": "https://github.com/Stanislav-Sobolev",
          "followers_url": "https://api.github.com/users/Stanislav-Sobolev/followers",
          "following_url": "https://api.github.com/users/Stanislav-Sobolev/following{/other_user}",
          "gists_url": "https://api.github.com/users/Stanislav-Sobolev/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Stanislav-Sobolev/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Stanislav-Sobolev/subscriptions",
          "organizations_url": "https://api.github.com/users/Stanislav-Sobolev/orgs",
          "repos_url": "https://api.github.com/users/Stanislav-Sobolev/repos",
          "events_url": "https://api.github.com/users/Stanislav-Sobolev/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Stanislav-Sobolev/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-27T07:59:06Z",
        "updated_at": "2024-06-29T14:06:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nI am using post-processing with WebGL 2.0 and encountered a limitation in the SSRShader. Currently, the shader uses only the metalness value to determine if SSR should be applied to a fragment:\r\n\r\n```\r\nfloat metalness = texture2D(tMetalness, vUv).r;\r\nif (metalness == 0.0) return;\r\n```\r\n\r\nThis limitation results in the same glossy reflection for all objects, regardless of their surface properties.\r\n\n\n### Solution\n\nI propose to extend the SSRShader functionality by utilizing both metalness (for opacity/alpha SSR) and roughness (to determine the strength of SSR reflections). I have customized the shader to use ORM textures and modified it as follows:\r\n\r\n```\r\nfloat roughness = texture2D(tReflectance, vUv).g;\r\nfloat metalness = texture2D(tReflectance, vUv).b;\r\nif (metalness == 0.0) return;\r\n\r\nfloat reflectionStrength = 1.0 * roughness;\r\ngl_FragColor.xyz = reflectColor.xyz * reflectionStrength;\r\ngl_FragColor.a = op * roughness * metalness;\r\n```\r\n\r\nThis modification allows achieving more realistic reflections by adjusting their strength based on the roughness value.\n\n### Alternatives\n\nCurrently, the only alternative is to manually customize the shader code to incorporate roughness, as shown above. This approach is not ideal for all users and may lead to inconsistencies and maintenance challenges.\n\n### Additional context\n\nSupporting roughness in the SSRShader to blur reflections based on roughness strength would allow for more accurate and varied reflections, improving visual realism for both metallic and non-metallic surfaces. This enhancement would greatly benefit the Three.js community and enhance the overall rendering quality.\r\n\r\nThank you for considering this request.",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28752/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28752/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28751",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28751/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28751/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28751/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28751",
        "id": 2376180909,
        "node_id": "I_kwDOAAjKyc6NoaSt",
        "number": 28751,
        "title": "Different default background colors of WebGLRenderer and WebGPURenderer",
        "user": {
          "login": "boytchev",
          "id": 70705048,
          "node_id": "MDQ6VXNlcjcwNzA1MDQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/70705048?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/boytchev",
          "html_url": "https://github.com/boytchev",
          "followers_url": "https://api.github.com/users/boytchev/followers",
          "following_url": "https://api.github.com/users/boytchev/following{/other_user}",
          "gists_url": "https://api.github.com/users/boytchev/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/boytchev/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/boytchev/subscriptions",
          "organizations_url": "https://api.github.com/users/boytchev/orgs",
          "repos_url": "https://api.github.com/users/boytchev/repos",
          "events_url": "https://api.github.com/users/boytchev/events{/privacy}",
          "received_events_url": "https://api.github.com/users/boytchev/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-26T20:12:02Z",
        "updated_at": "2024-07-23T08:14:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nThe default background color of `WebGLRenderer` is black.\r\nThe default background color of `WebGPURenderer` is white.\r\n\r\nIt will improve the consistency if both renderers have the same default background colors.\n\n### Reproduction steps\n\n1. Create a WebGL renderer, a scene, a camera and render the scene. The background color is black.\r\n2. Create a WebGPU renderer, a scene, a camera and renderasync the scene. The background is white.\r\n\n\n### Code\n\n(See the live examples for code)\n\n### Live example\n\n* WebGL: [https://codepen.io/boytchev/pen/yLWwxNZ](https://codepen.io/boytchev/pen/yLWwxNZ)\r\n* WebGPU: [https://codepen.io/boytchev/pen/dyErjXB](https://codepen.io/boytchev/pen/dyErjXB)\n\n### Screenshots\n\nWebGL black background (the canvas has red border):\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/70705048/cf7a0a27-bac6-44f5-9db9-5f1a503547ac)\r\n\r\nWebGPU white background (the canvas has red border):\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/70705048/1d1a25c8-c425-4973-8926-509122df8d83)\r\n\n\n### Version\n\nr165\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome, Firefox\n\n### OS\n\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28751/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28751/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28728",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28728/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28728/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28728/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28728",
        "id": 2368810243,
        "node_id": "I_kwDOAAjKyc6NMS0D",
        "number": 28728,
        "title": "TSL: Wrong compilation of `min(...)` and `max(...)` with 3 or more parameters",
        "user": {
          "login": "boytchev",
          "id": 70705048,
          "node_id": "MDQ6VXNlcjcwNzA1MDQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/70705048?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/boytchev",
          "html_url": "https://github.com/boytchev",
          "followers_url": "https://api.github.com/users/boytchev/followers",
          "following_url": "https://api.github.com/users/boytchev/following{/other_user}",
          "gists_url": "https://api.github.com/users/boytchev/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/boytchev/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/boytchev/subscriptions",
          "organizations_url": "https://api.github.com/users/boytchev/orgs",
          "repos_url": "https://api.github.com/users/boytchev/repos",
          "events_url": "https://api.github.com/users/boytchev/events{/privacy}",
          "received_events_url": "https://api.github.com/users/boytchev/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          },
          {
            "id": 5252109168,
            "node_id": "LA_kwDOAAjKyc8AAAABOQzTcA",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/TSL",
            "name": "TSL",
            "color": "465B1F",
            "default": false,
            "description": "Three.js Shading Language"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-06-23T18:00:33Z",
        "updated_at": "2024-06-24T02:31:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nTSL allows many parameters to functions `min(...)` and `max(...)`. Using more than 2 parameters, however, fails:\r\n\r\n* Both GLSL and WGSL trigger a syntax error, as they support only two parameters, but the code has 3 parameters\r\n* The compiled code contains only the first three parameters; the rest are silently ignored\r\n\r\nThe GLSL error is:\r\n```\r\nTHREE.WebGLBackend: Must have a compiled fragment shader attached:\r\nSHADER_INFO_LOG:\r\nERROR: 0:56: 'min' : no matching overloaded function found\r\nERROR: 0:56: 'max' : no matching overloaded function found\r\n```\r\n\r\nThe WGSL error is (significantly shortened):\r\n```\r\nError while parsing WGSL: no matching call to\r\n'min(abstract-float, abstract-float, abstract-float)'\r\noverload expects 2 arguments, call passed 3 arguments\r\n```\r\n\r\n### Suggested solutions\r\n* compile `min(a,b,c,d,...)` into `min(a,min(b,min(c,...)))`; and the same for `max`\r\n* throw an error message if more than 2 parameters are used\r\n* describe in the documentation what functions accept multiple parameters and how they are dealt with when the functions are chained\r\n\r\n### Untested situation\r\nChained `min(...)` and `max(...)` are not tested\n\n### Reproduction steps\n\n1. Use `min` or `max` with more than 3 parameters:\r\n```\r\nmn = min( 11, 12, 13, 14, 15 );\r\nmx = max( 21, 22, 23, 24, 25 );\r\n```\r\n2. Observe the error message in the console\n\n### Code\n\n(see the live example)\n\n### Live example\n\nMinimal code. Does not render anything meaningful, just generates the error messages. \r\n\r\n[https://codepen.io/boytchev/pen/RwmyQLY](https://codepen.io/boytchev/pen/RwmyQLY)\r\n\n\n### Screenshots\n\nDemonstration that only the first three parameters are compiled:\r\n\r\nUsing the TSL editor in GLSL mode:\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/70705048/745c45ad-1efe-4176-ac84-6bbeb161b3e1)\r\n\r\nUsing the TSL editor in WGSL mode:\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/70705048/ff408c45-51c8-4e4d-b0ef-62e76a927586)\r\n\n\n### Version\n\nr165\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome, Firefox\n\n### OS\n\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28728/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28728/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28708",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28708/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28708/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28708/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28708",
        "id": 2364476157,
        "node_id": "I_kwDOAAjKyc6M7wr9",
        "number": 28708,
        "title": "Shader unit test framework",
        "user": {
          "login": "bhouston",
          "id": 588541,
          "node_id": "MDQ6VXNlcjU4ODU0MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/588541?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bhouston",
          "html_url": "https://github.com/bhouston",
          "followers_url": "https://api.github.com/users/bhouston/followers",
          "following_url": "https://api.github.com/users/bhouston/following{/other_user}",
          "gists_url": "https://api.github.com/users/bhouston/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bhouston/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bhouston/subscriptions",
          "organizations_url": "https://api.github.com/users/bhouston/orgs",
          "repos_url": "https://api.github.com/users/bhouston/repos",
          "events_url": "https://api.github.com/users/bhouston/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bhouston/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-20T13:36:34Z",
        "updated_at": "2024-07-01T13:50:01Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nWe have many many GLSL functions that use all over the place in our shaders.\r\n\r\nThese functions can have subtle bugs or problems with their extremes.\r\n\r\nWe really do not check if these functions operate correctly via unit tests because we do not have unit tests that work with shaders.\n\n### Solution\n\nFor threeify, I implemented a quick and dirty shader unit test system.\r\n\r\nYou could write tests in this fashion:\r\n\r\n```glsl\r\n#pragma import \"../tests/fragment.glsl\"\r\n#pragma import \"./normalPacking.glsl\"\r\n\r\nvoid testEquivalency(inout TestSuite suite, int testId, vec3 normal) {\r\n  vec3 rgb = normalToRgb(normal);\r\n  vec3 normal2 = rgbToNormal(rgb);\r\n  assert(suite, testId, eqAbs(normal, normal2, 0.0001));\r\n}\r\n\r\nvoid tests(inout TestSuite suite) {\r\n  vec3 px = vec3(1.0, 0.0, 0.0);\r\n  vec3 py = vec3(0.0, 1.0, 0.0);\r\n  vec3 pz = vec3(0.0, 0.0, 1.0);\r\n\r\n  testEquivalency(suite, 3, px);\r\n  testEquivalency(suite, 4, -px);\r\n  testEquivalency(suite, 5, py);\r\n  testEquivalency(suite, 6, -py);\r\n  testEquivalency(suite, 7, pz);\r\n  testEquivalency(suite, 8, -pz);\r\n\r\n}\r\n```\r\n\r\nAnother example here: https://github.com/bhouston/threeify/blob/main/packages/core/src/shaders/math/unitIntervalPacking.test.glsl\r\n\r\nAnd then it would be executed so that each test would write to a pixel in an output texture 0 or 1.  And then you could read back that texture and see if all unit tests pass -- all 1s:\r\n\r\n```ts\r\n  const passMaterial = new ShaderMaterial(\r\n        'index',\r\n        vertexSource,\r\n        glslUnitTest.source\r\n      );\r\n      const unitProgram = await shaderMaterialToProgram(context, passMaterial);\r\n\r\n      framebuffer.clear(BufferBit.All);\r\n      renderPass({\r\n        framebuffer,\r\n        program: unitProgram,\r\n        uniforms: unitUniforms\r\n      });\r\n\r\n      const result = frameBufferToPixels(framebuffer) as Uint8Array;\r\n\r\n      for (let i = 0; i < result.length; i += 4) {\r\n        const runResult = result[i + 2];\r\n        const id = i / 4;\r\n        switch (runResult) {\r\n          case 0:\r\n            failureIds.push(id);\r\n            break;\r\n          case 1:\r\n            passIds.push(id);\r\n            break;\r\n          case 3:\r\n            duplicateIds.push(id);\r\n            break;\r\n        }\r\n      }\r\n```\r\n\r\nFull source code here: https://github.com/bhouston/threeify/blob/main/examples/src/units/glsl/index.ts\r\n\r\nAdding this to Three.js would extend the robustness of Three to the shader level.  It would also help identify GPU hardware / drivers that are misbehaving in a much faster way than we currently do.  Basically you will see specific tests fail for GPU X and know exactly what you have to do to fix it.\r\n\n\n### Alternatives\n\nUnsure of alternatives, maybe something new with TSL?\n\n### Additional context\n\nWe identified recently that some of our packing / unpacking code for GLSL is buggy and has been for many years: https://github.com/mrdoob/three.js/issues/28692",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28708/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28708/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28693",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28693/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28693/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28693/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28693",
        "id": 2359728270,
        "node_id": "I_kwDOAAjKyc6MppiO",
        "number": 28693,
        "title": "USDZLoader doesn't support all .usdz(usda) files. The only showcase example file works.",
        "user": {
          "login": "MadMax888",
          "id": 11533757,
          "node_id": "MDQ6VXNlcjExNTMzNzU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/11533757?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MadMax888",
          "html_url": "https://github.com/MadMax888",
          "followers_url": "https://api.github.com/users/MadMax888/followers",
          "following_url": "https://api.github.com/users/MadMax888/following{/other_user}",
          "gists_url": "https://api.github.com/users/MadMax888/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MadMax888/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MadMax888/subscriptions",
          "organizations_url": "https://api.github.com/users/MadMax888/orgs",
          "repos_url": "https://api.github.com/users/MadMax888/repos",
          "events_url": "https://api.github.com/users/MadMax888/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MadMax888/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-18T12:19:31Z",
        "updated_at": "2024-07-29T11:06:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nCan't open normally other usda files by usdzloader. I've used the same showcase example configuration but had broken preview. Normally works only original file from threejs models/usdz/saeukkang.usdz\n\n### Reproduction steps\n\n1.\r\n2.\r\n3.\r\n\n\n### Code\n\n```js\r\n// code goes here\r\n```\r\n\n\n### Live example\n\n*  Run threejs showcase example app and choose http://localhost:8083/examples/?q=usdz#webgl_loader_usdz\r\n* download USDA files and try to load via webgl_loader_usdz page\r\n\r\n1. https://3d.si.edu/object/3d/pandereta:9dab61be-7e8a-431b-8c1d-c793e206af2e\r\n2. https://3d.si.edu/object/3d/boots-worn-muralist-judy-baca:b87cbab8-9aa6-4caa-85a3-1492fd7dcbb2\r\n3. https://3d.si.edu/object/3d/cuatro:b6befa3e-d257-4344-b50d-2d158aefdb76\r\n\n\n### Screenshots\n\n<img width=\"1418\" alt=\"Screenshot 2024-06-18 at 15 07 12\" src=\"https://github.com/mrdoob/three.js/assets/11533757/1e705a4a-5d6d-4f48-be4e-c41ee6b60979\">\r\n<img width=\"1761\" alt=\"Screenshot 2024-06-18 at 15 07 27\" src=\"https://github.com/mrdoob/three.js/assets/11533757/5249bd8d-3717-4132-b28a-422c24fb4742\">\r\n<img width=\"1576\" alt=\"Screenshot 2024-06-18 at 15 08 01\" src=\"https://github.com/mrdoob/three.js/assets/11533757/af8e4161-3c9e-4322-a298-35bdaa9c5293\">\r\n\r\n\n\n### Version\n\n165\n\n### Device\n\n_No response_\n\n### Browser\n\nChrome\n\n### OS\n\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28693/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28693/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28652",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28652/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28652/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28652/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28652",
        "id": 2351945886,
        "node_id": "I_kwDOAAjKyc6ML9ie",
        "number": 28652,
        "title": "WebGLRenderTarget Texture breaks glTF export",
        "user": {
          "login": "marwie",
          "id": 5083203,
          "node_id": "MDQ6VXNlcjUwODMyMDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5083203?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/marwie",
          "html_url": "https://github.com/marwie",
          "followers_url": "https://api.github.com/users/marwie/followers",
          "following_url": "https://api.github.com/users/marwie/following{/other_user}",
          "gists_url": "https://api.github.com/users/marwie/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/marwie/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/marwie/subscriptions",
          "organizations_url": "https://api.github.com/users/marwie/orgs",
          "repos_url": "https://api.github.com/users/marwie/repos",
          "events_url": "https://api.github.com/users/marwie/events{/privacy}",
          "received_events_url": "https://api.github.com/users/marwie/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-13T19:54:22Z",
        "updated_at": "2024-09-17T09:44:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nWebGLRenderTarget textures assigned to objects in the scene cause the GLTFExporter to throw at image export resulting in the glTF export to not work at all\r\n\r\nNot sure how to fix this properly - but I believe this shouldnt cause the export from failing altogether\r\n\r\n### Reproduction steps\r\n\r\n1. Create a WebGLRenderTarget\r\n2. Assign `renderTarget.texture` to some material used in the scene\r\n3. Try export with GLTFExporter\r\n4. Observe error\r\n\r\n```js\r\nError: THREE.GLTFExporter: Invalid image type. Use HTMLImageElement, HTMLCanvasElement, ImageBitmap or OffscreenCanvas.\r\n    at GLTFWriter.processImage (GLTFExporter.js:1323:12)\r\n    at GLTFWriter.processTexture (GLTFExporter.js:1430:17)\r\n    at GLTFWriter.processMaterial (GLTFExporter.js:1516:17)\r\n    at GLTFWriter.processMesh (GLTFExporter.js:1929:26)\r\n    at GLTFWriter.processNode (GLTFExporter.js:2284:27)\r\n    at GLTFWriter.processScene (GLTFExporter.js:2360:28)\r\n    at GLTFWriter.processInput (GLTFExporter.js:2416:10)\r\n    at GLTFWriter.write (GLTFExporter.js:552:8)\r\n    at GLTFExporter.parse (GLTFExporter.js:202:10)\r\n    at exportGLTF (misc_exporter_gltf.html:43:18)\r\n```\r\n\r\n\r\n### Code\r\n\r\n```js\r\nsetTimeout(()=>{\r\n\tconst renderTexture = new THREE.WebGLRenderTarget(256, 256);\r\n\t// not necessary but let's render the scene once\r\n\trenderer.setRenderTarget( renderTexture );\r\n\trenderer.render( scene1, camera );\r\n\trenderer.setRenderTarget( null );\r\n\t// add the render texture to an object in the scene\r\n\tconst cube = new THREE.Mesh( new THREE.BoxGeometry( 200, 200, 200 ), new THREE.MeshBasicMaterial( { color: 0xffffff, map: renderTexture.texture } ) );\t\t\t\t\r\n\tscene1.add( cube );\r\n}, 10)\r\n```\r\n\r\n\r\n### Live example\r\n\r\nhttps://github.com/needle-tools/three.js/tree/webglrendertarget-breaks-gltfexport\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nr165\r\n\r\n### Device\r\n\r\nDesktop, Mobile, Headset\r\n\r\n### Browser\r\n\r\nChrome, Safari\r\n\r\n### OS\r\n\r\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28652/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28652/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28600",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28600/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28600/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28600/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28600",
        "id": 2343543993,
        "node_id": "I_kwDOAAjKyc6Lr6S5",
        "number": 28600,
        "title": "TSL: Some names for a TSL function break the syntax of translated WGSL or GLSL code",
        "user": {
          "login": "boytchev",
          "id": 70705048,
          "node_id": "MDQ6VXNlcjcwNzA1MDQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/70705048?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/boytchev",
          "html_url": "https://github.com/boytchev",
          "followers_url": "https://api.github.com/users/boytchev/followers",
          "following_url": "https://api.github.com/users/boytchev/following{/other_user}",
          "gists_url": "https://api.github.com/users/boytchev/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/boytchev/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/boytchev/subscriptions",
          "organizations_url": "https://api.github.com/users/boytchev/orgs",
          "repos_url": "https://api.github.com/users/boytchev/repos",
          "events_url": "https://api.github.com/users/boytchev/events{/privacy}",
          "received_events_url": "https://api.github.com/users/boytchev/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5252109168,
            "node_id": "LA_kwDOAAjKyc8AAAABOQzTcA",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/TSL",
            "name": "TSL",
            "color": "465B1F",
            "default": false,
            "description": "Three.js Shading Language"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-06-10T10:30:51Z",
        "updated_at": "2024-06-10T13:05:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nWhen a TSL code is translated into GLSL or WGSL some identifiers may break the code, because they collide with keywords or reserved words. For example, a TSL function named `fn` triggers the following error message:\r\n```\r\nError while parsing WGSL: :17:4 error: expected identifier for function declaration\r\nfn fn (  ) -> f32 {\r\n   ^^\r\n```\r\nbecause `fn` is a [keyword in WGSL](https://www.w3.org/TR/WGSL/#keyword-summary).\r\n\r\n#### Possible solutions:\r\n* Throw error or show warning when a keywords or reserved word is used &ndash; the (b)locked identifiers for GLSL and WGSL are different\r\n* Safeguard (all or only problematic) names by appending a prefix or suffix, e.g. `fn` may become `fn_tsl`\r\n* Add a warning in the documentation for users to avoid such identifiers\r\n* Leave it as it is\n\n### Reproduction steps\n\n#### Example with WGSL:\r\n\r\n1. Open [WebGPU TSL Editor](https://threejs.org/examples/#webgpu_tsl_editor) and make sure the output in the right panel is set to `WGSL`\r\n2. Copy the following code in the left panel:\r\n```\r\nconst { tslFn, vec4 } = TSL;\r\n\r\nconst fn = tslFn( () => { return 1; } );\r\n\r\nfn.setLayout( {\r\n\tname: 'fn',\r\n\ttype: 'float',\r\n\tinputs: []\r\n} );\r\n\r\noutput = vec4( 1, 1, 1, fn() );\r\n```\r\n3. Observe the translated code in the right panel. It contains:\r\n```\r\n// codes\r\nfn fn (  ) -> f32 {\r\n\treturn 1.0;\r\n}\r\n```\r\n4. Check the JS console. It shows error message\r\n```\r\nError while parsing WGSL: :17:4 error: expected identifier for function declaration\r\nfn fn (  ) -> f32 {\r\n   ^^\r\n\r\n:42:48 error: expected expression for function call\r\n  output.color = vec4<f32>( 1.0, 1.0, 1.0, f32( fn(  ) ) );\r\n                                                ^^\r\n\r\n\r\n - While validating [ShaderModuleDescriptor \"fragment\"]\r\n - While calling [Device].CreateShaderModule([ShaderModuleDescriptor \"fragment\"]).\r\n```\r\n\r\n#### Example with GLSL:\r\n\r\n1. Open [WebGPU TSL Editor](https://threejs.org/examples/#webgpu_tsl_editor) and make sure the output in the right panel is set to `GLSL`\r\n2. Copy the following code in the left panel:\r\n```\r\nconst { tslFn, vec4 } = TSL;\r\n\r\nconst main = tslFn( () => { return 1; } );\r\n\r\nmain.setLayout( {\r\n\tname: 'main',\r\n\ttype: 'float',\r\n\tinputs: []\r\n} );\r\n\r\noutput = vec4( 1, 1, 1, main() );\r\n```\r\n3. Observe the translated code in the right panel. It contains two definitions of `main`\r\n4. Check the JS console. It shows error message\r\n```\r\nCompilation log for [Invalid ShaderModule \"fragment\"]:\r\n1 error(s) generated while compiling the shader:\r\n:29:1 error: redeclaration of 'main'\r\nfn main(  ) -> OutputStruct {\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\n\n### Code\n\nSee \"Reproduction steps\"\n\n### Live example\n\nSee \"Reproduction steps\"\r\n\n\n### Screenshots\n\n![image](https://github.com/mrdoob/three.js/assets/70705048/361f3c4e-238c-432b-b3d6-625c643bb368)\r\n\n\n### Version\n\nr165\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28600/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28600/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28572",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28572/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28572/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28572/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28572",
        "id": 2337600275,
        "node_id": "I_kwDOAAjKyc6LVPMT",
        "number": 28572,
        "title": "Please allow full testing on components by running CI/CD tests in real DOM environment and support loading assets from disk",
        "user": {
          "login": "catalin-enache",
          "id": 4470065,
          "node_id": "MDQ6VXNlcjQ0NzAwNjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4470065?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/catalin-enache",
          "html_url": "https://github.com/catalin-enache",
          "followers_url": "https://api.github.com/users/catalin-enache/followers",
          "following_url": "https://api.github.com/users/catalin-enache/following{/other_user}",
          "gists_url": "https://api.github.com/users/catalin-enache/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/catalin-enache/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/catalin-enache/subscriptions",
          "organizations_url": "https://api.github.com/users/catalin-enache/orgs",
          "repos_url": "https://api.github.com/users/catalin-enache/repos",
          "events_url": "https://api.github.com/users/catalin-enache/events{/privacy}",
          "received_events_url": "https://api.github.com/users/catalin-enache/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-06-06T08:00:22Z",
        "updated_at": "2024-06-07T09:04:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nCurrently, when running the unit tests in the CI/CD pipeline they do not run in a real DOM environment, hence the `web only` tests could not prevent the PR merge if they would run and eventually fail. Existing `e2e` tests have a different purpose and could not be considered a replacement for `web-only` tests.\r\n\r\nMany TODO tests were not implemented yet due to not being able to test the component without a real DOM environment. For example, `ImageLoader#load` is in TODO mode because it requires constructing an image ( `createElementNS( 'img' )` ) before doing anything else.\r\n\r\nAnother limitation is not being able to load assets from disk during testing.\r\nThis prevents `loaders` from being tested against `real assets` which can lead to regressions when modifying either existing loader logic or any core (or addon) dependency that the loader relies on.\r\n\r\n\r\n### Solution\r\n\r\nRun unit tests in a similar way that `e2e` test are run.\r\nIn unit-tests setup, use existing features that enables `e2e` tests (`puppeteer` & `express`).\r\nLaunch a headless browser (for CI/CD pipeline) or a headful browser locally (for convenience) and run the tests in it.\r\nLaunch express to support loading assets from disk.\r\n\r\nI have this PR\r\nhttps://github.com/mrdoob/three.js/pull/28573\r\n\r\n### Alternatives\r\n\r\nOther libraries could support this as well but we can leverage what we already have (`puppeteer` & `express`).\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28572/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28572/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28569",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28569/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28569/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28569/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28569",
        "id": 2337388773,
        "node_id": "I_kwDOAAjKyc6LUbjl",
        "number": 28569,
        "title": "TSL: Missing While Support",
        "user": {
          "login": "RenaudRohlinger",
          "id": 15867665,
          "node_id": "MDQ6VXNlcjE1ODY3NjY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/15867665?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RenaudRohlinger",
          "html_url": "https://github.com/RenaudRohlinger",
          "followers_url": "https://api.github.com/users/RenaudRohlinger/followers",
          "following_url": "https://api.github.com/users/RenaudRohlinger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RenaudRohlinger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RenaudRohlinger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RenaudRohlinger/subscriptions",
          "organizations_url": "https://api.github.com/users/RenaudRohlinger/orgs",
          "repos_url": "https://api.github.com/users/RenaudRohlinger/repos",
          "events_url": "https://api.github.com/users/RenaudRohlinger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RenaudRohlinger/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5252109168,
            "node_id": "LA_kwDOAAjKyc8AAAABOQzTcA",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/TSL",
            "name": "TSL",
            "color": "465B1F",
            "default": false,
            "description": "Three.js Shading Language"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "sunag",
          "id": 502810,
          "node_id": "MDQ6VXNlcjUwMjgxMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sunag",
          "html_url": "https://github.com/sunag",
          "followers_url": "https://api.github.com/users/sunag/followers",
          "following_url": "https://api.github.com/users/sunag/following{/other_user}",
          "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
          "organizations_url": "https://api.github.com/users/sunag/orgs",
          "repos_url": "https://api.github.com/users/sunag/repos",
          "events_url": "https://api.github.com/users/sunag/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sunag/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "sunag",
            "id": 502810,
            "node_id": "MDQ6VXNlcjUwMjgxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunag",
            "html_url": "https://github.com/sunag",
            "followers_url": "https://api.github.com/users/sunag/followers",
            "following_url": "https://api.github.com/users/sunag/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
            "organizations_url": "https://api.github.com/users/sunag/orgs",
            "repos_url": "https://api.github.com/users/sunag/repos",
            "events_url": "https://api.github.com/users/sunag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunag/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-06-06T06:09:22Z",
        "updated_at": "2024-06-06T06:45:16Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\n`While` support is currently missing in the Three Shading Language. Just like `loop` it would be great to add `while` node support in both WGLSL and GLSL builder.",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28569/reactions",
          "total_count": 2,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28569/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28525",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28525/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28525/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28525/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28525",
        "id": 2324310398,
        "node_id": "I_kwDOAAjKyc6Kiil-",
        "number": 28525,
        "title": "[WebGPU] Control Access Barriers",
        "user": {
          "login": "cmhhelgeson",
          "id": 62450112,
          "node_id": "MDQ6VXNlcjYyNDUwMTEy",
          "avatar_url": "https://avatars.githubusercontent.com/u/62450112?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cmhhelgeson",
          "html_url": "https://github.com/cmhhelgeson",
          "followers_url": "https://api.github.com/users/cmhhelgeson/followers",
          "following_url": "https://api.github.com/users/cmhhelgeson/following{/other_user}",
          "gists_url": "https://api.github.com/users/cmhhelgeson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cmhhelgeson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cmhhelgeson/subscriptions",
          "organizations_url": "https://api.github.com/users/cmhhelgeson/orgs",
          "repos_url": "https://api.github.com/users/cmhhelgeson/repos",
          "events_url": "https://api.github.com/users/cmhhelgeson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cmhhelgeson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-05-29T21:57:14Z",
        "updated_at": "2024-08-27T05:16:18Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nAt some point, I think it would be great to have the ability to set control access barriers and access more of the WGSL specific functionality within a TSL function. I've tried implementing some of these access barriers myself in a personal branch, using an approach similar to that of the 'vec2', 'vec3', 'etc' ConvertTypes in ShaderNode.js. However, it seems like the node system is heavily weighted towards nodes that explicitly represent some kind of mathematical operation, so, at least from my end, it's not as simple as just adding another node type. \n\n### Solution\n\n```\r\nexport const workgroupBarrier = new BarrierType('workgroup');\r\n```\r\n\r\nAnd then be accessed from a tslFn like so...\r\n\r\n```\r\ntslFn( () => {\r\n\t...\r\n\tworkgroupBarrier()\r\n\t...\r\n})\r\n```\r\n\r\nI'm not sure if there's currently a relevant use case for these barriers, but once subgroups become stable, I imagine commands like workgroupBarrier() or subgroupBarrier() would be very useful for things like prefix sums for spatial hash grids.\n\n### Alternatives\n\n*No response*\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28525/reactions",
          "total_count": 2,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28525/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28501",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28501/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28501/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28501/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28501",
        "id": 2319596310,
        "node_id": "I_kwDOAAjKyc6KQjsW",
        "number": 28501,
        "title": "readRenderTargetPixels() works for WebGLRenderTarget but is all 0 for WebGL3DRenderTarget",
        "user": {
          "login": "hubtub2",
          "id": 42343043,
          "node_id": "MDQ6VXNlcjQyMzQzMDQz",
          "avatar_url": "https://avatars.githubusercontent.com/u/42343043?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hubtub2",
          "html_url": "https://github.com/hubtub2",
          "followers_url": "https://api.github.com/users/hubtub2/followers",
          "following_url": "https://api.github.com/users/hubtub2/following{/other_user}",
          "gists_url": "https://api.github.com/users/hubtub2/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hubtub2/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hubtub2/subscriptions",
          "organizations_url": "https://api.github.com/users/hubtub2/orgs",
          "repos_url": "https://api.github.com/users/hubtub2/repos",
          "events_url": "https://api.github.com/users/hubtub2/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hubtub2/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 609335156,
            "node_id": "MDU6TGFiZWw2MDkzMzUxNTY=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Browser%20Issue",
            "name": "Browser Issue",
            "color": "d93f0b",
            "default": false,
            "description": null
          },
          {
            "id": 967661850,
            "node_id": "MDU6TGFiZWw5Njc2NjE4NTA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Device%20Issue",
            "name": "Device Issue",
            "color": "ed74ae",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2024-05-27T18:05:19Z",
        "updated_at": "2024-06-07T10:01:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nI am using a shader to write to a 3D render target.\r\nTo debug the result I am using renderer.readRenderTargetPixels()\r\n\r\nThe result for WebGLRenderTarget is correct, the result for WebGL3DRenderTarget is all zero.\r\n\r\n\r\n\r\n### Reproduction steps\r\n\r\nPlease check the fiddle:\r\n1. First run as is and check the output on the console: the buffer contains 0,0,0,255\r\n2. Now go to line 66 and enable the line with WebGLRenderTarget and disable the line with WebGL3DRenderTarget\r\n3. The output now is correct: 102, 255, 15, 255\r\n\r\n\r\n### Code\r\nSee fiddle for complete example.\r\n\r\n```\r\n//-- 3D or 2D Render target\r\n// brushTarget = new THREE.WebGLRenderTarget(32, 32) \r\nbrushTarget = new THREE.WebGL3DRenderTarget(32, 32, 32)\r\n\r\n\r\nvar layer=0;   // Layer in 3D Texture\r\n\r\nrenderer.setRenderTarget(brushTarget, layer);\r\nrenderer.render( brushScene, brushCamera );    \r\n    \r\nvar buffer = new Uint8Array(4); \r\nrenderer.readRenderTargetPixels(brushTarget, 16, 16, 1, 1, buffer, layer)\r\n\r\nconsole.log(\"Debug read brush\", buffer)   // Press F12 to show chrome console\r\n\r\n```\r\n\r\n\r\n### Live example\r\n\r\nhttps://jsfiddle.net/92xa60g4/25/\r\n\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nr164\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28501/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28501/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28450",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28450/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28450/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28450/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28450",
        "id": 2308504327,
        "node_id": "I_kwDOAAjKyc6JmPsH",
        "number": 28450,
        "title": "NormalScale in USDZ Exporter",
        "user": {
          "login": "Patrick-van-Halm-360Fabriek",
          "id": 99954741,
          "node_id": "U_kgDOBfUwNQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/99954741?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek",
          "html_url": "https://github.com/Patrick-van-Halm-360Fabriek",
          "followers_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/followers",
          "following_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/following{/other_user}",
          "gists_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/subscriptions",
          "organizations_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/orgs",
          "repos_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/repos",
          "events_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Patrick-van-Halm-360Fabriek/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-05-21T14:55:49Z",
        "updated_at": "2024-05-22T14:55:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nWithin the USDZ exporter it seems like the NormalScale seems disregarded. I would like to have this included so normals can be more excessive in certain cases.\n\n### Solution\n\nWithin the USDZ exporter include the materials NormalScale when generating the texture/material.\n\n### Alternatives\n\nNone\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28450/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28450/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28436",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28436/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28436/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28436/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28436",
        "id": 2305216080,
        "node_id": "I_kwDOAAjKyc6JZs5Q",
        "number": 28436,
        "title": "WebGPURenderer: `viewportDepthTexture` broken when antialias is enabled.",
        "user": {
          "login": "RenaudRohlinger",
          "id": 15867665,
          "node_id": "MDQ6VXNlcjE1ODY3NjY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/15867665?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RenaudRohlinger",
          "html_url": "https://github.com/RenaudRohlinger",
          "followers_url": "https://api.github.com/users/RenaudRohlinger/followers",
          "following_url": "https://api.github.com/users/RenaudRohlinger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RenaudRohlinger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RenaudRohlinger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RenaudRohlinger/subscriptions",
          "organizations_url": "https://api.github.com/users/RenaudRohlinger/orgs",
          "repos_url": "https://api.github.com/users/RenaudRohlinger/repos",
          "events_url": "https://api.github.com/users/RenaudRohlinger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RenaudRohlinger/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "sunag",
          "id": 502810,
          "node_id": "MDQ6VXNlcjUwMjgxMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sunag",
          "html_url": "https://github.com/sunag",
          "followers_url": "https://api.github.com/users/sunag/followers",
          "following_url": "https://api.github.com/users/sunag/following{/other_user}",
          "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
          "organizations_url": "https://api.github.com/users/sunag/orgs",
          "repos_url": "https://api.github.com/users/sunag/repos",
          "events_url": "https://api.github.com/users/sunag/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sunag/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "sunag",
            "id": 502810,
            "node_id": "MDQ6VXNlcjUwMjgxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunag",
            "html_url": "https://github.com/sunag",
            "followers_url": "https://api.github.com/users/sunag/followers",
            "following_url": "https://api.github.com/users/sunag/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
            "organizations_url": "https://api.github.com/users/sunag/orgs",
            "repos_url": "https://api.github.com/users/sunag/repos",
            "events_url": "https://api.github.com/users/sunag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunag/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-05-20T06:38:15Z",
        "updated_at": "2024-07-20T09:57:47Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\n`viewportDepthTexture` doesn't work in a non-postprocess setup with antialiasing on both `WebGPU` and `WebGL` backends.\r\n\r\nhttps://jsfiddle.net/chaz18up/2/:\r\n[![image](https://github.com/mrdoob/three.js/assets/15867665/10779780-72d5-4163-9a81-9501cafefbf0)](https://jsfiddle.net/chaz18up/2/)\r\n\r\n### Errors:\r\nWebGPU:\r\n![image](https://github.com/mrdoob/three.js/assets/15867665/efc7562f-a0bc-44a2-b872-8312f58da721)\r\nWebGL:\r\n![image](https://github.com/mrdoob/three.js/assets/15867665/2abf3131-0c60-4985-85af-fe13473d2aa4)\r\n\r\n### Version\r\n\r\nr164",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28436/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28436/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28389",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28389/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28389/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28389/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28389",
        "id": 2298526593,
        "node_id": "I_kwDOAAjKyc6JALuB",
        "number": 28389,
        "title": "[WebGPU] drawIndirect and drawIndexedIndirect",
        "user": {
          "login": "AIFanatic",
          "id": 9558106,
          "node_id": "MDQ6VXNlcjk1NTgxMDY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9558106?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AIFanatic",
          "html_url": "https://github.com/AIFanatic",
          "followers_url": "https://api.github.com/users/AIFanatic/followers",
          "following_url": "https://api.github.com/users/AIFanatic/following{/other_user}",
          "gists_url": "https://api.github.com/users/AIFanatic/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AIFanatic/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AIFanatic/subscriptions",
          "organizations_url": "https://api.github.com/users/AIFanatic/orgs",
          "repos_url": "https://api.github.com/users/AIFanatic/repos",
          "events_url": "https://api.github.com/users/AIFanatic/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AIFanatic/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "sunag",
          "id": 502810,
          "node_id": "MDQ6VXNlcjUwMjgxMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sunag",
          "html_url": "https://github.com/sunag",
          "followers_url": "https://api.github.com/users/sunag/followers",
          "following_url": "https://api.github.com/users/sunag/following{/other_user}",
          "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
          "organizations_url": "https://api.github.com/users/sunag/orgs",
          "repos_url": "https://api.github.com/users/sunag/repos",
          "events_url": "https://api.github.com/users/sunag/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sunag/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "sunag",
            "id": 502810,
            "node_id": "MDQ6VXNlcjUwMjgxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunag",
            "html_url": "https://github.com/sunag",
            "followers_url": "https://api.github.com/users/sunag/followers",
            "following_url": "https://api.github.com/users/sunag/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
            "organizations_url": "https://api.github.com/users/sunag/orgs",
            "repos_url": "https://api.github.com/users/sunag/repos",
            "events_url": "https://api.github.com/users/sunag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunag/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/4",
          "html_url": "https://github.com/mrdoob/three.js/milestone/4",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/4/labels",
          "id": 3044279,
          "node_id": "MDk6TWlsZXN0b25lMzA0NDI3OQ==",
          "number": 4,
          "title": "r???",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 64,
          "closed_issues": 0,
          "state": "open",
          "created_at": "2018-01-17T23:51:52Z",
          "updated_at": "2024-05-24T06:21:56Z",
          "due_on": null,
          "closed_at": null
        },
        "comments": 13,
        "created_at": "2024-05-15T18:11:35Z",
        "updated_at": "2024-09-07T13:45:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nHi, is there any plans to support [drawIndirect](https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/drawIndirect) and [drawIndexedIndirect](https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/drawIndexedIndirect)? I have searched the issues and the code base and could not find any references to either.\n\n### Solution\n\nNot entirely sure what the best approach would be here but maybe provide a renderer.renderIndirect method that allows an array/buffer reference to be passed? I guess the WebGL backend would have to fallback to drawElements or equivalent.\n\n### Alternatives\n\nI have implemented a [nanite equivalent](https://github.com/AIFanatic/three-nanite) in three.js and the bottleneck now is the lod test since its done on the cpu. The algorithm is perfect for the gpu and almost everything could be implemented in WebGL but it would always require a gpu->cpu->gpu roundtrip to read how many meshlets should be displayed in order to properly call drawElements.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28389/reactions",
          "total_count": 5,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 5,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28389/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28336",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28336/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28336/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28336/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28336",
        "id": 2290688361,
        "node_id": "I_kwDOAAjKyc6IiSFp",
        "number": 28336,
        "title": "MMDLoader Still has colorization Issues",
        "user": {
          "login": "danpaldev",
          "id": 68087075,
          "node_id": "MDQ6VXNlcjY4MDg3MDc1",
          "avatar_url": "https://avatars.githubusercontent.com/u/68087075?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/danpaldev",
          "html_url": "https://github.com/danpaldev",
          "followers_url": "https://api.github.com/users/danpaldev/followers",
          "following_url": "https://api.github.com/users/danpaldev/following{/other_user}",
          "gists_url": "https://api.github.com/users/danpaldev/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/danpaldev/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/danpaldev/subscriptions",
          "organizations_url": "https://api.github.com/users/danpaldev/orgs",
          "repos_url": "https://api.github.com/users/danpaldev/repos",
          "events_url": "https://api.github.com/users/danpaldev/events{/privacy}",
          "received_events_url": "https://api.github.com/users/danpaldev/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2024-05-11T05:38:57Z",
        "updated_at": "2024-06-03T08:58:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThis is a follow up for an old issue (https://github.com/mrdoob/three.js/issues/26553) that was already closed but seems to be still having problems on r162\r\n\r\nAs the guy in the original issue reports, problem seems to be with PMX files. Every PMX model I loaded had washed out colors, so I tried to test this by using another renderer as a sanity check.\r\n\r\nUsing a  C++ renderer from here: https://github.com/benikabocha/saba \r\nI get this:\r\n![image](https://github.com/mrdoob/three.js/assets/68087075/bc92ab89-0ef8-47d1-889a-d807d94eb2b1)\r\n\r\n\r\nUsing MMDLoader + ThreeJS\r\n![image](https://github.com/mrdoob/three.js/assets/68087075/9f29c01b-578c-4a93-8b36-12d287c4d489)\r\n\r\n\r\n\r\nAs requested last time, I uploaded the PMX model here in order to make any possible debugging easier:\r\nhttps://drive.google.com/file/d/1NCDDCUkThV_PCZtsXpZ81rMzChUpi9Q1/view?usp=sharing\r\n\r\n\r\n\r\n### Reproduction steps\r\n\r\n1. Load MMD Loader\r\n2. Import a pmx model\r\n\r\n\r\n\r\n### Code\r\n\r\n```js\r\n        import * as THREE from \"three\";\r\n  \r\n        import { GUI } from \"three/addons/libs/lil-gui.module.min.js\";\r\n  \r\n        import { OutlineEffect } from \"three/addons/effects/OutlineEffect.js\";\r\n        import { MMDLoader } from \"three/addons/loaders/MMDLoader.js\";\r\n        import { MMDAnimationHelper } from \"three/addons/animation/MMDAnimationHelper.js\";\r\n        import { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\r\n\r\n\r\n        const modelFile = \"models/mmd/cat_girl/ヨッシー式ラインクラフト.pmx\";\r\n\r\n        helper = new MMDAnimationHelper();\r\n\r\n        const loader = new MMDLoader();\r\n\r\n        loader.load(\r\n          modelFile,\r\n          function (object) {\r\n            mesh = object;\r\n            console.log(mesh);\r\n            mesh.position.y = -10;\r\n\r\n            scene.add(mesh);\r\n\r\n            initGui();\r\n          },\r\n          onProgress,\r\n          null\r\n        );\r\n```\r\n\r\n\r\n### Live example\r\n\r\nNo live example \r\n\r\n### Screenshots\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/68087075/64f4efa5-c84f-4d0a-844f-4fe2b84b08aa)\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/68087075/08fbd417-28be-47d2-aec4-16471ab884fa)\r\n\r\n\r\n### Version\r\n\r\nr162\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nFirefox\r\n\r\n### OS\r\n\r\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28336/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28336/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28252",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28252/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28252/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28252/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28252",
        "id": 2273721481,
        "node_id": "I_kwDOAAjKyc6HhjyJ",
        "number": 28252,
        "title": "Stencil params getting out of sync.",
        "user": {
          "login": "DVLP",
          "id": 5261364,
          "node_id": "MDQ6VXNlcjUyNjEzNjQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5261364?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DVLP",
          "html_url": "https://github.com/DVLP",
          "followers_url": "https://api.github.com/users/DVLP/followers",
          "following_url": "https://api.github.com/users/DVLP/following{/other_user}",
          "gists_url": "https://api.github.com/users/DVLP/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DVLP/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DVLP/subscriptions",
          "organizations_url": "https://api.github.com/users/DVLP/orgs",
          "repos_url": "https://api.github.com/users/DVLP/repos",
          "events_url": "https://api.github.com/users/DVLP/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DVLP/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 609335156,
            "node_id": "MDU6TGFiZWw2MDkzMzUxNTY=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Browser%20Issue",
            "name": "Browser Issue",
            "color": "d93f0b",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-05-01T15:44:03Z",
        "updated_at": "2024-05-04T10:55:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nCalls to stencil functions like gl.stencilFunc, gl.stencilOp or gl.stencilMask are ignored when gl.STENCIL_TEST is not enabled. ~~That's  how it works in webgl~~ (Edit: no it doesn't, I was mislead by AI which lead me to a long state cache modifying misadventure and the real issue is in the comments). Regardless of that WebGLState.js is caching these values as current. preventing them from being set correctly when the stencil buffer is enabled afterwards and the value is the same as cached.\r\n\r\n### Reproduction steps\r\n\r\nRendering an empty scene should be enough to reproduce the issue.\r\nRenderer clears the frame and calls this.state.buffers.stencil.setMask( 0xffffffff );\r\n\r\nAt this point the cached currentStencilMask will be set to 0xffffffff but the native call to gl.stencilMask is ignored because gl.STENCIL_TEST is not enabled. The state is now out of sync and subsequent calls with the same value will be ignored because currentStencilMask will match them.\r\n\r\n1. in WebglState.js under line `currentStencilMask = stencilMask;` add a new line `console.log('Stencil mask cached correctly', gl.getParameter(gl.STENCIL_WRITEMASK) === currentStencilMask)`\r\n2. Create a basic scene, run and look in the console\r\n\r\n### Code\r\n\r\n```js\r\n```\r\n\r\n\r\n### Live example\r\n\r\nNo live example, requires core modification\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n164\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28252/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28252/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28193",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28193/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28193/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28193/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28193",
        "id": 2257604445,
        "node_id": "I_kwDOAAjKyc6GkE9d",
        "number": 28193,
        "title": "FBXLoader loads default Unreal model with wrong rotation",
        "user": {
          "login": "trusktr",
          "id": 297678,
          "node_id": "MDQ6VXNlcjI5NzY3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/trusktr",
          "html_url": "https://github.com/trusktr",
          "followers_url": "https://api.github.com/users/trusktr/followers",
          "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
          "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
          "organizations_url": "https://api.github.com/users/trusktr/orgs",
          "repos_url": "https://api.github.com/users/trusktr/repos",
          "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
          "received_events_url": "https://api.github.com/users/trusktr/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-04-22T23:04:23Z",
        "updated_at": "2024-06-26T16:15:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nHere are two FBX models, one from Mixamo, one from Unreal:\r\n\r\nhttps://rawcdn.githack.com/trusktr/assets/fe18e72007bafeaa6d37f3c4a5816fd3da63e413/mixamo-michele.fbx\r\nhttps://rawcdn.githack.com/trusktr/assets/fe18e72007bafeaa6d37f3c4a5816fd3da63e413/unreal-manny.fbx\r\n\r\nIn Blender, they both load in the correct upright orientation, but in Threejs the Unreal model loads in an orientation off by 90 degrees.\n\n### Reproduction steps\n\nCreate a scene that loads both models.\n\n### Code\n\n```js\r\nnew FBXLoader().load('https://rawcdn.githack.com/trusktr/assets/fe18e72007bafeaa6d37f3c4a5816fd3da63e413/unreal-manny.fbx', model => {\r\n\tmodel.position.x += 50\r\n\tscene.add(model)\r\n})\r\n\r\nnew FBXLoader().load('https://rawcdn.githack.com/trusktr/assets/fe18e72007bafeaa6d37f3c4a5816fd3da63e413/mixamo-michele.fbx', model => {\r\n\tmodel.position.x -= 50\r\n\tscene.add(model)\r\n})\r\n```\r\n\n\n### Live example\n\nhttps://codepen.io/trusktr/pen/JjVwvNo\n\n### Screenshots\n\nScreenshot of Blender (I spaced the characters apart or else they would overlap):\r\n\r\n<img width=\"638\" alt=\"Screenshot 2024-04-22 at 3 28 30 PM\" src=\"https://github.com/mrdoob/three.js/assets/297678/72b4cf4f-6b4f-49b8-a362-0407c4bbeab7\">\r\n\r\nScreenshot of Threejs (each model moved apart by 100 \"centimeters\"):\r\n\r\n<img width=\"414\" alt=\"Screenshot 2024-04-22 at 4 03 07 PM\" src=\"https://github.com/mrdoob/three.js/assets/297678/219c325d-dc4a-48b3-94ac-78da517c0400\">\r\n\r\n\r\n\n\n### Version\n\nr163\n\n### Device\n\n_No response_\n\n### Browser\n\n_No response_\n\n### OS\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28193/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28193/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28134",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28134/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28134/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28134/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28134",
        "id": 2242226476,
        "node_id": "I_kwDOAAjKyc6Fpaks",
        "number": 28134,
        "title": "EXRLoader: Add support for `B44_COMPRESSION`.",
        "user": {
          "login": "TodicaIonut",
          "id": 156521906,
          "node_id": "U_kgDOCVRVsg",
          "avatar_url": "https://avatars.githubusercontent.com/u/156521906?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TodicaIonut",
          "html_url": "https://github.com/TodicaIonut",
          "followers_url": "https://api.github.com/users/TodicaIonut/followers",
          "following_url": "https://api.github.com/users/TodicaIonut/following{/other_user}",
          "gists_url": "https://api.github.com/users/TodicaIonut/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TodicaIonut/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TodicaIonut/subscriptions",
          "organizations_url": "https://api.github.com/users/TodicaIonut/orgs",
          "repos_url": "https://api.github.com/users/TodicaIonut/repos",
          "events_url": "https://api.github.com/users/TodicaIonut/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TodicaIonut/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          },
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-04-14T15:40:01Z",
        "updated_at": "2024-04-25T13:57:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\n[Luminance/Chroma Images](https://openexr.com/en/latest/TechnicalIntroduction.html#luminance-chroma-images)\r\n\r\n> Chroma information is stored in two channels, `RY` and `BY`, which are computed like\r\n\r\n[Channel Names](https://openexr.com/en/latest/TechnicalIntroduction.html#channel-names)\r\n\r\n> `Y` luminance, used either alone, for gray-scale images, or in combination with RY and BY for color images.\r\n\r\n> `RY`, `BY` chroma for luminance/chroma images, see above.\r\n\r\n[Chromaticities, Luminance/Chroma Test Images](https://openexr.com/en/latest/test_images/index.html#chromaticities)\n\n### Reproduction steps\n\n1. Bug EXR Luminance/Chroma Images\r\n2. Error B44 Compression (lossy data compression)\n\n### Code\n\n```js\r\n// Luminance Y Chroma RY, BY\r\n```\r\n\n\n### Live example\n\n* [gainmap-creator.monogrid.com](https://gainmap-creator.monogrid.com/)\n\n### Screenshots\n\n![Untitled32](https://github.com/mrdoob/three.js/assets/156521906/0fcdae9c-8793-43dd-a3ca-bfc776951e76)\r\n\r\nError message:\r\n![Untitled33](https://github.com/mrdoob/three.js/assets/156521906/28247a0f-e060-44ce-97e4-ffb5848f8864)\r\n\n\n### Version\n\nr163\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28134/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28134/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28131",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28131/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28131/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28131/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28131",
        "id": 2241581298,
        "node_id": "I_kwDOAAjKyc6Fm9Dy",
        "number": 28131,
        "title": "DoubleSided transmission unsupported with `WEBGL_multisampled_render_to_texture` (Oculus Browser)",
        "user": {
          "login": "mrxz",
          "id": 8823461,
          "node_id": "MDQ6VXNlcjg4MjM0NjE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8823461?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mrxz",
          "html_url": "https://github.com/mrxz",
          "followers_url": "https://api.github.com/users/mrxz/followers",
          "following_url": "https://api.github.com/users/mrxz/following{/other_user}",
          "gists_url": "https://api.github.com/users/mrxz/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mrxz/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mrxz/subscriptions",
          "organizations_url": "https://api.github.com/users/mrxz/orgs",
          "repos_url": "https://api.github.com/users/mrxz/repos",
          "events_url": "https://api.github.com/users/mrxz/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mrxz/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-04-13T14:16:31Z",
        "updated_at": "2024-06-29T09:33:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nWhen transmissive materials are set to `DoubleSided` the transmissive objects are rendered in two passes (see: https://github.com/mrdoob/three.js/pull/25502). The back side of the transmissive objects are rendered into the `transmissiveRenderTarget` while using the intermediate result of the `transmissiveRenderTarget`. This works as the target is multi-sampled and uses two textures under the hood.\r\n\r\nHowever, when the `EXT_multisampled_render_to_texture` is supported by the browser, it is used instead of the two textures approach. In this case rendering the back-sides fails as source and destination textures are the same.\r\n```\r\n[.WebGL-0x20170a200]GL ERROR :GL_INVALID_OPERATION : glDrawElements: Source and destination textures of the draw are the same.\r\n```\n\n### Reproduction steps\n\n1. Setup a scene with a double sided transmissive material\r\n2. Open in a browser that supports `WEBGL_multisampled_render_to_texture`\r\n3. Notice the back-side not being rendered and error(s) logged in the console\r\n\n\n### Code\n\n```js\r\nconst geometry = new THREE.SphereGeometry( 20, 64, 32 );\r\n\r\nconst material = new THREE.MeshPhysicalMaterial( {\r\n\tmetalness: 0,\r\n\troughness: 0,\r\n\tior: 1.5,\r\n\tenvMap: /* some equirectEnvMap */ hdrEquirect,\r\n\ttransmission: 1.0,\r\n\tside: THREE.DoubleSide,\r\n} );\r\n\r\nmesh = new THREE.Mesh( geometry, material );\r\nscene.add( mesh );\r\n```\r\n\n\n### Live example\n\nThe bug is present in both [`webxr_vr_sandbox`](https://threejs.org/examples/#webxr_vr_sandbox) and [`webgl_materials_physical_transmission`](https://threejs.org/examples/#webgl_materials_physical_transmission).\n\n### Screenshots\n\n| Without  `WEBGL_multisampled_render_to_texture` | With `WEBGL_multisampled_render_to_texture` |\r\n|---------------| --------|\r\n| ![image](https://github.com/mrdoob/three.js/assets/8823461/1bc0d36c-282e-4a15-a9b8-bf31408a389c) | ![image](https://github.com/mrdoob/three.js/assets/8823461/d4f658ab-d8d9-4387-9508-406ec6620191) |\n\n### Version\n\nr163\n\n### Device\n\nHeadset\n\n### Browser\n\nChrome\n\n### OS\n\nAndroid",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28131/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28131/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28109",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28109/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28109/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28109/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28109",
        "id": 2235241754,
        "node_id": "I_kwDOAAjKyc6FOxUa",
        "number": 28109,
        "title": "Expose 'count' property in BatchedMesh",
        "user": {
          "login": "Kikedao",
          "id": 1637356,
          "node_id": "MDQ6VXNlcjE2MzczNTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1637356?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Kikedao",
          "html_url": "https://github.com/Kikedao",
          "followers_url": "https://api.github.com/users/Kikedao/followers",
          "following_url": "https://api.github.com/users/Kikedao/following{/other_user}",
          "gists_url": "https://api.github.com/users/Kikedao/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Kikedao/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Kikedao/subscriptions",
          "organizations_url": "https://api.github.com/users/Kikedao/orgs",
          "repos_url": "https://api.github.com/users/Kikedao/repos",
          "events_url": "https://api.github.com/users/Kikedao/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Kikedao/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-04-10T10:19:12Z",
        "updated_at": "2024-05-28T08:12:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\n`BatchedMesh` doesn't have a public `count` property, `InstancedMesh` does though (https://threejs.org/docs/#api/en/objects/InstancedMesh.count).\r\n\r\nWithout it it becomes pretty complicated to know how many objects/geometries have been added to a `BatchedMesh` instance and do operations like traversing all of them to set the matrices, make sure you are in the range before updating one of them, etc.\n\n### Solution\n\nI see that the `BatchedMesh` implementation is already using a private `_geometryCount` property, it should be as easy as to rename it as `count` and update the docs.\n\n### Alternatives\n\nI think the proposed solution is the best as it would converge the API with `InstancedMesh`.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28109/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28109/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28100",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28100/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28100/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28100/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28100",
        "id": 2233677774,
        "node_id": "I_kwDOAAjKyc6FIzfO",
        "number": 28100,
        "title": "WebGLArrayRenderTarget: Constructor texture options are not respected",
        "user": {
          "login": "gkjohnson",
          "id": 734200,
          "node_id": "MDQ6VXNlcjczNDIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/734200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkjohnson",
          "html_url": "https://github.com/gkjohnson",
          "followers_url": "https://api.github.com/users/gkjohnson/followers",
          "following_url": "https://api.github.com/users/gkjohnson/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkjohnson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkjohnson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkjohnson/subscriptions",
          "organizations_url": "https://api.github.com/users/gkjohnson/orgs",
          "repos_url": "https://api.github.com/users/gkjohnson/repos",
          "events_url": "https://api.github.com/users/gkjohnson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkjohnson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/82",
          "html_url": "https://github.com/mrdoob/three.js/milestone/82",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/82/labels",
          "id": 11357506,
          "node_id": "MI_kwDOAAjKyc4ArU1C",
          "number": 82,
          "title": "r169",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 61,
          "closed_issues": 150,
          "state": "open",
          "created_at": "2024-07-25T08:18:33Z",
          "updated_at": "2024-09-17T16:29:12Z",
          "due_on": "2024-09-25T07:00:00Z",
          "closed_at": null
        },
        "comments": 5,
        "created_at": "2024-04-09T15:09:59Z",
        "updated_at": "2024-08-30T06:40:03Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\n\nWhen passing texture options into the `WebGLArrayRenderTarget` constructor they are not retained on the `target.texture` objects as expected.\n\n### Reproduction steps\n\n1. Create a new WebGLArrayRenderTarget with custom texture options\r\n2. See that options are not retained\r\n\n\n### Code\n\n```js\r\ntarget = new THREE.WebGLArrayRenderTarget( 1, 1, 1, { wrapS: THREE.RepeatWrapping } );\r\ntarget.texture.wrapS === THREE.RepeatWrapping;\r\n```\r\n\n\n### Live example\n\nRun above code in [three.js docs console](https://threejs.org/docs/)\n\n### Screenshots\n\n_No response_\n\n### Version\n\n163\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28100/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28100/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28055",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28055/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28055/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28055/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28055",
        "id": 2221017621,
        "node_id": "I_kwDOAAjKyc6EYgoV",
        "number": 28055,
        "title": "Error EXR: `deepscanline`. warning: `deepImageState`, `idmanifest`.",
        "user": {
          "login": "TodicaIonut",
          "id": 156521906,
          "node_id": "U_kgDOCVRVsg",
          "avatar_url": "https://avatars.githubusercontent.com/u/156521906?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TodicaIonut",
          "html_url": "https://github.com/TodicaIonut",
          "followers_url": "https://api.github.com/users/TodicaIonut/followers",
          "following_url": "https://api.github.com/users/TodicaIonut/following{/other_user}",
          "gists_url": "https://api.github.com/users/TodicaIonut/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TodicaIonut/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TodicaIonut/subscriptions",
          "organizations_url": "https://api.github.com/users/TodicaIonut/orgs",
          "repos_url": "https://api.github.com/users/TodicaIonut/repos",
          "events_url": "https://api.github.com/users/TodicaIonut/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TodicaIonut/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-04-02T17:04:50Z",
        "updated_at": "2024-04-17T14:36:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nwarning:\r\nTHREE.EXRLoader: Skipped unknown header attribute type 'deepImageState'. [here](https://openexr.com/en/latest/TechnicalIntroduction.html#multi-part-and-deep-data-attributes).\r\nTHREE.EXRLoader: Skipped unknown header attribute type 'idmanifest'.\r\n\r\nError message:\r\ntype: \"deepscanline\" [here](https://openexr.com/en/latest/TechnicalIntroduction.html#multi-part-and-deep-data-attributes)\r\nError: THREE.EXRLoader: Provided file is currently unsupported.\n\n### Reproduction steps\n\n1. warning deepImageState\r\n2. warning idmanifest\r\n3. Error deepscanline\r\n\n\n### Code\n\n```js\r\ntype : \"deepscanline\"\r\n```\r\n\n\n### Live example\n\n- [gainmap-creator.monogrid.com](https://gainmap-creator.monogrid.com/)\r\n\n\n### Screenshots\n\nchrome:\r\n![Untitled29](https://github.com/mrdoob/three.js/assets/156521906/0ec77fa7-e666-4cd0-9a68-494900d60992)\r\n\r\nmrv2:\r\n![Untitled30](https://github.com/mrdoob/three.js/assets/156521906/45e83967-d522-40db-b14f-22fa72a00b32)\r\n\n\n### Version\n\nr164\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28055/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28055/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28026",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28026/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28026/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28026/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28026",
        "id": 2214704044,
        "node_id": "I_kwDOAAjKyc6EAbOs",
        "number": 28026,
        "title": "Raycaster.setFromCamera: Position the ray origin at near plane rather than camera origin",
        "user": {
          "login": "gkjohnson",
          "id": 734200,
          "node_id": "MDQ6VXNlcjczNDIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/734200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkjohnson",
          "html_url": "https://github.com/gkjohnson",
          "followers_url": "https://api.github.com/users/gkjohnson/followers",
          "following_url": "https://api.github.com/users/gkjohnson/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkjohnson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkjohnson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkjohnson/subscriptions",
          "organizations_url": "https://api.github.com/users/gkjohnson/orgs",
          "repos_url": "https://api.github.com/users/gkjohnson/repos",
          "events_url": "https://api.github.com/users/gkjohnson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkjohnson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/82",
          "html_url": "https://github.com/mrdoob/three.js/milestone/82",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/82/labels",
          "id": 11357506,
          "node_id": "MI_kwDOAAjKyc4ArU1C",
          "number": 82,
          "title": "r169",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 61,
          "closed_issues": 150,
          "state": "open",
          "created_at": "2024-07-25T08:18:33Z",
          "updated_at": "2024-09-17T16:29:12Z",
          "due_on": "2024-09-25T07:00:00Z",
          "closed_at": null
        },
        "comments": 10,
        "created_at": "2024-03-29T05:52:35Z",
        "updated_at": "2024-08-30T06:40:02Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\n\nCurrently when calling `Raycaster.setFromCamera( mouse, camera )` the origin is currently set at the camera origin (perspective camera) or plane (orthographic camera) resulting in raycasts hitting objects that are being clipped by the camera plane (or not hitting object behind the camera if an ortho camera has a negative near clip value). Is there a reason for this?\r\n\r\nWhen users set the raycaster from camera and mouse settings they are expecting to interact with objects that are rendered on the screen.\r\n\n\n### Solution\n\nPlace the raycaster origin on the camera near clip plane instead of the camera plane / origin.\r\n\r\nSee the following example showing that the box displays as intersected (red) even when hovering over the center of the object that is clipped by the camera. You can uncomment line 43 to see the suggested change:\r\n\r\nhttps://jsfiddle.net/bjrog3Lw/1/\n\n### Alternatives\n\n- User must manually set the ray origin after calling `setFromCamera`.\r\n- Provide a setting to toggle the expected behavior.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28026/reactions",
          "total_count": 2,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28026/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/28020",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/28020/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/28020/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/28020/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/28020",
        "id": 2212798287,
        "node_id": "I_kwDOAAjKyc6D5J9P",
        "number": 28020,
        "title": "Support non-integer loop start and ends when using pragma unroll_loop_*",
        "user": {
          "login": "sguimmara",
          "id": 5512096,
          "node_id": "MDQ6VXNlcjU1MTIwOTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5512096?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sguimmara",
          "html_url": "https://github.com/sguimmara",
          "followers_url": "https://api.github.com/users/sguimmara/followers",
          "following_url": "https://api.github.com/users/sguimmara/following{/other_user}",
          "gists_url": "https://api.github.com/users/sguimmara/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sguimmara/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sguimmara/subscriptions",
          "organizations_url": "https://api.github.com/users/sguimmara/orgs",
          "repos_url": "https://api.github.com/users/sguimmara/repos",
          "events_url": "https://api.github.com/users/sguimmara/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sguimmara/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-03-28T09:54:59Z",
        "updated_at": "2024-03-29T09:21:58Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nCurrently, the pragma only supports integer values in its regexp:\r\n\r\n```js\r\n/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g\r\n```\r\n\r\nThis makes it impossible to unroll loops with statically defined values, such as:\r\n\r\n```glsl\r\n#define TEXTURE_COUNT 3\r\n\r\nsampler2D textures[TEXTURE_COUNT];\r\n\r\n#pragma unroll_loop_start\r\nfor ( int i = 0; i < TEXTURE_COUNT; i++ ) {\r\n   vec4 color = texture2D(textures[i], vec2(0, 0));\r\n}\r\n#pragma unroll_loop_end\r\n```\r\n\r\nThis would be useful to access samplers in an array, as GLSL forbids the user of dynamic indices to access samplers.\r\n\r\nIn my situation, I cannot use texture arrays as the various textures in the sampler array do not have the same sizes.\n\n### Solution\n\nCurrently, in `WebGLProgram.js`, the unrolling is done right after various preprocessing, such as includes:\r\n\r\n```js\r\nvertexShader = resolveIncludes( vertexShader );\r\nvertexShader = replaceLightNums( vertexShader, parameters );\r\nvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n\r\nfragmentShader = resolveIncludes( fragmentShader );\r\nfragmentShader = replaceLightNums( fragmentShader, parameters );\r\nfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n\r\nvertexShader = unrollLoops( vertexShader );\r\nfragmentShader = unrollLoops( fragmentShader );\r\n```\r\n\r\nWe could make `unrollLoops` aware of the defines in the material, and if the loop end/start are identifiers rather than integers, lookup the indentifiers in the defines of the material to access the actual value:\r\n\r\n```js\r\nvertexShader = unrollLoops( vertexShader , defines );\r\nfragmentShader = unrollLoops( fragmentShader, defines );\r\n```\r\n\r\nThen, we slightly modify `loopReplace` to capture the `defines` parameter:\r\n\r\n```js\r\nfunction unrollLoops( string, defines ) {\r\n\t\r\n\tfunction loopReplacer( match, start, end, snippet ) {\r\n\r\n\t\tlet string = '';\r\n\t\r\n\t\tconst loopStart = defines[ start ] ?? parseInt( start );\r\n\t\tconst loopEnd = defines [ end ] ??  parseInt( end );\r\n\t\r\n\t\tfor ( let i = loopStart; i < loopEnd; i ++ ) {\r\n\t\r\n\t\t\tstring += snippet\r\n\t\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\r\n\t\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn string;\r\n\t\r\n\t}\r\n\r\n\treturn string.replace( unrollLoopPattern, loopReplacer );\r\n\r\n}\r\n\r\n\r\n```\n\n### Alternatives\n\nI also considered adding hooks to the preprocessing of the shader (à la `onBeforeCompile`), so that the user could perform the replacement of the loop-related defines by actual integers:\r\n\r\n- `onBeforeUnrollLoops()`\r\n- `onBeforeIncludes()`\r\n\r\nbut it feels a bit too heavy.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/28020/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/28020/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27993",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27993/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27993/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27993/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27993",
        "id": 2205522050,
        "node_id": "I_kwDOAAjKyc6DdZiC",
        "number": 27993,
        "title": "GLTFLoader outputs an empty Group when multiple scenes refer to the same root node",
        "user": {
          "login": "wlinna",
          "id": 1473454,
          "node_id": "MDQ6VXNlcjE0NzM0NTQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1473454?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/wlinna",
          "html_url": "https://github.com/wlinna",
          "followers_url": "https://api.github.com/users/wlinna/followers",
          "following_url": "https://api.github.com/users/wlinna/following{/other_user}",
          "gists_url": "https://api.github.com/users/wlinna/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/wlinna/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/wlinna/subscriptions",
          "organizations_url": "https://api.github.com/users/wlinna/orgs",
          "repos_url": "https://api.github.com/users/wlinna/repos",
          "events_url": "https://api.github.com/users/wlinna/events{/privacy}",
          "received_events_url": "https://api.github.com/users/wlinna/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-03-25T11:27:02Z",
        "updated_at": "2024-09-15T19:35:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nGLTFLoader outputs an empty Group when multiple scenes refer to the same root node. I created a simple cube in Blender, exported to glTF. This works fine. But when I duplicate the scenes array in glTF file and try to view it in ThreeJS, glTF loader returns an empty group.\r\n\r\nSo this works:\r\n```\r\n\t\"scene\":0,\r\n\t\"scenes\":[\r\n\t\t{\r\n\t\t\t\"name\":\"Scene\",\r\n\t\t\t\"nodes\":[0]\r\n\t\t}\r\n\t],\r\n```\r\n\r\n\r\n... while this doesn't:\r\n```\r\n\t\"scene\":0,\r\n\t\"scenes\":[\r\n\t\t{\r\n\t\t\t\"name\":\"Scene\",\r\n\t\t\t\"nodes\":[0]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"Scene2\",\r\n\t\t\t\"nodes\":[0]\r\n\t\t}\r\n\t],\r\n```\r\n\r\nglTF specification allows referring to the same root nodes from multiple scenes, so I consider this a bug.\r\n\r\n\r\nWhile I have no reason to duplicate scenes, we do sometimes load such models from external sources, and have no practical way to preprocess the files to remove \r\n\r\n### Reproduction steps\r\n\r\n1. Download the attached GLB file\r\n2. Add it to threejs editor, [gltfviewer](https://gltf-viewer.donmccurdy.com/) or any three.js scene\r\n3. Admire the empty scene\r\n\r\n[duplicatescene.zip](https://github.com/mrdoob/three.js/files/14742654/duplicatescene.zip)\r\n\r\n\r\n### Code\r\n\r\n```js\r\n\r\n const loader = new GLTFLoader();\r\n loader.parse(e.target.result, '', gltf => {\r\n            console.log(gltf)\r\n            if (gltf.scene.isGroup && gltf.scene.children.length === 0) {\r\n            \t\tconsole.error('gltf.scene is a group with no children!')\r\n            }\r\n  });\r\n```\r\n\r\n\r\n### Live example\r\n\r\nhttps://jsfiddle.net/jteq8mov/2/\r\n\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nr156 and r162 at least\r\n\r\n### Device\r\n\r\n_No response_\r\n\r\n### Browser\r\n\r\n_No response_\r\n\r\n### OS\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27993/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27993/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27980",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27980/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27980/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27980/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27980",
        "id": 2203907506,
        "node_id": "I_kwDOAAjKyc6DXPWy",
        "number": 27980,
        "title": "BatchedMesh: `bufferSubData` causes lag",
        "user": {
          "login": "marwie",
          "id": 5083203,
          "node_id": "MDQ6VXNlcjUwODMyMDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5083203?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/marwie",
          "html_url": "https://github.com/marwie",
          "followers_url": "https://api.github.com/users/marwie/followers",
          "following_url": "https://api.github.com/users/marwie/following{/other_user}",
          "gists_url": "https://api.github.com/users/marwie/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/marwie/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/marwie/subscriptions",
          "organizations_url": "https://api.github.com/users/marwie/orgs",
          "repos_url": "https://api.github.com/users/marwie/repos",
          "events_url": "https://api.github.com/users/marwie/events{/privacy}",
          "received_events_url": "https://api.github.com/users/marwie/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58673,
            "node_id": "MDU6TGFiZWw1ODY3Mw==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Question",
            "name": "Question",
            "color": "dad9ff",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-03-23T14:41:22Z",
        "updated_at": "2024-07-25T12:26:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nHi, I'm currently stress testing with 20 instances and ~300.000 vertices each. \r\nWe have LODs generated and I reserve the vertex space of LOD 0 for each instance so the float32 buffer ends up being ~ 9.000.000\r\n\r\nWhen LODs switch and setGeometry is called i noticed quite a few big lags which seem to be coming from the call to bufferSubData with the whole buffer.\r\n\r\nMy question is if this is currently expected or if I might be doing something wrong here.\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/5083203/c1ed0536-938b-4fdb-86c1-1c312b3cfd4e)\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/5083203/fd9f3aee-98f3-4148-8e0b-fdbd9e392577)\r\n\r\n\r\n\r\n\r\n### Solution\r\n I would hope this could be optimized by providing the ranges array and the batched mesh could keep track of which ranges have changed. Could this be a possible improvement?\r\n\r\n### Alternatives\r\n\r\nClamp the max size of a BatchedMesh (on my side)\r\n\r\n### Additional context\r\n\r\nhttps://mastodon.gamedev.place/@marwi/112145459503913620",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27980/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27980/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27979",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27979/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27979/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27979/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27979",
        "id": 2203877271,
        "node_id": "I_kwDOAAjKyc6DXH-X",
        "number": 27979,
        "title": "BatchedMesh: add method to check if geometry can be added",
        "user": {
          "login": "marwie",
          "id": 5083203,
          "node_id": "MDQ6VXNlcjUwODMyMDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5083203?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/marwie",
          "html_url": "https://github.com/marwie",
          "followers_url": "https://api.github.com/users/marwie/followers",
          "following_url": "https://api.github.com/users/marwie/following{/other_user}",
          "gists_url": "https://api.github.com/users/marwie/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/marwie/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/marwie/subscriptions",
          "organizations_url": "https://api.github.com/users/marwie/orgs",
          "repos_url": "https://api.github.com/users/marwie/repos",
          "events_url": "https://api.github.com/users/marwie/events{/privacy}",
          "received_events_url": "https://api.github.com/users/marwie/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-03-23T13:19:38Z",
        "updated_at": "2024-03-26T13:19:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nHow should i detect if my BufferGeometry can be added to a BatchedMesh before calling addGeometry?\r\n\r\nI know there's `_validateGeometry` - but this method seems not meant to be part of the public API. I'd need a way to detect if calling addGeometry is safe. \r\n\r\n\r\n### Solution\r\n\r\nExpose `_validateGeometry` - not sure if it should throw however - perhaps it could return an object or string containing a reason for why it can't be added (and then the addGeometry call could still throw) \r\n\r\n### Alternatives\r\n\r\n~~Calling `_validateGeometry`~~ (this is very slow) - but an official API method would be preferred\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27979/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27979/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27926",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27926/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27926/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27926/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27926",
        "id": 2189592197,
        "node_id": "I_kwDOAAjKyc6CgoaF",
        "number": 27926,
        "title": "GLTFLoader: Don't duplicate vertex buffers when loading triangle fans and strips",
        "user": {
          "login": "ericman314",
          "id": 6345617,
          "node_id": "MDQ6VXNlcjYzNDU2MTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6345617?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ericman314",
          "html_url": "https://github.com/ericman314",
          "followers_url": "https://api.github.com/users/ericman314/followers",
          "following_url": "https://api.github.com/users/ericman314/following{/other_user}",
          "gists_url": "https://api.github.com/users/ericman314/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ericman314/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ericman314/subscriptions",
          "organizations_url": "https://api.github.com/users/ericman314/orgs",
          "repos_url": "https://api.github.com/users/ericman314/repos",
          "events_url": "https://api.github.com/users/ericman314/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ericman314/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-03-15T23:04:41Z",
        "updated_at": "2024-05-07T00:18:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nFor some GLTF files like the one in [this discussion](https://discourse.threejs.org/t/excessive-memory-usage-for-gltf-file/62807), there are a large number of primitives which share vertex data.\r\n\r\nThe GLTF loader uses `toTrianglesDrawMode()` to convert triangle fans and triangle strips into regular triangles. The issue is that it clones the geometry, including the entire array buffer:\r\n\r\nhttps://github.com/mrdoob/three.js/blob/e65206d16e59dc9b27fe267999ec5aea19a8991a/examples/jsm/utils/BufferGeometryUtils.js#L846-L852\r\n\r\nThis means that for inefficient files like `oval.gltf` (see link above), it creates nearly 10K copies of the vertex array buffer. The GLTF file has just 1.3 MB of vertex data, but the browser uses about 9 GB just to load the GLTF.\n\n### Solution\n\nI noticed that for primitives that use regular triangles, the array buffers are not duplicated, but are shared among all the geometries that use the same buffer in the GLTF file. As a proof of concept, I modified `toTriangleDrawMode` in this way:\r\n\r\n```js\r\n    // build final geometry\r\n\r\n    const newGeometry = geometry.clone()\r\n    newGeometry.setIndex(newIndices)\r\n    newGeometry.clearGroups()\r\n\r\n    // Replace each attribute's array with the original array, and let GC clean up the new arrays that were just created by .clone()\r\n    for (const key in newGeometry.attributes) {\r\n      newGeometry.attributes[key].array = geometry.attributes[key].array // use original array\r\n    }\r\n\r\n    return newGeometry\r\n```\r\n\r\nAfter cloning the geometry, it resets the new array back to the original, and allows GC to clean up the cloned arrays. Obviously, a better solution would be to avoid cloning the array buffer in the first place. \r\n\r\nThis does not stop Three.js from uploading the array buffers to the GPU separately, so it's still going to waste the same of memory on the GPU, but at least the RAM usage will be much lower. I believe this issue discusses this problem in more detail: https://github.com/mrdoob/three.js/issues/17089\n\n### Alternatives\n\nNaturally, I've tried optimizing the GLTF file using both `gltfpack` and `gltf-transform`. And although both of those do work, they end up taking just as much memory to do the optimization. Reducing the number of primitives (and thus, draw calls) would definitely be the ideal solution, but I cannot control the generation of the GLTF files, since they are uploaded by users on a website.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27926/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27926/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27907",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27907/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27907/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27907/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27907",
        "id": 2181388518,
        "node_id": "I_kwDOAAjKyc6CBVjm",
        "number": 27907,
        "title": "FBX Loader: Blender export with rotation animation will result in error",
        "user": {
          "login": "nookinook",
          "id": 123385613,
          "node_id": "U_kgDOB1q3DQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/123385613?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nookinook",
          "html_url": "https://github.com/nookinook",
          "followers_url": "https://api.github.com/users/nookinook/followers",
          "following_url": "https://api.github.com/users/nookinook/following{/other_user}",
          "gists_url": "https://api.github.com/users/nookinook/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nookinook/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nookinook/subscriptions",
          "organizations_url": "https://api.github.com/users/nookinook/orgs",
          "repos_url": "https://api.github.com/users/nookinook/repos",
          "events_url": "https://api.github.com/users/nookinook/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nookinook/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 620412970,
            "node_id": "MDU6TGFiZWw2MjA0MTI5NzA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Regression",
            "name": "Regression",
            "color": "000000",
            "default": false,
            "description": null
          },
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-03-12T11:30:57Z",
        "updated_at": "2024-05-19T08:29:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nFBX loader does not load models exported from blender when the animation contains a rotation. Only translation works fine. Also export from other DCC (3ds Max) works.  Tested with Blender 3.6 and 3ds Max 2020 and r160\r\n\r\nOrginial thread: https://discourse.threejs.org/t/blender-fbx-imported-in-threejs-error/62357\r\n\r\n@Mugen87 tracked the issue: \"it seems this is a regression in FBXLoader which was introduced in r159 by this PR: https://github.com/mrdoob/three.js/pull/27057 \"\r\n\n\n### Reproduction steps\n\n1. Create a model with simple rotation animation in blender and export to fbx with animation and default settings (or download this example: https://discourse.threejs.org/uploads/short-url/1zwNloZNfCRb2L3vnYk7vt1xYnQ.fbx )\r\n3. Drag`n drop it into threejs editor \r\n4. Error appears \n\n### Code\n\n```js\r\nthree.module.js:42485 Uncaught (in promise) Error: THREE.KeyframeTrack: no keyframes in track named Cube.quaternion\r\n    at new KeyframeTrack (three.module.js:42485:58)\r\n    at new QuaternionKeyframeTrack (three.module.js:42993:1)\r\n    at AnimationParser.generateRotationTrack (FBXLoader.js:2848:37)\r\n    at AnimationParser.generateTracks (FBXLoader.js:2777:31)\r\n    at FBXLoader.js:2748:34\r\n    at Array.forEach (<anonymous>)\r\n    at AnimationParser.addClip (FBXLoader.js:2746:17)\r\n    at AnimationParser.parse (FBXLoader.js:2456:23)\r\n    at FBXTreeParser.parseScene (FBXLoader.js:926:44)\r\n    at FBXTreeParser.parse (FBXLoader.js:171:8)\r\n```\r\n\n\n### Live example\n\nhttps://threejs.org/editor/\r\n> simply dragn drop the fbx file to see the error\n\n### Screenshots\n\n_No response_\n\n### Version\n\n160\n\n### Device\n\n_No response_\n\n### Browser\n\n_No response_\n\n### OS\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27907/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27907/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27905",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27905/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27905/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27905/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27905",
        "id": 2180709696,
        "node_id": "I_kwDOAAjKyc6B-v1A",
        "number": 27905,
        "title": "Add volume calculator for 3d mesh",
        "user": {
          "login": "isalgadof",
          "id": 17342718,
          "node_id": "MDQ6VXNlcjE3MzQyNzE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/17342718?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/isalgadof",
          "html_url": "https://github.com/isalgadof",
          "followers_url": "https://api.github.com/users/isalgadof/followers",
          "following_url": "https://api.github.com/users/isalgadof/following{/other_user}",
          "gists_url": "https://api.github.com/users/isalgadof/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/isalgadof/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/isalgadof/subscriptions",
          "organizations_url": "https://api.github.com/users/isalgadof/orgs",
          "repos_url": "https://api.github.com/users/isalgadof/repos",
          "events_url": "https://api.github.com/users/isalgadof/events{/privacy}",
          "received_events_url": "https://api.github.com/users/isalgadof/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-03-12T04:36:04Z",
        "updated_at": "2024-06-22T08:23:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nThree has no native method to calculate mesh's volumes. \r\n\r\n\n\n### Solution\n\nAdd a method (mesh.volume) to retrieve the calculated volume of the object-mesh.\n\n### Alternatives\n\nPass through a method using an import for ['three-volume' package ](https://www.npmjs.com/package/three-volume)\n\n### Additional context\n\nhttps://www.npmjs.com/package/three-volume",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27905/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27905/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27902",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27902/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27902/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27902/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27902",
        "id": 2179104032,
        "node_id": "I_kwDOAAjKyc6B4n0g",
        "number": 27902,
        "title": "Docs: Japanese version",
        "user": {
          "login": "kaehehehe",
          "id": 77221488,
          "node_id": "MDQ6VXNlcjc3MjIxNDg4",
          "avatar_url": "https://avatars.githubusercontent.com/u/77221488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/kaehehehe",
          "html_url": "https://github.com/kaehehehe",
          "followers_url": "https://api.github.com/users/kaehehehe/followers",
          "following_url": "https://api.github.com/users/kaehehehe/following{/other_user}",
          "gists_url": "https://api.github.com/users/kaehehehe/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/kaehehehe/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/kaehehehe/subscriptions",
          "organizations_url": "https://api.github.com/users/kaehehehe/orgs",
          "repos_url": "https://api.github.com/users/kaehehehe/repos",
          "events_url": "https://api.github.com/users/kaehehehe/events{/privacy}",
          "received_events_url": "https://api.github.com/users/kaehehehe/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 911721310,
            "node_id": "MDU6TGFiZWw5MTE3MjEzMTA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Documentation",
            "name": "Documentation",
            "color": "137d89",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-03-11T13:12:35Z",
        "updated_at": "2024-03-11T15:14:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nHi. I am a Japanese front-end developer. While studying, I found that the Three.js doc wasn’t translated into Japanese. Only the manual part has been translated and the rest has no Japanese translation. Do you mind if I translate the rest in Japanese step by step? If you allow me to do that, I’d like to translate it into Japanese for Japanese people. Thank you.\n\n### Solution\n\nFor there is no japanese translation of Three.js doc, so I'd like to translate the doc into Japanese.\n\n### Alternatives\n\nTranslate the doc into Japanese step by step.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27902/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27902/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27893",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27893/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27893/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27893/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27893",
        "id": 2177434627,
        "node_id": "I_kwDOAAjKyc6ByQQD",
        "number": 27893,
        "title": "playground: Plugging 'greater than' node into color socket of standard material leads to crash",
        "user": {
          "login": "abc013",
          "id": 21260178,
          "node_id": "MDQ6VXNlcjIxMjYwMTc4",
          "avatar_url": "https://avatars.githubusercontent.com/u/21260178?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/abc013",
          "html_url": "https://github.com/abc013",
          "followers_url": "https://api.github.com/users/abc013/followers",
          "following_url": "https://api.github.com/users/abc013/following{/other_user}",
          "gists_url": "https://api.github.com/users/abc013/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/abc013/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/abc013/subscriptions",
          "organizations_url": "https://api.github.com/users/abc013/orgs",
          "repos_url": "https://api.github.com/users/abc013/repos",
          "events_url": "https://api.github.com/users/abc013/events{/privacy}",
          "received_events_url": "https://api.github.com/users/abc013/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5167487962,
            "node_id": "LA_kwDOAAjKyc8AAAABNAGb2g",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Nodes",
            "name": "Nodes",
            "color": "B0F5EC",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "sunag",
          "id": 502810,
          "node_id": "MDQ6VXNlcjUwMjgxMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sunag",
          "html_url": "https://github.com/sunag",
          "followers_url": "https://api.github.com/users/sunag/followers",
          "following_url": "https://api.github.com/users/sunag/following{/other_user}",
          "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
          "organizations_url": "https://api.github.com/users/sunag/orgs",
          "repos_url": "https://api.github.com/users/sunag/repos",
          "events_url": "https://api.github.com/users/sunag/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sunag/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "sunag",
            "id": 502810,
            "node_id": "MDQ6VXNlcjUwMjgxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunag",
            "html_url": "https://github.com/sunag",
            "followers_url": "https://api.github.com/users/sunag/followers",
            "following_url": "https://api.github.com/users/sunag/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
            "organizations_url": "https://api.github.com/users/sunag/orgs",
            "repos_url": "https://api.github.com/users/sunag/repos",
            "events_url": "https://api.github.com/users/sunag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunag/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-03-09T22:56:33Z",
        "updated_at": "2024-03-11T03:08:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nError message:\r\n```\r\nTHREE.WebGLProgram: Shader Error 0 - VALIDATE_STATUS false\r\n\r\nMaterial Name: \r\nMaterial Type: MeshStandardNodeMaterial\r\n\r\nProgram Info Log: Must have a compiled fragment shader attached:\r\nSHADER_INFO_LOG:\r\nERROR: 0:1526: 'greaterThan' : no matching overloaded function found\r\n\r\nFRAGMENT\r\n\r\nERROR: 0:1526: 'greaterThan' : no matching overloaded function found\r\n\r\n  1521: \r\n  1522: \r\n  1523: \tvec3 TransformedNormalView = normalize( nodeVarying0 );\r\n  1524: \r\n  1525: \t\r\n> 1526: \tvec4 diffuseColor = vec4( greaterThan( nodeUniform1, nodeUniform2 ) ); diffuseColor.a *= opacity;\r\n  1527: #if 0 > 0\r\n  1528: \tvec4 plane;\r\n  1529: \t#ifdef ALPHA_TO_COVERAGE\r\n  1530: \t\tfloat distanceToPlane, distanceGradient;\r\n  1531: \t\tfloat clipOpacity = 1.0;\r\n  1532: \t\t[three.module.js:20276:14](https://threejs.org/build/three.module.js)\r\n  ```\r\n  \r\n  This also affect all other logic operators.\r\n\r\n### Reproduction steps\r\n\r\nRebuild the following node graph in the three.js playground:\r\n![image](https://github.com/mrdoob/three.js/assets/21260178/004442d1-a093-4a7c-ad9d-b1f000a8835c)\r\n\r\n\r\n### Code\r\n\r\nNo code required.\r\n\r\n### Live example\r\n\r\nOpen this [example.json](https://github.com/mrdoob/three.js/files/14548050/example.json) in the playground.\r\n\r\n### Version\r\n\r\nr162\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome, Firefox\r\n\r\n### OS\r\n\r\nLinux",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27893/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27893/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27887",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27887/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27887/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27887/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27887",
        "id": 2176278299,
        "node_id": "I_kwDOAAjKyc6Bt18b",
        "number": 27887,
        "title": "Allow controlling traverse flow",
        "user": {
          "login": "wlinna",
          "id": 1473454,
          "node_id": "MDQ6VXNlcjE0NzM0NTQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1473454?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/wlinna",
          "html_url": "https://github.com/wlinna",
          "followers_url": "https://api.github.com/users/wlinna/followers",
          "following_url": "https://api.github.com/users/wlinna/following{/other_user}",
          "gists_url": "https://api.github.com/users/wlinna/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/wlinna/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/wlinna/subscriptions",
          "organizations_url": "https://api.github.com/users/wlinna/orgs",
          "repos_url": "https://api.github.com/users/wlinna/repos",
          "events_url": "https://api.github.com/users/wlinna/events{/privacy}",
          "received_events_url": "https://api.github.com/users/wlinna/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-03-08T15:38:42Z",
        "updated_at": "2024-03-10T09:22:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nRight now there's no way to prevent `traverse` from traversing the whole tree (save for throwing an exception). However, often it would be useful to prevent processing the child nodes, or even rest of the hierarchy.\r\n\r\n### Solution\r\n\r\nMake traverse and the rest of the family respect special return values. The most important (in my opinion) would be the ability to ignore the children. For example:\r\n```\r\n// Somewhere in Three.js code. Could be replaced with an enum-style definition \r\nconst IGNORE_CHILDREN = new Symbol('ignore_children');\r\nconst HALT_TRAVERSE = new Symbol('halt_traverse');\r\n\r\n// I didn't check this for mistakes, but the idea should become clear\r\n\ttraverse( callback ) {\r\n\r\n\t\tconst controlFlowResult = callback( this );\r\n\r\n                if (controlFlowResult === IGNORE_CHILDREN || controlFlowResult === HALT_TRAVERSE ) {\r\n\r\n                      return controlFlowResult;\r\n\r\n                } \r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst childFlowResult = children[ i ].traverse( callback );\r\n\r\n                        if (childFlowResult === HALT_TRAVERSE) {\r\n\r\n                             return HALT_TRAVERSE;\r\n\r\n                        }\r\n\r\n\t\t}\r\n\r\n\t}\r\n```\r\n\r\nExamples how a user might use it:\r\n\r\nFind a specific node with some property. Then stop. \r\n```\r\n// \r\nlet oneSpecimenB;\r\nmyModel.traverse(node => {\r\n           if (node.userData.isB) {\r\n               oneSpecimentB = node;\r\n                return HALT_TRAVERSE;\r\n           }\r\n});\r\n```\r\n\r\nRun code for all nodes except for all the descendants (and the node itself)  of the nodes we want to ignore\r\n```\r\nmyModel.traverse(node => {\r\n           if (node.userData.ignoreChildren) {\r\n                // Optionally run operations here before returning\r\n                return IGNORE_CHILDREN;\r\n           }\r\n\r\n          // Do operations for others\r\n});\r\n```\r\n\r\n\r\n### Alternatives\r\n\r\nFor users, the alternatives are\r\n\r\n-  Set an outside variable to a value from the callback to not do anything. For example\r\n```\r\nlet ingoreChildren = false;\r\n\r\nmyModel.traverse(node => {\r\n           if (node.userData.ignoreChildren) {\r\n               ignoreChildren = true;\r\n                return;\r\n           }\r\n\r\n          // Do operations for others\r\n});\r\n```\r\n\r\nThis will fail after all the descendants have been traversed and the execution returns to the siblings / parent.\r\n\r\n- Use visibility in conjunction with `traverseVisible`. The user  would run the risk of messing up visibility and it's not convenient anyway, because it would force the user to traverse the hierarchy first to change it.\r\n\r\n- `getObjectByProperty` only works for the direct properties of nodes, but not for `userData` for example. And since it's based on a simple equality comparison, it's generally less useful than a predicate based search.\r\n\r\n- Implement your own `traverse`. The user would just duplicate the functionality of `traverse`\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27887/reactions",
          "total_count": 3,
          "+1": 3,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27887/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27832",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27832/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27832/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27832/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27832",
        "id": 2156198749,
        "node_id": "I_kwDOAAjKyc6AhPtd",
        "number": 27832,
        "title": "Docs: Conversion from custom HTML generated documentation to regular Markdown generated documentation",
        "user": {
          "login": "AxiomeCG",
          "id": 18304870,
          "node_id": "MDQ6VXNlcjE4MzA0ODcw",
          "avatar_url": "https://avatars.githubusercontent.com/u/18304870?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AxiomeCG",
          "html_url": "https://github.com/AxiomeCG",
          "followers_url": "https://api.github.com/users/AxiomeCG/followers",
          "following_url": "https://api.github.com/users/AxiomeCG/following{/other_user}",
          "gists_url": "https://api.github.com/users/AxiomeCG/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AxiomeCG/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AxiomeCG/subscriptions",
          "organizations_url": "https://api.github.com/users/AxiomeCG/orgs",
          "repos_url": "https://api.github.com/users/AxiomeCG/repos",
          "events_url": "https://api.github.com/users/AxiomeCG/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AxiomeCG/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 911721310,
            "node_id": "MDU6TGFiZWw5MTE3MjEzMTA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Documentation",
            "name": "Documentation",
            "color": "137d89",
            "default": false,
            "description": ""
          },
          {
            "id": 3588632287,
            "node_id": "LA_kwDOAAjKyc7V5i7f",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Manual",
            "name": "Manual",
            "color": "5EADB4",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-02-27T10:14:05Z",
        "updated_at": "2024-02-27T17:19:00Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nToday the documentation is generated from custom tags in HTML, and makes it difficult to contribute to it (lot of friction). The documentation is already a topic that is a pain for most of the devs. It is often the neglected part, I think it would benefit to reduce the friction by returning to industry standards and common tooling.\r\n\r\nUsage of markdown would benefit by being able to generate documentation with whatever we want, (like docusaurus, ...)\r\n\r\nWe would access to many new automatic features like table of contents, \"Edit this page\" type of buttons to be able to encourage the contribution. \r\nWe could go further by supporting MDX in the future, to help craft wonderful documentation. It would be opening doors to new tools from there. \r\n\r\nThe discussion is not clear in my head if we should go on a different repository for the documentation, or keep it with the main repository. \r\n\r\nThree.js is very popular among the 3D developers versus the rest of the frameworks like Babylon and stuffs. But the documentation does not live up to the popularity of our beloved lib, in my opinion.\r\nIf we take react-three-fiber, it takes advantages of the three.js documentation, by referencing it. So there is a whole ecosystem that would really benefit from a clearer, cleaner, modern documentation.\r\n\r\n\r\nAlso, I would take advantage of this modernisation to describe the documentation using Typescript convention of typing. This would enable syntax highlighting based on that for free, even if the underlying implementation is javascript. We would just use the ts code fences available with markdown.\n\n### Solution\n\nI began to work on a python script to convert our custom HTML to markdown files and took docusaurus as a test bed for this documentation. \r\n\r\nI used a separate repository to do so, just as a proof of concept. \r\nI added the typescript code fences from markdown to explicit the typing on the method and properties of each pages.\r\n\r\nYou can see a demo here : https://threejs-docs-markdown.vercel.app/docs/en/animation/AnimationAction\r\nLink to the codebase : https://github.com/AxiomeCG/threejs-docs-reloaded\r\n\r\n\r\nBasically the script is parsing the HTML and producing a markdown file from it. It converts most of the custom elements like [property: ...], [method: ...] and `<code>` tags.\r\n\r\nThe structure we know for the folders would be the same. \r\n\r\nThe script is working by giving a folder in input and it produces an equivalent output by preserving the folder hierarchy and outputting the markdown equivalent files. I need to test on internalization files from other folders different from the `en` one. But as soon as it respects the same linking and convention on the custom elements (which I assumed true due to the automatic generation of the actual docs), I think it would not be troublesome. \n\n### Alternatives\n\nWe should examine the best alternative to a markdown system. Do we want to keep on going with this adhoc system or get back on an industry standard ?\n\n### Additional context\n\nThere is some of the things that are known broken like linking in the current script. I just submit the first beta result as a proof of concept to see if it is validated to be continued, and not wasting time on a tool that would not be well received ! :)",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27832/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 1,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27832/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27779",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27779/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27779/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27779/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27779",
        "id": 2142963527,
        "node_id": "I_kwDOAAjKyc5_uwdH",
        "number": 27779,
        "title": "PositionalAudio doesnt work on VisionOS in VR",
        "user": {
          "login": "marwie",
          "id": 5083203,
          "node_id": "MDQ6VXNlcjUwODMyMDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5083203?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/marwie",
          "html_url": "https://github.com/marwie",
          "followers_url": "https://api.github.com/users/marwie/followers",
          "following_url": "https://api.github.com/users/marwie/following{/other_user}",
          "gists_url": "https://api.github.com/users/marwie/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/marwie/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/marwie/subscriptions",
          "organizations_url": "https://api.github.com/users/marwie/orgs",
          "repos_url": "https://api.github.com/users/marwie/repos",
          "events_url": "https://api.github.com/users/marwie/events{/privacy}",
          "received_events_url": "https://api.github.com/users/marwie/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 609335156,
            "node_id": "MDU6TGFiZWw2MDkzMzUxNTY=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Browser%20Issue",
            "name": "Browser Issue",
            "color": "d93f0b",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2024-02-19T18:44:06Z",
        "updated_at": "2024-03-01T21:16:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nPositionlAudio is not working on vision OS (simulator) when entering VR\n\n### Reproduction steps\n\n1. Open webaudio-orientation example and [add the VR button](https://github.com/needle-tools/three.js/commit/1064ee0fb487b2b0e208b5b1d6578473c6e4b137)\r\n2. Start server\r\n3. Open in Safari on VisionOS or Simulator (make sure you have WebXR flags enabled)\r\n4. Click Play - note audio is starting\r\n5. Click Enter VR button - note audio is not playing\r\n\n\n### Code\n\nhttps://github.com/needle-tools/three.js/commit/1064ee0fb487b2b0e208b5b1d6578473c6e4b137\n\n### Live example\n\nhttps://uploads.needle.tools/bugreports/threejs%20positional%20audio/examples/webaudio_orientation\n\n### Screenshots\n\n_No response_\n\n### Version\n\n160\n\n### Device\n\nHeadset\n\n### Browser\n\nSafari\n\n### OS\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27779/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27779/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27760",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27760/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27760/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27760/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27760",
        "id": 2140162609,
        "node_id": "I_kwDOAAjKyc5_kEox",
        "number": 27760,
        "title": "Documentation: Suggest common or required texture color spaces",
        "user": {
          "login": "donmccurdy",
          "id": 1848368,
          "node_id": "MDQ6VXNlcjE4NDgzNjg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1848368?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/donmccurdy",
          "html_url": "https://github.com/donmccurdy",
          "followers_url": "https://api.github.com/users/donmccurdy/followers",
          "following_url": "https://api.github.com/users/donmccurdy/following{/other_user}",
          "gists_url": "https://api.github.com/users/donmccurdy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/donmccurdy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/donmccurdy/subscriptions",
          "organizations_url": "https://api.github.com/users/donmccurdy/orgs",
          "repos_url": "https://api.github.com/users/donmccurdy/repos",
          "events_url": "https://api.github.com/users/donmccurdy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/donmccurdy/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 911721310,
            "node_id": "MDU6TGFiZWw5MTE3MjEzMTA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Documentation",
            "name": "Documentation",
            "color": "137d89",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-17T14:54:38Z",
        "updated_at": "2024-02-18T04:08:35Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nIn the [color management documentation](https://threejs.org/docs/#manual/en/introduction/Color-management), under \"input color space\", we give general guidelines on when to use different color spaces for different textures.\r\n\r\n> - **Color textures:** PNG or JPEG [Textures](https://threejs.org/docs/index.html#api/en/textures/Texture) containing color information (like .map or .emissiveMap) use the closed domain sRGB color space, and must be annotated with texture.colorSpace = SRGBColorSpace. Formats like OpenEXR (sometimes used for .envMap or .lightMap) use the Linear-sRGB color space indicated with texture.colorSpace = LinearSRGBColorSpace, and may contain values in the open domain [0,∞].\r\n> - **Non-color textures:** Textures that do not store color information (like .normalMap or .roughnessMap) do not have an associated color space, and generally use the (default) texture annotation of texture.colorSpace = NoColorSpace. In rare cases, non-color data may be represented with other nonlinear encodings for technical reasons.\r\n\r\nWhile that's good background for users to understand, not every user is going to read through that page, and I think we could do better at providing in-context help in the Material documentation.\r\n\r\n### Solution\r\n\r\nOn the documentation page for each Material, for each of the `.map`, `.normalMap`, ... and other texture property descriptions, add a sentence describing which colorspaces to use. In some cases there's a single correct choice, in other cases multiple choices are valid but one choice is more common than others if you're not sure what to use. \r\n\r\nSince there are a lot of these properties, I'd like to get agreement on the wording before opening that PR. Suggestions, for a couple example textures, below;\r\n\r\n***\r\n\r\n.[map](https://threejs.org/docs/index.html#api/en/materials/MeshStandardMaterial.map) : [Texture](https://threejs.org/docs/index.html#api/en/textures/Texture)\r\nThe color map. May optionally include an alpha channel, typically combined with [.transparent](https://threejs.org/docs/index.html#api/en/materials/Material.transparent) or [.alphaTest](https://threejs.org/docs/index.html#api/en/materials/Material.alphaTest). Default is null. The texture map color is modulated by the diffuse [.color](https://threejs.org/docs/index.html#api/en/materials/MeshStandardMaterial.color). **This texture contains color, and is usually assigned [.colorSpace](https://threejs.org/docs/?q=texture#api/en/textures/Texture.colorSpace) = [SRGBColorSpace](https://threejs.org/docs/index.html#api/en/constants/Textures), but other color spaces are also supported.**\r\n\r\n.[emissiveMap](https://threejs.org/docs/index.html#api/en/materials/MeshStandardMaterial.emissiveMap) : [Texture](https://threejs.org/docs/index.html#api/en/textures/Texture)\r\nSet emissive (glow) map. Default is null. The emissive map color is modulated by the emissive color and the emissive intensity. If you have an emissive map, be sure to set the emissive color to something other than black. **This texture contains color, and is usually assigned [.colorSpace](https://threejs.org/docs/?q=texture#api/en/textures/Texture.colorSpace) = [SRGBColorSpace](https://threejs.org/docs/index.html#api/en/constants/Textures), but other color spaces are also supported.**\r\n\r\n.[normalMap](https://threejs.org/docs/index.html#api/en/materials/MeshStandardMaterial.normalMap) : [Texture](https://threejs.org/docs/index.html#api/en/textures/Texture)\r\nThe texture to create a normal map. The RGB values affect the surface normal for each pixel fragment and change the way the color is lit. Normal maps do not change the actual shape of the surface, only the lighting. In case the material has a normal map authored using the left handed convention, the y component of normalScale should be negated to compensate for the different handedness. **This texture contains non-color data, and must be assigned [.colorSpace](https://threejs.org/docs/?q=texture#api/en/textures/Texture.colorSpace) = [NoColorSpace](https://threejs.org/docs/index.html#api/en/constants/Textures).**\r\n\r\n***\r\n\r\n### Alternatives\r\n\r\n- list all texture color spaces in the color management guide?\r\n- https://github.com/mrdoob/three.js/pull/25857\r\n\r\n### Additional context\r\n\r\nDoes it sound OK to add wording about color spaces, as shown in bold above, to each material texture's documentation?\r\n\r\n/cc @WestLangley ",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27760/reactions",
          "total_count": 3,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27760/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27756",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27756/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27756/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27756/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27756",
        "id": 2138892418,
        "node_id": "I_kwDOAAjKyc5_fOiC",
        "number": 27756,
        "title": "Frustum: IntersectsBox function can produce incorrect results",
        "user": {
          "login": "gkjohnson",
          "id": 734200,
          "node_id": "MDQ6VXNlcjczNDIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/734200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkjohnson",
          "html_url": "https://github.com/gkjohnson",
          "followers_url": "https://api.github.com/users/gkjohnson/followers",
          "following_url": "https://api.github.com/users/gkjohnson/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkjohnson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkjohnson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkjohnson/subscriptions",
          "organizations_url": "https://api.github.com/users/gkjohnson/orgs",
          "repos_url": "https://api.github.com/users/gkjohnson/repos",
          "events_url": "https://api.github.com/users/gkjohnson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkjohnson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58674,
            "node_id": "MDU6TGFiZWw1ODY3NA==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Bug",
            "name": "Bug",
            "color": "b60205",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/82",
          "html_url": "https://github.com/mrdoob/three.js/milestone/82",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/82/labels",
          "id": 11357506,
          "node_id": "MI_kwDOAAjKyc4ArU1C",
          "number": 82,
          "title": "r169",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 61,
          "closed_issues": 150,
          "state": "open",
          "created_at": "2024-07-25T08:18:33Z",
          "updated_at": "2024-09-17T16:29:12Z",
          "due_on": "2024-09-25T07:00:00Z",
          "closed_at": null
        },
        "comments": 4,
        "created_at": "2024-02-16T15:52:31Z",
        "updated_at": "2024-08-30T06:40:01Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe Frustum.intersectsBox function can produce a false positive in some cases where a box outside the frustum is large enough and positioned such that it crosses multiple frustum planes and therefore is not marked as separated by a single plane. [This article](https://iquilezles.org/articles/frustumcorrect/) suggests that checking whether the planes of the box separate the shapes will provide a more consistent result (though still not perfect in all cases). In order to do that we'd likely need to store or compute the edge points of the frustum.\r\n\r\nThis is related to [3DTilesRendererJS](https://github.com/NASA-AMMOS/3DTilesRendererJS). We were using an OBB / Frustum intersect function based on the three.js AABB implementation and were seeing that a lot of tiles were visible despite being a large distance from the camera.\r\n\r\ncc @WestLangley \r\n\r\n### Reproduction steps\r\n\r\nConfigure a box and frustum such that they produce the error case (See jsfiddle)\r\n\r\n### Code\r\n\r\nSee jsfiddle.\r\n\r\n### Live example\r\n\r\nhttps://jsfiddle.net/89rtuaqp/2/\r\n\r\nThe box is colored red if it intersects the visualized camera frustum.\r\n\r\n### Screenshots\r\n\r\n<img width=\"310\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/734200/4f2b7138-0fdb-4ee7-8f8b-1ee22fd08297\">\r\n\r\n\r\n### Version\r\n\r\n161\r\n\r\n### Device\r\n\r\n_No response_\r\n\r\n### Browser\r\n\r\n_No response_\r\n\r\n### OS\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27756/reactions",
          "total_count": 3,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27756/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27727",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27727/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27727/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27727/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27727",
        "id": 2128821873,
        "node_id": "I_kwDOAAjKyc5-4z5x",
        "number": 27727,
        "title": "XRButton defaults to `local-floor`",
        "user": {
          "login": "michaelthatsit",
          "id": 19628643,
          "node_id": "MDQ6VXNlcjE5NjI4NjQz",
          "avatar_url": "https://avatars.githubusercontent.com/u/19628643?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/michaelthatsit",
          "html_url": "https://github.com/michaelthatsit",
          "followers_url": "https://api.github.com/users/michaelthatsit/followers",
          "following_url": "https://api.github.com/users/michaelthatsit/following{/other_user}",
          "gists_url": "https://api.github.com/users/michaelthatsit/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/michaelthatsit/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/michaelthatsit/subscriptions",
          "organizations_url": "https://api.github.com/users/michaelthatsit/orgs",
          "repos_url": "https://api.github.com/users/michaelthatsit/repos",
          "events_url": "https://api.github.com/users/michaelthatsit/events{/privacy}",
          "received_events_url": "https://api.github.com/users/michaelthatsit/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-02-11T04:03:07Z",
        "updated_at": "2024-02-15T14:42:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nRecently switched from ARButton to XRButton and noticed all our content is initializing on the floor, despite setting `local` as a required option. \n\n### Reproduction steps\n\n1. create a scene with XRButton\r\n2. create an object and set it to 0, 0, 0\r\n3. enter XR\r\n\n\n### Code\n\n```js\r\nthis.XRButton = XRButton.createButton(this.renderer, {\r\n    requiredFeatures: ['local']\r\n});\r\n```\n\n### Live example\n\n* [XRButton issue](https://create.mrjs.io/view/xrbutton-issue-TEJZwOF//)\r\n\n\n### Screenshots\n\n<img width=\"1136\" alt=\"Screenshot 2024-02-10 at 8 02 37 PM\" src=\"https://github.com/mrdoob/three.js/assets/19628643/0249a571-ecd0-440c-8276-c41846aa85a5\">\r\n\n\n### Version\n\nr161\n\n### Device\n\nHeadset\n\n### Browser\n\nChrome\n\n### OS\n\nAndroid",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27727/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27727/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27716",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27716/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27716/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27716/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27716",
        "id": 2127234903,
        "node_id": "I_kwDOAAjKyc5-ywdX",
        "number": 27716,
        "title": "Scene: Lighting does not work if environment map has dimensions < 64 pixels",
        "user": {
          "login": "gkjohnson",
          "id": 734200,
          "node_id": "MDQ6VXNlcjczNDIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/734200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkjohnson",
          "html_url": "https://github.com/gkjohnson",
          "followers_url": "https://api.github.com/users/gkjohnson/followers",
          "following_url": "https://api.github.com/users/gkjohnson/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkjohnson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkjohnson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkjohnson/subscriptions",
          "organizations_url": "https://api.github.com/users/gkjohnson/orgs",
          "repos_url": "https://api.github.com/users/gkjohnson/repos",
          "events_url": "https://api.github.com/users/gkjohnson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkjohnson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/82",
          "html_url": "https://github.com/mrdoob/three.js/milestone/82",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/82/labels",
          "id": 11357506,
          "node_id": "MI_kwDOAAjKyc4ArU1C",
          "number": 82,
          "title": "r169",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 61,
          "closed_issues": 150,
          "state": "open",
          "created_at": "2024-07-25T08:18:33Z",
          "updated_at": "2024-09-17T16:29:12Z",
          "due_on": "2024-09-25T07:00:00Z",
          "closed_at": null
        },
        "comments": 11,
        "created_at": "2024-02-09T14:14:30Z",
        "updated_at": "2024-08-30T06:40:01Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nLighting does not work at all when setting an environment map smaller than 64x64 to `Scene.environment`. Creating a small map on the fly is useful when generating basic, soft gradient lighting. I suspect this may be related to PMREMGenerator. The texture still works if it's set as a background.\r\n\r\n| 64x64 | 63x63 |\r\n|---|---|\r\n| <img width=\"350\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/734200/696debb9-3290-4916-ae92-8560460c8648\"> | <img width=\"350\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/734200/e07a3d8a-75a9-418d-bdec-b9a0656cd3e3\"> |\r\n\r\n\r\n\r\n### Reproduction steps\r\n\r\n1. Create a DataTexture with dimensions of 63x63 with white data\r\n2. Set mapping to \"EquirectangularReflectionMapping\"\r\n3. Lighting does not work\r\n\r\n\r\n### Code\r\n\r\n```js\r\nconst dim = 64; // NOTE: Lighting does not work if this value is changed to < 64\r\nconst tex = new THREE.DataTexture( new Uint8Array( dim * dim * 4 ).fill( 255 ), dim, dim );\r\ntex.mapping = THREE.EquirectangularReflectionMapping;\r\ntex.needsUpdate = true;\r\nscene.environment = tex;\r\n```\r\n\r\n\r\n### Live example\r\n\r\nhttps://jsfiddle.net/y48Lqt1m/\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nr161\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27716/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27716/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27701",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27701/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27701/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27701/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27701",
        "id": 2122729471,
        "node_id": "I_kwDOAAjKyc5-hkf_",
        "number": 27701,
        "title": "Material: It's currently not possible to determine if a material failed to compile",
        "user": {
          "login": "gkjohnson",
          "id": 734200,
          "node_id": "MDQ6VXNlcjczNDIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/734200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkjohnson",
          "html_url": "https://github.com/gkjohnson",
          "followers_url": "https://api.github.com/users/gkjohnson/followers",
          "following_url": "https://api.github.com/users/gkjohnson/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkjohnson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkjohnson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkjohnson/subscriptions",
          "organizations_url": "https://api.github.com/users/gkjohnson/orgs",
          "repos_url": "https://api.github.com/users/gkjohnson/repos",
          "events_url": "https://api.github.com/users/gkjohnson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkjohnson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-02-07T10:46:01Z",
        "updated_at": "2024-02-16T13:23:29Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\n\nIn working on [three-gpu-pathtracer](https://github.com/gkjohnson/three-gpu-pathtracer/) I've frequently run into platform-specific shader compilation issues that cause the shader to crash even though all syntax is correct. On DirectX, for example, a shader will fail to compile if an array of float parameters is passed to a function (see https://github.com/gkjohnson/three-gpu-pathtracer/pull/350). In order to prevent crashes for the user in these unforeseeable scenarios I'd like to be able programmatically determine whether a shader was able to compile and enable the application to display a note. This isn't currently possible. I'm planning to use `compileAsync` for the detection since compilation for such a large shader can be extremely slow on Windows.\r\n\r\nHere's a list of some of the behavior that's not conducive to this:\r\n\r\n- You cannot provide multiple `onShaderError` callbacks so any helper functions provided by a library must overwrite existing functions which is error prone.\r\n- `onShaderError` does not provide any information about which mesh and material caused the failure.\r\n- When calling \"compile\" or \"compileAsync\" while `checkShaderErrors` is true, no errors are checked. The shader error is only fired on first use which is already too late.\r\n- As far as I know it's not possible to get the WebGLProgram or Vertex / FragmentShader objects associated with a Material / Mesh whether they've been compiled successfully or not.\n\n### Solution\n\n- Provide a function to retrieve the Vertex / Fragment Shaders and program associated with a Mesh and Material to check the compilation status (ideal because there's no need to set the flag to check shader errors)\r\n- Fire an \"on error\" and / or \"on compile\" event on the Material and / or itself with both material and object as arguments so the compilation status can be checked.\n\n### Alternatives\n\nNone afaik\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27701/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27701/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27664",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27664/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27664/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27664/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27664",
        "id": 2114045817,
        "node_id": "I_kwDOAAjKyc5-Acd5",
        "number": 27664,
        "title": "WebXR: Make Depth sensing occlusion tunable",
        "user": {
          "login": "michaelthatsit",
          "id": 19628643,
          "node_id": "MDQ6VXNlcjE5NjI4NjQz",
          "avatar_url": "https://avatars.githubusercontent.com/u/19628643?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/michaelthatsit",
          "html_url": "https://github.com/michaelthatsit",
          "followers_url": "https://api.github.com/users/michaelthatsit/followers",
          "following_url": "https://api.github.com/users/michaelthatsit/following{/other_user}",
          "gists_url": "https://api.github.com/users/michaelthatsit/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/michaelthatsit/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/michaelthatsit/subscriptions",
          "organizations_url": "https://api.github.com/users/michaelthatsit/orgs",
          "repos_url": "https://api.github.com/users/michaelthatsit/repos",
          "events_url": "https://api.github.com/users/michaelthatsit/events{/privacy}",
          "received_events_url": "https://api.github.com/users/michaelthatsit/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-02-02T04:42:22Z",
        "updated_at": "2024-02-02T09:59:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nWe have use cases in mrjs that require we dynamically un-occlude parts of the environment. \r\n\r\nCurrently, without depth-sensing, we create plane meshes for the walls and disable colorWrite and set their rendering order to a value ahead of all other objects, then set visible to false when we want to see beyond them. see the screenshot below for an example\r\n\r\n<img width=\"1120\" alt=\"Screenshot 2024-01-30 at 4 13 14 PM\" src=\"https://github.com/mrdoob/three.js/assets/19628643/d6b103bf-1fe6-4fcb-af5f-1d94e3e31c60\">\r\n\r\n\r\nWe'd like to be able to benefit from the better body occlusion provided by depth-sensing, without inhibiting our ability to achieve the above. \n\n### Solution\n\nAn API to tune depth-sensing occlusion by distance. something like\r\n\r\n```js\r\nrenderer.xr.depthSensing.near = 0.1\r\nrenderer.xr.depthSensing.far = 1\r\n```\n\n### Alternatives\n\nprovide depth-sensing data without enabling occlusion by default.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27664/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27664/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27658",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27658/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27658/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27658/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27658",
        "id": 2110632780,
        "node_id": "I_kwDOAAjKyc59zbNM",
        "number": 27658,
        "title": "Minor Improvements to Lensflare Module",
        "user": {
          "login": "sciencecompliance",
          "id": 51130589,
          "node_id": "MDQ6VXNlcjUxMTMwNTg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/51130589?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sciencecompliance",
          "html_url": "https://github.com/sciencecompliance",
          "followers_url": "https://api.github.com/users/sciencecompliance/followers",
          "following_url": "https://api.github.com/users/sciencecompliance/following{/other_user}",
          "gists_url": "https://api.github.com/users/sciencecompliance/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sciencecompliance/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sciencecompliance/subscriptions",
          "organizations_url": "https://api.github.com/users/sciencecompliance/orgs",
          "repos_url": "https://api.github.com/users/sciencecompliance/repos",
          "events_url": "https://api.github.com/users/sciencecompliance/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sciencecompliance/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-31T17:40:16Z",
        "updated_at": "2024-02-02T16:10:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nAfter using the `Lensflare` module a few times now and running into its limitations, I think there are a few small improvements--one I might even consider a bug fix--that may be prudent for future releases.\r\n\r\nThe \"bug\", so-to-speak, is in the vertex shader for the `LensflareElement` object.  The `gl_Position` variable uses the z-coordinate of the `screenPosition` uniform.  This means that sometimes the lens flare can be rendered behind objects in the scene, which doesn't really make sense since lens flares are optical effects that occur in the camera or eye.\r\n\r\nThe other issues are related to the modulation of the lens flare's size and opacity.  As it stands now, there is currently no way to change the size of the flare depending on conditions within the scene (i.e. the distance of the camera from the light source).  The case I ran into where this was a problem for me was rendering the Sun at different astronomical distances and wanting to decrease the size of the glare centered on the Sun in the animation loop depending on Sun-camera distance.  This would also be relevant to glare effects on more terrestrial scales for objects like streetlights, etc...\r\n\r\nSimilar to modulating size, one might also want to modulate opacity of lens flare elements based on the distance to the camera in a manner independent of size modulation.  A good example of this is a lens flare that is produced by the optics when light bounces around inside a camera lens.  Its 'size' as it is defined in three.js would not change based on distance.  The 'size' in screen space is based on the internals of the camera lens and the angle of the incident light.  As you move further from the light source, however, you might want to modulate the intensity (via opacity) of such a lensflare element.\r\n\r\n### Solution\r\n\r\nWith the exception of the \"bug fix\", the changes I'd like to make would change nothing from a three.js developer's perspective by default.  People who have used the API previously and are comfortable with the way it currently works would see no difference (aside from proper z-placement in clip space).  The proposed changes are enumerated below:\r\n \r\n1. Change the z-value of the `gl_Position` variable in the `LensflareElement` vertex shader from `screenPosition.z` to `-1.0`.\r\n\r\n2. Add property to `Lensflare` object that exposes scale controls to the developer after creating a new `Lensflare` object and change code on what is currently Line 251 of the module to multiply the current product by this new scale property.  Also, set size/scale property to default value of 1.\r\n\r\n3. Related to item 2, each `LensflareElement` would have a boolean parameter added to its constructor that controls whether the size/scale is affected by the change of the scale/size property of the `Lensflare` object.  This could either be `true` or `false` by default since it would only affect usage if the developer decides to mess with the scale property.  I would lean towards `true` by default so that messing around with the `Lensflare` object's size parameter by default modulates the size of the elements.  This seems like the preferable behavior.\r\n\r\n4. Add property to `Lensflare` object that allows the opacity to be modulated in a manner that can be individually toggled between `LensflareElement` objects added to the `LensFlare` object.\r\n\r\n5. Similar to item 3, add boolean parameter to constructor for `LensflareElement` object that determines whether changes to the new `Lensflare` opacity-modulation property affect the lens flare element.  Default to `true`.  This would include changes to the `LensflareElement` fragment shader that includes a new uniform and line to incorporate the opacity adjustment.\r\n\r\n### Alternatives\r\n\r\nAn alternative would be to keep current functionality aside from the aforementioned \"bug fix\" and leave extended functionality for other developers/libraries; however, I think the proposed functionalities are fairly basic improvements considering how deep the rabbit hole goes for this topic and for how many use cases these changes would be valuable.  It still wouldn't have support for modulating size/opacity/color based on translucent occluding materials, which is something I've needed in the past but is understandably a more complex problem than probably needs to be addressed in the basic three.js lens flare module.\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27658/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27658/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27627",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27627/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27627/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27627/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27627",
        "id": 2102711906,
        "node_id": "I_kwDOAAjKyc59VNZi",
        "number": 27627,
        "title": "Add an API to disable TransformControls's XYZ, XY, YZ, XZ and the extra 'x', 'y' and 'z' in the visual controls.",
        "user": {
          "login": "thecowmilk",
          "id": 43875051,
          "node_id": "MDQ6VXNlcjQzODc1MDUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/43875051?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/thecowmilk",
          "html_url": "https://github.com/thecowmilk",
          "followers_url": "https://api.github.com/users/thecowmilk/followers",
          "following_url": "https://api.github.com/users/thecowmilk/following{/other_user}",
          "gists_url": "https://api.github.com/users/thecowmilk/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/thecowmilk/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/thecowmilk/subscriptions",
          "organizations_url": "https://api.github.com/users/thecowmilk/orgs",
          "repos_url": "https://api.github.com/users/thecowmilk/repos",
          "events_url": "https://api.github.com/users/thecowmilk/events{/privacy}",
          "received_events_url": "https://api.github.com/users/thecowmilk/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-01-26T18:36:46Z",
        "updated_at": "2024-01-29T13:30:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nWhen I'm attaching `TransformControls` to an object it automatically gets 13 children which are the navigation children. By default is okay but it is very frustrating when there are many objects and you are trying to move the objects using the arrows. Looks very complicated and there is no reason for them to exist. To give more context here's a screenshot:\r\n\r\n![image](https://github.com/mrdoob/three.js/assets/43875051/0cce8d20-4ff1-431e-8504-c233504bf24e)\r\nBut okay, we can disable them(sort of) by doing this:\r\n\r\n```\r\n[228, 231, 234, 236, 237, 238, 239].forEach(axisMetal => {\r\n    const objM = gizmoMetal.translate.getObjectById(axisMetal);\r\n    objM.visible = false;\r\n    objM.layers.disable(0);\r\n});\r\n```\r\nbut this is just disabling the visibility, not the functionality which needs to be done so when there are two object near and wonder why both object are moving together check for an invisible working arrow. Also when a new object is added, the IDs change so good luck when you have 100+ objects.\r\n\r\n### Solution\r\n\r\nI think we should have the ability to disable them and by using `TransformControls` directly like this:\r\n```\r\nconst transformControlsMetal = new TransformControls(camera, renderer.domElement);\r\ntransformControlsMetal.showXYZ = false;\r\n```\r\n\r\nThis way we will disable the entire functionality of things we don't need.\r\n\r\n### Alternatives\r\n\r\nUsing this will make it a partial solution but once the IDs change then the correct IDs should be updated again.\r\n```\r\n[228, 231, 234, 236, 237, 238, 239].forEach(axisMetal => {\r\n    const objM = gizmoMetal.translate.getObjectById(axisMetal);\r\n    objM.visible = false;\r\n    objM.layers.disable(0);\r\n});\r\n```\r\n\r\n### Additional context\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27627/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27627/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27570",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27570/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27570/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27570/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27570",
        "id": 2083309910,
        "node_id": "I_kwDOAAjKyc58LMlW",
        "number": 27570,
        "title": "WebGPURenderer: Camera nodes are broken in compute shaders",
        "user": {
          "login": "RenaudRohlinger",
          "id": 15867665,
          "node_id": "MDQ6VXNlcjE1ODY3NjY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/15867665?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RenaudRohlinger",
          "html_url": "https://github.com/RenaudRohlinger",
          "followers_url": "https://api.github.com/users/RenaudRohlinger/followers",
          "following_url": "https://api.github.com/users/RenaudRohlinger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RenaudRohlinger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RenaudRohlinger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RenaudRohlinger/subscriptions",
          "organizations_url": "https://api.github.com/users/RenaudRohlinger/orgs",
          "repos_url": "https://api.github.com/users/RenaudRohlinger/repos",
          "events_url": "https://api.github.com/users/RenaudRohlinger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RenaudRohlinger/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 2328770569,
            "node_id": "MDU6TGFiZWwyMzI4NzcwNTY5",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGPU",
            "name": "WebGPU",
            "color": "0fc195",
            "default": false,
            "description": ""
          },
          {
            "id": 5167487962,
            "node_id": "LA_kwDOAAjKyc8AAAABNAGb2g",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Nodes",
            "name": "Nodes",
            "color": "B0F5EC",
            "default": false,
            "description": ""
          },
          {
            "id": 6375251443,
            "node_id": "LA_kwDOAAjKyc8AAAABe_6d8w",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/WebGL%20Backend",
            "name": "WebGL Backend",
            "color": "7E4ECB",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-16T08:35:16Z",
        "updated_at": "2024-01-24T16:50:38Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nSince the camera is never provided in the compute context the use of camera nodes such as `cameraPosition` won't work.\r\n\r\nShould we add a second parameter `camera` when calling `compute()` such as `compute(computeShader, camera)` to fix this? /cc @sunag \r\n\r\n\r\n### Code\r\n\r\n```js\r\nconst computeShader = tslFn = (() => {\r\n    const cameraPos = cameraPosition;\r\n} )(1)\r\n```\r\n\r\n### Version\r\n\r\nr160\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27570/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27570/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27538",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27538/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27538/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27538/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27538",
        "id": 2073893886,
        "node_id": "I_kwDOAAjKyc57nRv-",
        "number": 27538,
        "title": "TSL Transpiler: Missing elements",
        "user": {
          "login": "RenaudRohlinger",
          "id": 15867665,
          "node_id": "MDQ6VXNlcjE1ODY3NjY1",
          "avatar_url": "https://avatars.githubusercontent.com/u/15867665?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RenaudRohlinger",
          "html_url": "https://github.com/RenaudRohlinger",
          "followers_url": "https://api.github.com/users/RenaudRohlinger/followers",
          "following_url": "https://api.github.com/users/RenaudRohlinger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RenaudRohlinger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RenaudRohlinger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RenaudRohlinger/subscriptions",
          "organizations_url": "https://api.github.com/users/RenaudRohlinger/orgs",
          "repos_url": "https://api.github.com/users/RenaudRohlinger/repos",
          "events_url": "https://api.github.com/users/RenaudRohlinger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RenaudRohlinger/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5252109168,
            "node_id": "LA_kwDOAAjKyc8AAAABOQzTcA",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/TSL",
            "name": "TSL",
            "color": "465B1F",
            "default": false,
            "description": "Three.js Shading Language"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-01-10T08:57:23Z",
        "updated_at": "2024-01-11T02:49:44Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe TSL Transpiler seems to lack a few elements such as mat3, mat4, texelFetch, texture2D and so on. I created a sample to quickly check what's missing. \r\n<img width=\"1719\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/15867665/4505d6d8-27da-4209-aa1c-78f0cb57801a\">\r\n\r\n\r\n### Reproduction steps\r\n\r\nAdd a `mat3`, `mat4` ect and the code will not transpile properly.\r\n\r\n### Code\r\n\r\nSample generated with AI:\r\n```glsl\r\nfloat a = 1.0;\r\nvec2 b;\r\nvec3 c;\r\nvec4 d;\r\nmat3 e;\r\nmat4 f;\r\nvec4 g = texture2D();\r\nvec4 h = texture2DArray();\r\n\r\n// Basic arithmetic tests\r\nfloat i = a + 0.5;\r\nvec2 j = b + vec2(1.0, 2.0);\r\nvec3 k = c - vec3(0.5, 0.5, 0.5);\r\nvec4 l = d * vec4(2.0, 2.0, 2.0, 2.0);\r\nmat3 m = e * mat3(1.0);\r\nmat4 n = f + mat4(1.0);\r\n\r\n// Vector and matrix multiplication tests\r\nvec3 o = vec3(1.0, 0.0, 0.0) * e;\r\nvec4 p = vec4(1.0, 0.0, 0.0, 1.0) * f;\r\n\r\n// Function call tests\r\nvec4 q = texture2D(g, vec2(0.5, 0.5));\r\nvec4 r = texture2DArray(h, vec3(0.5, 0.5, 1.0));\r\n\r\n// Conditional tests\r\nif (a > 0.5) {\r\n    a = 2.0;\r\n}\r\n\r\n// Loop tests\r\nfor (int s = 0; s < 5; s++) {\r\n    a += 1.0;\r\n}\r\n\r\n// Texture access tests\r\nvec4 t = texture2D(g, vec2(a, i));\r\nvec4 u = texture2DArray(h, vec3(j.x, j.y, 0.0));\r\n\r\n// Complex expression tests\r\nvec4 v = mix(q, r, 0.5);\r\nvec3 w = normalize(vec3(p.x, p.y, p.z));\r\n\r\n// Uniform variable tests\r\nuniform mat4 uMatrix;\r\nvec4 x = uMatrix * vec4(1.0, 1.0, 1.0, 1.0);\r\n\r\n// Sampler tests\r\nuniform sampler2D uSampler;\r\nvec4 y = texture2D(uSampler, vec2(0.5, 0.5));\r\n// texelFetch tests\r\nivec2 texelCoord2D = ivec2(10, 20);\r\nvec4 z = texelFetch(uSampler, texelCoord2D, 0);\r\n\r\n// texture2DArray tests\r\nuniform sampler2DArray uSampler2DArray;\r\nvec4 aa = texture2DArray(uSampler2DArray, vec3(0.5, 0.5, 1.0));\r\n\r\n// textureCube tests\r\nuniform samplerCube uSamplerCube;\r\nvec4 ab = textureCube(uSamplerCube, vec3(1.0, 0.0, 0.0));\r\n\r\n// texture3D tests\r\nuniform sampler3D uSampler3D;\r\nvec4 ac = texture3D(uSampler3D, vec3(0.5, 0.5, 0.5));\r\n\r\n// Shadow texture tests\r\nuniform sampler2DShadow uSamplerShadow;\r\nfloat shadowCoord = 0.5;\r\nvec4 ad = shadow2D(uSamplerShadow, vec3(0.5, 0.5, shadowCoord));\r\n\r\n// More complex texelFetch test\r\nivec3 texelCoord3D = ivec3(5, 5, 1);\r\nvec4 ae = texelFetch(uSampler2DArray, texelCoord3D, 0);\r\n\r\n// Texture sampling with varying coordinates\r\nvec4 af = textureCube(uSamplerCube, normalize(c));\r\n\r\n// Testing texture3D with non-uniform coordinates\r\nvec3 nonUniformCoord = vec3(a, k.x, o.y);\r\nvec4 ag = texture3D(uSampler3D, nonUniformCoord);\r\n\r\nvec3 arr[2] = vec3[2](\r\n  vec3(0.,0.,0.),\r\n  vec3(0.,0.,0.),\r\n);\r\n\r\n#ifdef USE_UV\r\n#endif\r\n```\r\n\r\n\r\n### Live example\r\n\r\n* [webgpu_tsl_transpiler](https://threejs.org/examples/?q=tsl#webgpu_tsl_transpiler)\r\n\r\n### Version\r\n\r\nr160\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27538/reactions",
          "total_count": 2,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27538/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27498",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27498/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27498/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27498/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27498",
        "id": 2065183412,
        "node_id": "I_kwDOAAjKyc57GDK0",
        "number": 27498,
        "title": "GroundedSkybox zenit/nadir visual artifacts",
        "user": {
          "login": "hybridherbst",
          "id": 2693840,
          "node_id": "MDQ6VXNlcjI2OTM4NDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2693840?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hybridherbst",
          "html_url": "https://github.com/hybridherbst",
          "followers_url": "https://api.github.com/users/hybridherbst/followers",
          "following_url": "https://api.github.com/users/hybridherbst/following{/other_user}",
          "gists_url": "https://api.github.com/users/hybridherbst/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hybridherbst/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hybridherbst/subscriptions",
          "organizations_url": "https://api.github.com/users/hybridherbst/orgs",
          "repos_url": "https://api.github.com/users/hybridherbst/repos",
          "events_url": "https://api.github.com/users/hybridherbst/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hybridherbst/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-01-04T08:01:52Z",
        "updated_at": "2024-01-12T15:34:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nThe new approach exhibits relatively obvious typical rendering artifacts from \"just\" sampling a texture on a UVed sphere at the top and bottom:\r\n\r\n<img width=\"597\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/2693840/af3bdb06-799a-4f57-8b1a-8b40d097e74c\">\r\n<img width=\"594\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/2693840/a9b3b4b1-b9ad-4ef2-9c0b-1a88f0ea6d2c\">\r\n\r\nI think that's why typically a shader is used to sample exact values, instead of relying on UV interpolation to do its thing.\r\n\r\n(I understand bringing back a custom shader introduces some of the same complexities on why GroundProjectedSkybox was removed)\r\n\r\ncc @elalish \r\n\r\n### Reproduction steps\r\n\r\n1. Add GroundedSkybox to a scene with a typical radius\r\n2. Note artifacts\r\n\r\n### Code\r\n\r\n-\r\n\r\n### Live example\r\n\r\n-\r\n\r\n### Version\r\n\r\nr161\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27498/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27498/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27496",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27496/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27496/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27496/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27496",
        "id": 2065148611,
        "node_id": "I_kwDOAAjKyc57F6rD",
        "number": 27496,
        "title": "MaterialX: `viewdirection` node",
        "user": {
          "login": "hybridherbst",
          "id": 2693840,
          "node_id": "MDQ6VXNlcjI2OTM4NDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2693840?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hybridherbst",
          "html_url": "https://github.com/hybridherbst",
          "followers_url": "https://api.github.com/users/hybridherbst/followers",
          "following_url": "https://api.github.com/users/hybridherbst/following{/other_user}",
          "gists_url": "https://api.github.com/users/hybridherbst/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hybridherbst/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hybridherbst/subscriptions",
          "organizations_url": "https://api.github.com/users/hybridherbst/orgs",
          "repos_url": "https://api.github.com/users/hybridherbst/repos",
          "events_url": "https://api.github.com/users/hybridherbst/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hybridherbst/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5167487962,
            "node_id": "LA_kwDOAAjKyc8AAAABNAGb2g",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Nodes",
            "name": "Nodes",
            "color": "B0F5EC",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-04T07:34:26Z",
        "updated_at": "2024-01-05T23:26:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nMaterialX finally brings back non-photorealistic rendering with a new `nprlib`; right now it contains a single node, `viewdirection` with the same possible spaces as position/normal/tangent.\r\n\r\nMore here: https://github.com/AcademySoftwareFoundation/MaterialX/pull/1631\r\n\r\ncc @sunag\n\n### Solution\n\nI tried to add support for it but am not sure if the right view direction nodes already exist:\r\n\r\n```js\t\t\t\r\n} else if ( element === 'viewdirection' ) {\r\n    \r\n    const space = this.getAttribute( 'space' );\r\n    // not sure what to use here for \"view direction in world space\" and \"view direction in object space\" – these are wrong\r\n    node = space === 'world' ? positionView : positionViewDirection; \r\n\r\n}\r\n```\n\n### Alternatives\n\nEmitting transformation nodes that convert between spaces?\n\n### Additional context\n\nMaterialX PR including some (unlit) sample materials (would require #27494): \r\n- https://github.com/AcademySoftwareFoundation/MaterialX/pull/1631",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27496/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27496/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27377",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27377/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27377/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27377/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27377",
        "id": 2041750687,
        "node_id": "I_kwDOAAjKyc55sqSf",
        "number": 27377,
        "title": "Custom key bindings for pan / rotate",
        "user": {
          "login": "zkobrinsky",
          "id": 60447949,
          "node_id": "MDQ6VXNlcjYwNDQ3OTQ5",
          "avatar_url": "https://avatars.githubusercontent.com/u/60447949?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/zkobrinsky",
          "html_url": "https://github.com/zkobrinsky",
          "followers_url": "https://api.github.com/users/zkobrinsky/followers",
          "following_url": "https://api.github.com/users/zkobrinsky/following{/other_user}",
          "gists_url": "https://api.github.com/users/zkobrinsky/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/zkobrinsky/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/zkobrinsky/subscriptions",
          "organizations_url": "https://api.github.com/users/zkobrinsky/orgs",
          "repos_url": "https://api.github.com/users/zkobrinsky/repos",
          "events_url": "https://api.github.com/users/zkobrinsky/events{/privacy}",
          "received_events_url": "https://api.github.com/users/zkobrinsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-12-14T13:53:56Z",
        "updated_at": "2023-12-14T14:50:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nCurrently, shift, ctrl and meta allow the user to toggle the mouse behavior between pan and rotate. It would be great to add custom bindings to that. Space, for example, is a common UX expectation for such behavior to be able to pan.\n\n### Solution\n\nExpose these key bindings as a customizable object at the links below (and wherever else makes sense):\r\nevent.ctrlKey || event.metaKey || event.shiftKey \r\n\r\nhttps://github.com/mrdoob/three.js/blob/09fe0527a9aa5aaca7aaf17531e6c0d0efaa8c59/examples/jsm/controls/OrbitControls.js#L1085\r\n\r\nhttps://github.com/mrdoob/three.js/blob/09fe0527a9aa5aaca7aaf17531e6c0d0efaa8c59/examples/jsm/controls/OrbitControls.js#L1107\n\n### Alternatives\n\nCreate a method that would just add new custom key bindings on top of the existing ones, rather than expose the existing ones.\n\n### Additional context\n\nLove you guys",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27377/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27377/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27360",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27360/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27360/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27360/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27360",
        "id": 2036635892,
        "node_id": "I_kwDOAAjKyc55ZJj0",
        "number": 27360,
        "title": "Nodes: Nodes system throws exceptions when used with vite, `functionNode.call is not a function`",
        "user": {
          "login": "hybridherbst",
          "id": 2693840,
          "node_id": "MDQ6VXNlcjI2OTM4NDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2693840?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hybridherbst",
          "html_url": "https://github.com/hybridherbst",
          "followers_url": "https://api.github.com/users/hybridherbst/followers",
          "following_url": "https://api.github.com/users/hybridherbst/following{/other_user}",
          "gists_url": "https://api.github.com/users/hybridherbst/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hybridherbst/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hybridherbst/subscriptions",
          "organizations_url": "https://api.github.com/users/hybridherbst/orgs",
          "repos_url": "https://api.github.com/users/hybridherbst/repos",
          "events_url": "https://api.github.com/users/hybridherbst/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hybridherbst/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 5167487962,
            "node_id": "LA_kwDOAAjKyc8AAAABNAGb2g",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Nodes",
            "name": "Nodes",
            "color": "B0F5EC",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "sunag",
          "id": 502810,
          "node_id": "MDQ6VXNlcjUwMjgxMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sunag",
          "html_url": "https://github.com/sunag",
          "followers_url": "https://api.github.com/users/sunag/followers",
          "following_url": "https://api.github.com/users/sunag/following{/other_user}",
          "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
          "organizations_url": "https://api.github.com/users/sunag/orgs",
          "repos_url": "https://api.github.com/users/sunag/repos",
          "events_url": "https://api.github.com/users/sunag/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sunag/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "sunag",
            "id": 502810,
            "node_id": "MDQ6VXNlcjUwMjgxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/502810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunag",
            "html_url": "https://github.com/sunag",
            "followers_url": "https://api.github.com/users/sunag/followers",
            "following_url": "https://api.github.com/users/sunag/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunag/subscriptions",
            "organizations_url": "https://api.github.com/users/sunag/orgs",
            "repos_url": "https://api.github.com/users/sunag/repos",
            "events_url": "https://api.github.com/users/sunag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunag/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-12-11T22:25:25Z",
        "updated_at": "2023-12-23T21:16:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nI'm trying to use the Nodes system, including the MaterialX nodes, from a vite project.\r\n\r\nLocal development (unbundled) works fine, but bundling leads to errors. I was able to isolate and reproduce the issue, but I'm so far not sure if this is a three.js issue (some incorrect setup on the nodes) vs. a vite issue (something going wrong with bundling), or a combination thereof.\r\n\r\n### Reproduction steps\r\n\r\n1. Go to https://stackblitz.com/edit/vitejs-vite-9b37bu\r\n  2. This roughly uses the code from https://threejs.org/examples/?q=materialx#webgl_nodes_materialx_noise\r\n  3. There's no attempt to output something visually, it's just about getting things to run at all.\r\n4. Open the browser console\r\n5. Run `npm run start`\r\n6. Note no errors (code runs fine)\r\n7. Cancel the run by pressing Ctrl + C in the terminal\r\n8. Run `npm run preview` which builds the code and hosts the resulting bundled code\r\n9. In the console, note errors:\r\n\r\n<img width=\"521\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/2693840/e9945242-246a-4bae-9f3d-7879545b97bc\">\r\n\r\nand when names are kept during bundling, and code is not minified:\r\n<img width=\"516\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/2693840/3173f40f-ecf6-449d-861c-1dd02988b461\">\r\n\r\nI was able to track this down to FunctionNodes:\r\n<img width=\"690\" alt=\"image\" src=\"https://github.com/mrdoob/three.js/assets/2693840/608f94f8-1794-46b4-bc58-db187407fb03\">\r\nand `functionNode.call` being `undefined` in a production build vs. in local development, but I'm not sure what may be causing this.\r\n\r\nI'm not aware of a workaround for how to use the nodes/MaterialX system with a bundler at the moment.\r\n\r\n### Live example\r\n\r\n* https://stackblitz.com/edit/vitejs-vite-9b37bu\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nr159\r\n\r\n### Device\r\n\r\nDesktop, Mobile\r\n\r\n### Browser\r\n\r\nChrome, Safari\r\n\r\n### OS\r\n\r\nWindows, MacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27360/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27360/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27301",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27301/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27301/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27301/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27301",
        "id": 2023534493,
        "node_id": "I_kwDOAAjKyc54nK-d",
        "number": 27301,
        "title": "Cache clobbering when loading same file through `FileLoader`, `ImageBitmapLoader`, or `ImageLoader`",
        "user": {
          "login": "sxxov",
          "id": 50891910,
          "node_id": "MDQ6VXNlcjUwODkxOTEw",
          "avatar_url": "https://avatars.githubusercontent.com/u/50891910?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sxxov",
          "html_url": "https://github.com/sxxov",
          "followers_url": "https://api.github.com/users/sxxov/followers",
          "following_url": "https://api.github.com/users/sxxov/following{/other_user}",
          "gists_url": "https://api.github.com/users/sxxov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sxxov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sxxov/subscriptions",
          "organizations_url": "https://api.github.com/users/sxxov/orgs",
          "repos_url": "https://api.github.com/users/sxxov/repos",
          "events_url": "https://api.github.com/users/sxxov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sxxov/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-12-04T10:38:39Z",
        "updated_at": "2023-12-04T10:58:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nCurrently, all these 3 classes use the `THREE.Cache` data structure to store their caches. However, whilst all of them return different values, they all key by URL & it means loading the same URL the second time through a different loader will produce an incorrect result.\n\n### Reproduction steps\n\n1. Load a file using `FileLoader`\r\n2. Load a file using `ImageBitmapLoader`\r\n3. The returned value from `ImageBitmapLoader` will be the value from `FileLoader`, instead of an `ImageBitmap`\r\n\n\n### Code\n\n```js\r\nimport * as THREE from 'three';\r\n\r\nTHREE.Cache.enabled = true;\r\n\r\nconst fileLoader = new THREE.FileLoader();\r\nfile = await (new Promise((resolve) => {\r\n\tfileLoader.load(url, (v) => {\r\n\t\tresolve(v);\r\n\t});\r\n}));\r\n\r\nconst imageBitmapLoader = new THREE.ImageBitmapLoader();\r\nimageBitmap = await (new Promise((resolve) => {\r\n\timageBitmapLoader.load(url, (v) => {\r\n\t\tresolve(v);\r\n\t});\r\n}));\r\n\r\nif (file === imageBitmap) throw new Error('Incorrect cached data!');\r\n```\r\n\n\n### Live example\n\n* [Svelte playground](https://svelte.dev/repl/4ff1ff176ff74704a8b07c4a1988d018?version=4.2.8)\r\n\r\nWhen on the page, press `Enable cache` to see the incorrect result.\r\n\r\n> Sorry, I'm not familiar with JSFiddle!\r\n\n\n### Screenshots\n\n_No response_\n\n### Version\n\nr159\n\n### Device\n\n_No response_\n\n### Browser\n\n_No response_\n\n### OS\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27301/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27301/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27290",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27290/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27290/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27290/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27290",
        "id": 2019852797,
        "node_id": "I_kwDOAAjKyc54ZIH9",
        "number": 27290,
        "title": "SpotLight map affected by distance updates",
        "user": {
          "login": "kalegd",
          "id": 8096455,
          "node_id": "MDQ6VXNlcjgwOTY0NTU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8096455?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/kalegd",
          "html_url": "https://github.com/kalegd",
          "followers_url": "https://api.github.com/users/kalegd/followers",
          "following_url": "https://api.github.com/users/kalegd/following{/other_user}",
          "gists_url": "https://api.github.com/users/kalegd/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/kalegd/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/kalegd/subscriptions",
          "organizations_url": "https://api.github.com/users/kalegd/orgs",
          "repos_url": "https://api.github.com/users/kalegd/repos",
          "events_url": "https://api.github.com/users/kalegd/events{/privacy}",
          "received_events_url": "https://api.github.com/users/kalegd/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-12-01T01:21:35Z",
        "updated_at": "2023-12-08T23:58:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nI recently noticed that when updating the distance of a spotlight to 0, the texture shined on a mesh is affected by whether the distance to the mesh prior was larger or smaller than the previous spotlight.distance value. When the prior spotlight.distance value was smaller than the distance to the mesh, the map is not reflected on the object. If it was larger, the map is still there as expected. Please see the jsfiddle below for an example\r\n\r\njsfiddle: https://jsfiddle.net/3rj7u8n9/99/\r\n\r\nI'm assuming this is not expected behavior and could be a bug? I've tested this on both my Macbook Pro with Chrome and on iOS Safari and the behavior is the same on both\r\n\n\n### Reproduction steps\n\n1. Create a spotlight with a map set and any mesh to shine the light on\r\n2. Set the spotlight distance to some value less than the distance to the mesh\r\n3. Set the spotlight distance to 0 (the map is no longer shown on the mesh\r\n\n\n### Code\n\n```js\r\n// Please see jsfiddle for example\r\n```\r\n\n\n### Live example\n\nhttps://jsfiddle.net/3rj7u8n9/99/\n\n### Screenshots\n\n_No response_\n\n### Version\n\nr159\n\n### Device\n\nDesktop, Mobile\n\n### Browser\n\nChrome, Safari\n\n### OS\n\nMacOS, iOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27290/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27290/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27203",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27203/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27203/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27203/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27203",
        "id": 1998941655,
        "node_id": "I_kwDOAAjKyc53JW3X",
        "number": 27203,
        "title": "BatchedMesh: Provide approach for sharing geometry and transforms between BatchedMesh",
        "user": {
          "login": "gkjohnson",
          "id": 734200,
          "node_id": "MDQ6VXNlcjczNDIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/734200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkjohnson",
          "html_url": "https://github.com/gkjohnson",
          "followers_url": "https://api.github.com/users/gkjohnson/followers",
          "following_url": "https://api.github.com/users/gkjohnson/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkjohnson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkjohnson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkjohnson/subscriptions",
          "organizations_url": "https://api.github.com/users/gkjohnson/orgs",
          "repos_url": "https://api.github.com/users/gkjohnson/repos",
          "events_url": "https://api.github.com/users/gkjohnson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkjohnson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 58672,
            "node_id": "MDU6TGFiZWw1ODY3Mg==",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Enhancement",
            "name": "Enhancement",
            "color": "0e8a16",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/mrdoob/three.js/milestones/4",
          "html_url": "https://github.com/mrdoob/three.js/milestone/4",
          "labels_url": "https://api.github.com/repos/mrdoob/three.js/milestones/4/labels",
          "id": 3044279,
          "node_id": "MDk6TWlsZXN0b25lMzA0NDI3OQ==",
          "number": 4,
          "title": "r???",
          "description": "",
          "creator": {
            "login": "mrdoob",
            "id": 97088,
            "node_id": "MDQ6VXNlcjk3MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/97088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrdoob",
            "html_url": "https://github.com/mrdoob",
            "followers_url": "https://api.github.com/users/mrdoob/followers",
            "following_url": "https://api.github.com/users/mrdoob/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrdoob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrdoob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrdoob/subscriptions",
            "organizations_url": "https://api.github.com/users/mrdoob/orgs",
            "repos_url": "https://api.github.com/users/mrdoob/repos",
            "events_url": "https://api.github.com/users/mrdoob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrdoob/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 64,
          "closed_issues": 0,
          "state": "open",
          "created_at": "2018-01-17T23:51:52Z",
          "updated_at": "2024-05-24T06:21:56Z",
          "due_on": null,
          "closed_at": null
        },
        "comments": 3,
        "created_at": "2023-11-17T11:51:19Z",
        "updated_at": "2023-12-05T04:20:07Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\n\nRight now you can render a number of geometries with a single material using a BatchedMesh but you may want to swap materials of an individual mesh for things like selection, highlighting, etc. Right now that means creating and maintaining a completely different BatchedMesh which is slower and takes more memory. Instead it would be best if two BatchedMeshes could share geometry and potentially transform data so they can both specify different materials and visibility arrays.\n\n### Solution\n\nI'm not exactly sure of some of the options here - but one solution is to add a \"BatchedBufferGeometry\" object that BatchedMesh references and stores all the geometry, draw ranges, etc. The BatchedMesh would still bookkeep the multidraw buffers, etc:\r\n\r\n```js\r\nconst mesh1 = new BatchedMesh( maxGeometryCount, maxVertexCount, maxIndexCount, material1 );\r\nconst index = mesh1.geometry.addGeometry( ... );\r\nmesh1.setMatrixAt( ... );\r\n\r\nconst mesh2 = new BatchedMesh( mesh1.geometry, material2 );\r\n\r\nmesh1.setVisibilityAt( 0, false );\r\nmesh1.setVisibilityAt( 1, true );\r\nscene.add( mesh1, mesh2 );\r\n```\n\n### Alternatives\n\nInstead the end user could just use something like a proxy or wrapper class that forwards all common information between the BatchedMeshes while reimplementing all needed:\r\n\r\n```js\r\nconst mesh1 = new BatchedMesh( ... );\r\nconst mesh2 = new BatchedMeshWrapper( mesh1 );\r\n```\r\n\r\nOr - possibly the better approach - BatchedMesh could support different and arbitrary material properties and textures but this can get complicated. It's possible this would be best done with node materials in the future.\n\n### Additional context\n\nUser mentioned this need in three-mesh-bvh: https://github.com/gkjohnson/three-mesh-bvh/issues/513",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27203/reactions",
          "total_count": 4,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 4,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27203/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27170",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27170/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27170/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27170/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27170",
        "id": 1987361737,
        "node_id": "I_kwDOAAjKyc52dLvJ",
        "number": 27170,
        "title": "InstancedMesh: Proposal to support sorting, frustum culling",
        "user": {
          "login": "gkjohnson",
          "id": 734200,
          "node_id": "MDQ6VXNlcjczNDIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/734200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkjohnson",
          "html_url": "https://github.com/gkjohnson",
          "followers_url": "https://api.github.com/users/gkjohnson/followers",
          "following_url": "https://api.github.com/users/gkjohnson/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkjohnson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkjohnson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkjohnson/subscriptions",
          "organizations_url": "https://api.github.com/users/gkjohnson/orgs",
          "repos_url": "https://api.github.com/users/gkjohnson/repos",
          "events_url": "https://api.github.com/users/gkjohnson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkjohnson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 175827,
            "node_id": "MDU6TGFiZWwxNzU4Mjc=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Suggestion",
            "name": "Suggestion",
            "color": "ffffcf",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 24,
        "created_at": "2023-11-10T10:34:52Z",
        "updated_at": "2023-12-10T19:04:47Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nWith the current InstancedMesh implementation it's not possible to easily or quickly sort individual instances to improve opaque overdraw for performance or transparency sorting.\r\n\r\nHere are a couple posts referring to the transparency sorting issues with InstancedMesh: [ref1](https://discourse.threejs.org/t/transparent-instancedmesh-rendering-bug-with-different-positions/57111), [ref2](https://discourse.threejs.org/t/is-it-possible-to-set-varying-opacity-for-objects-inside-a-instancedmesh-filled-with-boxbuffergeometry-meshpongmaterial-cubes/19181)\r\n\r\n\r\n\r\n### Solution\r\n\r\nSimilar to how the `WebGL_multi_draw` extension is used for BatchedMesh, there are \"instanced\" variants of the multidraw functions that allow for sorting the order in which instanced draws are performed while retaining a single draw call. \r\n\r\nIf desired we could switch InstancedMesh over to use the multidraw extension, as well, and provide support for sorting objects within a single InstancedMesh. See #27168 (adds sorting objects for BatchedMesh) for a reference on how this might be implemented for InstancedMesh.\r\n\r\nThe drawbacks are still that `WebGL_multi_draw` is not supported in Firefox so fully switching over to multidraw would remove InstancedMesh support for FF.\r\n\r\n### Alternatives\r\n\r\n- Add a separate MultiDrawInstancedMesh\r\n- Do nothing 🤷 \r\n\r\n### Additional context\r\n\r\ncc @WestLangley @donmccurdy ",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27170/reactions",
          "total_count": 13,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 13,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27170/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27166",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27166/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27166/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27166/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27166",
        "id": 1986961453,
        "node_id": "I_kwDOAAjKyc52bqAt",
        "number": 27166,
        "title": "Allow to control intensity of SSR",
        "user": {
          "login": "NoriyukiIchijo",
          "id": 74341299,
          "node_id": "MDQ6VXNlcjc0MzQxMjk5",
          "avatar_url": "https://avatars.githubusercontent.com/u/74341299?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/NoriyukiIchijo",
          "html_url": "https://github.com/NoriyukiIchijo",
          "followers_url": "https://api.github.com/users/NoriyukiIchijo/followers",
          "following_url": "https://api.github.com/users/NoriyukiIchijo/following{/other_user}",
          "gists_url": "https://api.github.com/users/NoriyukiIchijo/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/NoriyukiIchijo/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/NoriyukiIchijo/subscriptions",
          "organizations_url": "https://api.github.com/users/NoriyukiIchijo/orgs",
          "repos_url": "https://api.github.com/users/NoriyukiIchijo/repos",
          "events_url": "https://api.github.com/users/NoriyukiIchijo/events{/privacy}",
          "received_events_url": "https://api.github.com/users/NoriyukiIchijo/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T05:54:43Z",
        "updated_at": "2023-11-10T09:29:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nSSR adds reality to rendering and despite I'm new to three.js, I feel its SSR post effect is fine.\r\nBut you can only control on or off of the \"metalness\" of each object by applying substitute material below depending on if it's in \"selects\" or not.\r\n```\r\nSSRPass.js:\r\n\r\n// metalnessOn material\r\n\r\nthis.metalnessOnMaterial = new MeshBasicMaterial({\r\n    color: 'white'\r\n});\r\n\r\n// metalnessOff material\r\n\r\nthis.metalnessOffMaterial = new MeshBasicMaterial({\r\n    color: 'black'\r\n});\r\n```\r\nAnd it is uses like switch as below.\r\n```\r\nSSRShader.js:\r\n\r\nvoid main(){\r\n    #ifdef SELECTIVE\r\n        float metalness=texture2D(tMetalness,vUv).r;\r\n        if(metalness==0.) return;\r\n    #endif\r\n```\r\nSo the scene tends to be shown too metallic.\n\n### Solution\n\nThe workaround I use is to make intermediate materials like\r\n```\r\nSSRPass.js:\r\n\r\n// withMetalness material\r\n\r\nthis.withMetalnessMaterial = [];\r\nfor (let i = 0; i < 256; i++) {\r\n    const rgb = i / 255.0;\r\n    this.withMetalnessMaterial[i] = new MeshBasicMaterial({\r\n        color: new Color(rgb, rgb, rgb),\r\n    });\r\n}\r\n```\r\nand use it instead of metalnessOnMaterial like\r\n```\r\nif (this._selects.includes(child)) {\r\n\r\n     // child.material = this.metalnessOnMaterial;\r\n    const metalness = child.material.metalness ?? 0;\r\n    child.material = this.withMetalnessMaterial[Math.round(metalness * 255)];\r\n    \r\n} else {\r\n\r\n    child.material = this.metalnessOffMaterial;\r\n\r\n}\r\n```\r\nThen use it as below.\r\n```\r\nSSRShader.js:\r\n\r\ngl_FragColor.a=op * metalness;\r\n```\r\n\n\n### Alternatives\n\nAs I said, I'm new to three.js thus there might be better or even existing solution.\n\n### Additional context\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27166/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27166/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27110",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27110/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27110/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27110/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27110",
        "id": 1976126543,
        "node_id": "I_kwDOAAjKyc51yUxP",
        "number": 27110,
        "title": "OrbitControls: `zoomToCursor` weird behavior after certain rotations.",
        "user": {
          "login": "alessiocancian",
          "id": 18497523,
          "node_id": "MDQ6VXNlcjE4NDk3NTIz",
          "avatar_url": "https://avatars.githubusercontent.com/u/18497523?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/alessiocancian",
          "html_url": "https://github.com/alessiocancian",
          "followers_url": "https://api.github.com/users/alessiocancian/followers",
          "following_url": "https://api.github.com/users/alessiocancian/following{/other_user}",
          "gists_url": "https://api.github.com/users/alessiocancian/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/alessiocancian/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/alessiocancian/subscriptions",
          "organizations_url": "https://api.github.com/users/alessiocancian/orgs",
          "repos_url": "https://api.github.com/users/alessiocancian/repos",
          "events_url": "https://api.github.com/users/alessiocancian/events{/privacy}",
          "received_events_url": "https://api.github.com/users/alessiocancian/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1100658764,
            "node_id": "MDU6TGFiZWwxMTAwNjU4NzY0",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Addons",
            "name": "Addons",
            "color": "f4d564",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-03T12:42:07Z",
        "updated_at": "2023-11-14T17:43:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\n\nI found this using zoomToCursor enabled with screenSpacePanning set to false, after certain rotations the zoom to cursor become inconsistent and sometimes goes back to normal after rotating again.\r\nI was able to reproduce this in the map controls example too.\n\n### Reproduction steps\n\n1. go to [map example](https://threejs.org/examples/#misc_controls_map)\r\n2. enable zoomToCursor\r\n3. change rotation to go the lowest possible in the city (there may be other ways but this make it happen consistently)\r\n4. try to zoom\r\n\n\n### Code\n\nhttps://threejs.org/examples/#misc_controls_map\n\n### Live example\n\nhttps://threejs.org/examples/#misc_controls_map\n\n### Screenshots\n\nhttps://github.com/mrdoob/three.js/assets/18497523/77b1c234-bb29-413d-b3e0-a98e33cfe331\r\n\r\n\n\n### Version\n\nr158\n\n### Device\n\nDesktop\n\n### Browser\n\nChrome\n\n### OS\n\nMacOS",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27110/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27110/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27051",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27051/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27051/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27051/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27051",
        "id": 1960327999,
        "node_id": "I_kwDOAAjKyc502Ds_",
        "number": 27051,
        "title": "GLTFLoader Animate Wrong Mesh",
        "user": {
          "login": "feryandi",
          "id": 9153578,
          "node_id": "MDQ6VXNlcjkxNTM1Nzg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9153578?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/feryandi",
          "html_url": "https://github.com/feryandi",
          "followers_url": "https://api.github.com/users/feryandi/followers",
          "following_url": "https://api.github.com/users/feryandi/following{/other_user}",
          "gists_url": "https://api.github.com/users/feryandi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/feryandi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/feryandi/subscriptions",
          "organizations_url": "https://api.github.com/users/feryandi/orgs",
          "repos_url": "https://api.github.com/users/feryandi/repos",
          "events_url": "https://api.github.com/users/feryandi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/feryandi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 854373772,
            "node_id": "MDU6TGFiZWw4NTQzNzM3NzI=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Loaders",
            "name": "Loaders",
            "color": "5ecee5",
            "default": false,
            "description": ""
          },
          {
            "id": 2831516581,
            "node_id": "MDU6TGFiZWwyODMxNTE2NTgx",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Needs%20Investigation",
            "name": "Needs Investigation",
            "color": "43FCDE",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-25T01:12:31Z",
        "updated_at": "2023-10-25T01:53:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nGLTFLoader will animate the wrong mesh when two meshes have the same name. This is possible when the mesh contains more than primitives and will get assigned unique name by the library.\r\n\r\n\r\n\r\n### Reproduction steps\r\n\r\n1. Create a GLTF file with atleast 2 meshes.\r\n2. One mesh with two primitives, the other with only one primitives.\r\n3. Add an animation to the second mesh.\r\n4. Name the first mesh \"object\", and the other mesh \"object_1\".\r\n5. The name will collide and GLTFLoader will animate the wrong mesh.\r\n\r\nSample GLTF: https://drive.google.com/uc?id=14vWv7eXHKmRbsg5Q2-QQOAAdUQ48HRhk\r\n\r\n\r\n### Code\r\n\r\n```js\r\nimport * as THREE from 'three';\r\n\r\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\r\nimport { RoomEnvironment } from 'three/addons/environments/RoomEnvironment.js';\r\n\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\r\nimport { DRACOLoader } from 'three/addons/loaders/DRACOLoader.js';\r\n\r\nlet mixer;\r\n\r\nconst clock = new THREE.Clock();\r\n\r\nconst renderer = new THREE.WebGLRenderer( { antialias: true } );\r\nrenderer.setPixelRatio( window.devicePixelRatio );\r\nrenderer.setSize( window.innerWidth, window.innerHeight );\r\ndocument.body.appendChild( renderer.domElement );\r\n\r\nconst pmremGenerator = new THREE.PMREMGenerator( renderer );\r\n\r\nconst scene = new THREE.Scene();\r\nscene.background = new THREE.Color( 0xbfe3dd );\r\nscene.environment = pmremGenerator.fromScene( new RoomEnvironment( renderer ), 0.04 ).texture;\r\n\r\nconst camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 100 );\r\ncamera.position.set( 5, 2, 8 );\r\n\r\nconst controls = new OrbitControls( camera, renderer.domElement );\r\ncontrols.target.set( 0, 0.5, 0 );\r\ncontrols.update();\r\ncontrols.enablePan = false;\r\ncontrols.enableDamping = true;\r\n\r\nconst dracoLoader = new DRACOLoader();\r\ndracoLoader.setDecoderPath( 'jsm/libs/draco/gltf/' );\r\n\r\nconst loader = new GLTFLoader();\r\nloader.setDRACOLoader( dracoLoader );\r\nloader.load( 'models/gltf/tri.gltf', function ( gltf ) {\r\n\r\n\tconst model = gltf.scene;\r\n\tmodel.position.set( 1, 1, 0 );\r\n\tscene.add( model );\r\n\tmixer = new THREE.AnimationMixer( model );\r\n\tmixer.clipAction( gltf.animations[ 0 ] ).play();\r\n\tanimate();\r\n\r\n}, undefined, function ( e ) {\r\n\tconsole.error( e );\r\n} );\r\n\r\n\r\nwindow.onresize = function () {\r\n\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\tcamera.updateProjectionMatrix();\r\n\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n};\r\n\r\nfunction animate() {\r\n\trequestAnimationFrame( animate );\r\n\tconst delta = clock.getDelta();\r\n\tmixer.update( delta );\r\n\tcontrols.update();\r\n\tstats.update();\r\n\trenderer.render( scene, camera );\r\n}\r\n```\r\n\r\n\r\n### Live example\r\n\r\n* [jsfiddle-latest-release](https://jsfiddle.net/g3atw6k5/)\r\n* [jsfiddle-dev](https://jsfiddle.net/hjqw94c5/)\r\n\r\n\r\n### Screenshots\r\n\r\nLeft: Three.js with GLTFLoader\r\nRight: Windows 3D Viewer\r\n\r\nhttps://github.com/mrdoob/three.js/assets/9153578/fa22db66-2ac2-4feb-bfbe-550677f791c5\r\n\r\n\r\n\r\n### Version\r\n\r\nr157\r\n\r\n### Device\r\n\r\nDesktop\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nWindows",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27051/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27051/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/mrdoob/three.js/issues/27034",
        "repository_url": "https://api.github.com/repos/mrdoob/three.js",
        "labels_url": "https://api.github.com/repos/mrdoob/three.js/issues/27034/labels{/name}",
        "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27034/comments",
        "events_url": "https://api.github.com/repos/mrdoob/three.js/issues/27034/events",
        "html_url": "https://github.com/mrdoob/three.js/issues/27034",
        "id": 1956884113,
        "node_id": "I_kwDOAAjKyc50o66R",
        "number": 27034,
        "title": "Documentation for add-on content",
        "user": {
          "login": "omerKamran2",
          "id": 66516627,
          "node_id": "MDQ6VXNlcjY2NTE2NjI3",
          "avatar_url": "https://avatars.githubusercontent.com/u/66516627?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/omerKamran2",
          "html_url": "https://github.com/omerKamran2",
          "followers_url": "https://api.github.com/users/omerKamran2/followers",
          "following_url": "https://api.github.com/users/omerKamran2/following{/other_user}",
          "gists_url": "https://api.github.com/users/omerKamran2/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/omerKamran2/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/omerKamran2/subscriptions",
          "organizations_url": "https://api.github.com/users/omerKamran2/orgs",
          "repos_url": "https://api.github.com/users/omerKamran2/repos",
          "events_url": "https://api.github.com/users/omerKamran2/events{/privacy}",
          "received_events_url": "https://api.github.com/users/omerKamran2/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 911721310,
            "node_id": "MDU6TGFiZWw5MTE3MjEzMTA=",
            "url": "https://api.github.com/repos/mrdoob/three.js/labels/Documentation",
            "name": "Documentation",
            "color": "137d89",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-23T10:49:40Z",
        "updated_at": "2023-10-29T10:25:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\n\r\nHello, Three.js community,\r\n\r\nI'd like to request your input and guidance on the addition of documentation for addon features under the path: `three/examples/jsm/`. I noticed that most of the add-on stuff isn't documented. \r\n\r\n\r\n### Solution\r\n\r\nPerhaps I can create a fork and get started on the documentation and others can pitch in? I believe that having comprehensive documentation for these feature would be a valuable addition to the Three.js docs.\r\n\r\nAlso, before I begin the documentation process, I wanted to confirm if anyone in the community is already working on documenting this feature or if there are existing open pull requests related to it. I'd like to avoid duplicating efforts. If there are specific guidelines, formatting requirements, or style preferences for contributing to the Three.js documentation, please let me know. I want to ensure that the documentation aligns seamlessly with the official documentation.",
        "reactions": {
          "url": "https://api.github.com/repos/mrdoob/three.js/issues/27034/reactions",
          "total_count": 2,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/mrdoob/three.js/issues/27034/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      }
    ]
  },
  "error": null
}